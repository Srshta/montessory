[{"C:\\montessori\\montessori_ui\\src\\index.js":"1","C:\\montessori\\montessori_ui\\src\\serviceWorker.js":"2","C:\\montessori\\montessori_ui\\src\\components\\App.js":"3","C:\\montessori\\montessori_ui\\src\\context\\LayoutContext.js":"4","C:\\montessori\\montessori_ui\\src\\context\\UserContext.js":"5","C:\\montessori\\montessori_ui\\src\\themes\\index.js":"6","C:\\montessori\\montessori_ui\\src\\services\\CategoryServices.js":"7","C:\\montessori\\montessori_ui\\src\\pages\\dashboard\\SchoolRegistration.js":"8","C:\\montessori\\montessori_ui\\src\\components\\LoginLayout\\LoginLayout.js":"9","C:\\montessori\\montessori_ui\\src\\pages\\login\\Login.js":"10","C:\\montessori\\montessori_ui\\src\\components\\Layout\\Layout.js":"11","C:\\montessori\\montessori_ui\\src\\pages\\error\\Error.js":"12","C:\\montessori\\montessori_ui\\src\\themes\\default.js":"13","C:\\montessori\\montessori_ui\\src\\services\\httpServices.js":"14","C:\\montessori\\montessori_ui\\src\\components\\LoginHeader\\LoginHeader.js":"15","C:\\montessori\\montessori_ui\\src\\pages\\error\\styles.js":"16","C:\\montessori\\montessori_ui\\src\\components\\UserAvatar\\UserAvatar.js":"17","C:\\montessori\\montessori_ui\\src\\components\\UserAvatar\\styles.js":"18","C:\\montessori\\montessori_ui\\src\\components\\Wrappers\\Wrappers.js":"19","C:\\montessori\\montessori_ui\\src\\components\\Layout\\styles.js":"20","C:\\montessori\\montessori_ui\\src\\pages\\dashboard\\reportofactivities.js":"21","C:\\montessori\\montessori_ui\\src\\pages\\dashboard\\reports.js":"22","C:\\montessori\\montessori_ui\\src\\pages\\dashboard\\Attendence.js":"23","C:\\montessori\\montessori_ui\\src\\pages\\dashboard\\StudentDetails.js":"24","C:\\montessori\\montessori_ui\\src\\pages\\dashboard\\SubActivity.js":"25","C:\\montessori\\montessori_ui\\src\\pages\\dashboard\\ActivityTabel.js":"26","C:\\montessori\\montessori_ui\\src\\pages\\dashboard\\CalelnderEvents.js":"27","C:\\montessori\\montessori_ui\\src\\pages\\dashboard\\CreateEvents.js":"28","C:\\montessori\\montessori_ui\\src\\pages\\dashboard\\StudentActivity.js":"29","C:\\montessori\\montessori_ui\\src\\pages\\dashboard\\AddClass.js":"30","C:\\montessori\\montessori_ui\\src\\pages\\dashboard\\Teacher.js":"31","C:\\montessori\\montessori_ui\\src\\pages\\dashboard\\StudentForm.js":"32","C:\\montessori\\montessori_ui\\src\\pages\\dashboard\\Locality\\Service\\activityService.js":"33","C:\\montessori\\montessori_ui\\src\\pages\\login\\styles.js":"34","C:\\montessori\\montessori_ui\\src\\components\\PageTitle\\PageTitle.js":"35","C:\\montessori\\montessori_ui\\src\\pages\\charts\\Charts.js":"36","C:\\montessori\\montessori_ui\\src\\pages\\maps\\Maps.js":"37","C:\\montessori\\montessori_ui\\src\\pages\\icons\\Icons.js":"38","C:\\montessori\\montessori_ui\\src\\components\\LoginLayout\\styles.js":"39","C:\\montessori\\montessori_ui\\src\\pages\\typography\\Typography.js":"40","C:\\montessori\\montessori_ui\\src\\components\\Sidebar\\Sidebar.js":"41","C:\\montessori\\montessori_ui\\src\\pages\\notifications\\Notifications.js":"42","C:\\montessori\\montessori_ui\\src\\components\\Header\\Header.js":"43","C:\\montessori\\montessori_ui\\src\\pages\\dashboard\\mock.js":"44","C:\\montessori\\montessori_ui\\src\\components\\Sidebar\\components\\Dot.js":"45","C:\\montessori\\montessori_ui\\src\\pages\\dashboard\\styles.js":"46","C:\\montessori\\montessori_ui\\src\\pages\\dashboard\\components\\BigStat\\BigStat.js":"47","C:\\montessori\\montessori_ui\\src\\pages\\dashboard\\Locality\\Service\\addClassService.js":"48","C:\\montessori\\montessori_ui\\src\\pages\\dashboard\\Locality\\Service\\studentService.js":"49","C:\\montessori\\montessori_ui\\src\\components\\Widget\\Widget.js":"50","C:\\montessori\\montessori_ui\\src\\pages\\dashboard\\Locality\\Service\\httpService.js":"51","C:\\montessori\\montessori_ui\\src\\components\\PageTitle\\styles.js":"52","C:\\montessori\\montessori_ui\\src\\pages\\icons\\styles.js":"53","C:\\montessori\\montessori_ui\\src\\pages\\maps\\styles.js":"54","C:\\montessori\\montessori_ui\\src\\pages\\charts\\components\\ApexHeatmap.js":"55","C:\\montessori\\montessori_ui\\src\\pages\\charts\\components\\ApexLineChart.js":"56","C:\\montessori\\montessori_ui\\src\\components\\Header\\styles.js":"57","C:\\montessori\\montessori_ui\\src\\pages\\notifications\\styles.js":"58","C:\\montessori\\montessori_ui\\src\\components\\Sidebar\\styles.js":"59","C:\\montessori\\montessori_ui\\src\\components\\Notification\\Notification.js":"60","C:\\montessori\\montessori_ui\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js":"61","C:\\montessori\\montessori_ui\\src\\pages\\typography\\styles.js":"62","C:\\montessori\\montessori_ui\\src\\pages\\dashboard\\components\\BigStat\\styles.js":"63","C:\\montessori\\montessori_ui\\src\\components\\Widget\\styles.js":"64","C:\\montessori\\montessori_ui\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js":"65","C:\\montessori\\montessori_ui\\src\\components\\Notification\\styles.js":"66","C:\\montessori\\montessori_ui\\src\\pages\\dashboard\\Locality\\Service\\teacherService.js":"67","C:\\montessori\\montessori_ui\\src\\pages\\dashboard\\Locality\\Service\\calelnderEventsService.js":"68","C:\\montessori\\montessori_ui\\src\\pages\\dashboard\\Locality\\Service\\activityTabelService.js":"69","C:\\montessori\\montessori_ui\\src\\pages\\dashboard\\Locality\\Service\\subActivityService.js":"70","C:\\montessori\\montessori_ui\\src\\pages\\dashboard\\Locality\\Service\\attendenceService.js":"71","C:\\montessori\\montessori_ui\\src\\pages\\dashboard\\Locality\\Service\\schooleRegistration.js":"72","C:\\montessori\\montessori_ui\\src\\pages\\dashboard\\Dashboard.js":"73","C:\\montessori\\montessori_ui\\src\\services\\CityServices.js":"74","C:\\montessori\\montessori_ui\\src\\pages\\dashboard\\SuperActivity.js":"75","C:\\montessori\\montessori_ui\\src\\pages\\dashboard\\Locality\\Service\\superActivityService.js":"76","C:\\montessori\\montessori_ui\\src\\pages\\dashboard\\ActivityExpected.js":"77","C:\\montessori\\montessori_ui\\src\\pages\\dashboard\\AgeReports.js":"78","C:\\montessori\\montessori_ui\\src\\Excelexport.js":"79","C:\\montessori\\montessori_ui\\src\\pages\\dashboard\\SpecialObservation.js":"80","C:\\montessori\\montessori_ui\\src\\pages\\dashboard\\Locality\\Service\\specialObservationService.js":"81"},{"size":896,"mtime":1672749419634,"results":"82","hashOfConfig":"83"},{"size":5083,"mtime":1662566432974,"results":"84","hashOfConfig":"83"},{"size":1999,"mtime":1672750199389,"results":"85","hashOfConfig":"83"},{"size":1444,"mtime":1662566432935,"results":"86","hashOfConfig":"83"},{"size":2412,"mtime":1681106581876,"results":"87","hashOfConfig":"83"},{"size":534,"mtime":1662566432977,"results":"88","hashOfConfig":"83"},{"size":1031,"mtime":1677597963497,"results":"89","hashOfConfig":"83"},{"size":14912,"mtime":1680928897893,"results":"90","hashOfConfig":"83"},{"size":5280,"mtime":1672750116376,"results":"91","hashOfConfig":"83"},{"size":6454,"mtime":1681105882808,"results":"92","hashOfConfig":"83"},{"size":8101,"mtime":1679389499835,"results":"93","hashOfConfig":"83"},{"size":1626,"mtime":1662566432950,"results":"94","hashOfConfig":"83"},{"size":3127,"mtime":1662566432976,"results":"95","hashOfConfig":"83"},{"size":1179,"mtime":1681321872263,"results":"96","hashOfConfig":"83"},{"size":5646,"mtime":1681105670739,"results":"97","hashOfConfig":"83"},{"size":1395,"mtime":1662566432952,"results":"98","hashOfConfig":"83"},{"size":620,"mtime":1662566432929,"results":"99","hashOfConfig":"83"},{"size":291,"mtime":1662566432930,"results":"100","hashOfConfig":"83"},{"size":3971,"mtime":1662566432933,"results":"101","hashOfConfig":"83"},{"size":710,"mtime":1662566432914,"results":"102","hashOfConfig":"83"},{"size":15773,"mtime":1681192262530,"results":"103","hashOfConfig":"83"},{"size":15958,"mtime":1681202960143,"results":"104","hashOfConfig":"83"},{"size":11577,"mtime":1677133639130,"results":"105","hashOfConfig":"83"},{"size":9659,"mtime":1681121943276,"results":"106","hashOfConfig":"83"},{"size":16572,"mtime":1681355388107,"results":"107","hashOfConfig":"83"},{"size":13069,"mtime":1678687883911,"results":"108","hashOfConfig":"83"},{"size":4759,"mtime":1681121236646,"results":"109","hashOfConfig":"83"},{"size":9201,"mtime":1681115951312,"results":"110","hashOfConfig":"83"},{"size":36706,"mtime":1681115632408,"results":"111","hashOfConfig":"83"},{"size":9443,"mtime":1675761124290,"results":"112","hashOfConfig":"83"},{"size":18947,"mtime":1681114979362,"results":"113","hashOfConfig":"83"},{"size":21109,"mtime":1677220354883,"results":"114","hashOfConfig":"83"},{"size":1673,"mtime":1681121996470,"results":"115","hashOfConfig":"83"},{"size":3281,"mtime":1662566432962,"results":"116","hashOfConfig":"83"},{"size":447,"mtime":1662566432918,"results":"117","hashOfConfig":"83"},{"size":5790,"mtime":1662566432939,"results":"118","hashOfConfig":"83"},{"size":1010,"mtime":1662566432963,"results":"119","hashOfConfig":"83"},{"size":391433,"mtime":1662566432957,"results":"120","hashOfConfig":"83"},{"size":710,"mtime":1662566432914,"results":"121","hashOfConfig":"83"},{"size":4632,"mtime":1662566432971,"results":"122","hashOfConfig":"83"},{"size":7552,"mtime":1680955521997,"results":"123","hashOfConfig":"83"},{"size":13862,"mtime":1662566432965,"results":"124","hashOfConfig":"83"},{"size":10275,"mtime":1672808532275,"results":"125","hashOfConfig":"83"},{"size":5781,"mtime":1663219382402,"results":"126","hashOfConfig":"83"},{"size":902,"mtime":1662566432923,"results":"127","hashOfConfig":"83"},{"size":3000,"mtime":1662566432949,"results":"128","hashOfConfig":"83"},{"size":4160,"mtime":1662566432946,"results":"129","hashOfConfig":"83"},{"size":1074,"mtime":1672998121728,"results":"130","hashOfConfig":"83"},{"size":1131,"mtime":1673501598834,"results":"131","hashOfConfig":"83"},{"size":2055,"mtime":1662615776998,"results":"132","hashOfConfig":"83"},{"size":1268,"mtime":1681321877630,"results":"133","hashOfConfig":"83"},{"size":488,"mtime":1670909812206,"results":"134","hashOfConfig":"83"},{"size":812,"mtime":1662566432959,"results":"135","hashOfConfig":"83"},{"size":178,"mtime":1662566432964,"results":"136","hashOfConfig":"83"},{"size":1909,"mtime":1662566432940,"results":"137","hashOfConfig":"83"},{"size":1396,"mtime":1662566432941,"results":"138","hashOfConfig":"83"},{"size":4043,"mtime":1662566432911,"results":"139","hashOfConfig":"83"},{"size":1943,"mtime":1662566432968,"results":"140","hashOfConfig":"83"},{"size":1363,"mtime":1662566432928,"results":"141","hashOfConfig":"83"},{"size":3413,"mtime":1662566432915,"results":"142","hashOfConfig":"83"},{"size":4589,"mtime":1662566432925,"results":"143","hashOfConfig":"83"},{"size":389,"mtime":1662566432973,"results":"144","hashOfConfig":"83"},{"size":1075,"mtime":1662566432946,"results":"145","hashOfConfig":"83"},{"size":1015,"mtime":1662566432932,"results":"146","hashOfConfig":"83"},{"size":1474,"mtime":1662566432926,"results":"147","hashOfConfig":"83"},{"size":1040,"mtime":1662566432916,"results":"148","hashOfConfig":"83"},{"size":1020,"mtime":1672998135175,"results":"149","hashOfConfig":"83"},{"size":1189,"mtime":1675146262081,"results":"150","hashOfConfig":"83"},{"size":1455,"mtime":1679312911928,"results":"151","hashOfConfig":"83"},{"size":1177,"mtime":1674471567160,"results":"152","hashOfConfig":"83"},{"size":1078,"mtime":1681190245862,"results":"153","hashOfConfig":"83"},{"size":1012,"mtime":1672724119978,"results":"154","hashOfConfig":"83"},{"size":13444,"mtime":1670752470768,"results":"155","hashOfConfig":"83"},{"size":878,"mtime":1670764796264,"results":"156","hashOfConfig":"83"},{"size":9319,"mtime":1678256289471,"results":"157","hashOfConfig":"83"},{"size":1191,"mtime":1677676376829,"results":"158","hashOfConfig":"83"},{"size":29501,"mtime":1681115850903,"results":"159","hashOfConfig":"83"},{"size":9079,"mtime":1679389319706,"results":"160","hashOfConfig":"83"},{"size":1216,"mtime":1679314692398,"results":"161","hashOfConfig":"83"},{"size":14429,"mtime":1680955336721,"results":"162","hashOfConfig":"83"},{"size":546,"mtime":1679402458045,"results":"163","hashOfConfig":"83"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},"1ty9fct",{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"166"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":41,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"166"},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"166"},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"166"},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"166"},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"198","messages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"166"},{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"203","messages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":64,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"166"},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":62,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"166"},{"filePath":"217","messages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":64,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"166"},{"filePath":"220","messages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":57,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"166"},{"filePath":"223","messages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225"},{"filePath":"226","messages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"166"},{"filePath":"229","messages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"166"},{"filePath":"232","messages":"233","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"166"},{"filePath":"235","messages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":1,"source":"237","usedDeprecatedRules":"166"},{"filePath":"238","messages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"166"},{"filePath":"241","messages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":42,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"166"},{"filePath":"244","messages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":50,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"166"},{"filePath":"247","messages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"166"},{"filePath":"250","messages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"252","messages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"254","messages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"256","messages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"258","messages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"260","messages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"262","messages":"263","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"264","messages":"265","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":5,"source":"266","usedDeprecatedRules":"166"},{"filePath":"267","messages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"269","messages":"270","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"166"},{"filePath":"272","messages":"273","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"274","messages":"275","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"276","messages":"277","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"278","messages":"279","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"280","messages":"281","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"282","messages":"283","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"284","messages":"285","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"166"},{"filePath":"287","messages":"288","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"289","messages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"291","messages":"292","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"293","messages":"294","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"295","messages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"297","messages":"298","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"299","messages":"300","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"301","messages":"302","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"303","messages":"304","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"305","messages":"306","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"307","messages":"308","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"309","messages":"310","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"311","messages":"312","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"313","messages":"314","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"315","messages":"316","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"317","messages":"318","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"319","messages":"320","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"321","messages":"322","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"323","messages":"324","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"325","messages":"326","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"327","messages":"328","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"329","messages":"330","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"331","messages":"332","errorCount":0,"fatalErrorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"333","usedDeprecatedRules":"334"},{"filePath":"335","messages":"336","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"334"},{"filePath":"337","messages":"338","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339","usedDeprecatedRules":"166"},{"filePath":"340","messages":"341","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"342","messages":"343","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":1,"source":"344","usedDeprecatedRules":"166"},{"filePath":"345","messages":"346","errorCount":0,"fatalErrorCount":0,"warningCount":64,"fixableErrorCount":0,"fixableWarningCount":0,"source":"347","usedDeprecatedRules":"166"},{"filePath":"348","messages":"349","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350","usedDeprecatedRules":"166"},{"filePath":"351","messages":"352","errorCount":0,"fatalErrorCount":0,"warningCount":40,"fixableErrorCount":0,"fixableWarningCount":0,"source":"353","usedDeprecatedRules":"166"},{"filePath":"354","messages":"355","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},"C:\\montessori\\montessori_ui\\src\\index.js",[],["356","357"],"C:\\montessori\\montessori_ui\\src\\serviceWorker.js",[],"C:\\montessori\\montessori_ui\\src\\components\\App.js",["358","359"],"import React from \"react\";\r\nimport { HashRouter, Route, Switch, Redirect } from \"react-router-dom\";\r\n\r\n// components\r\nimport Layout from \"./Layout\";\r\n\r\n// pages\r\nimport Error from \"../pages/error\";\r\nimport Login from \"../pages/login\";\r\n\r\n// context\r\nimport { useUserState } from \"../context/UserContext\";\r\nimport SchoolRegistration from \"../pages/dashboard/SchoolRegistration\";\r\nimport LoginLayout from \"./LoginLayout/LoginLayout\";\r\n\r\nexport default function App() {\r\n  // global\r\n  var { isAuthenticated } = useUserState();\r\n\r\n  return (\r\n    <HashRouter>\r\n      <Switch>\r\n        <Route exact path=\"/\" render={() => <Redirect to=\"/app\" />} />\r\n        {/* <Route\r\n          exact\r\n          path=\"/app\"\r\n          render={() => <Redirect to=\"/app/dashboard\" />}\r\n        /> */}\r\n        <PrivateRoute path=\"/app\" component={Layout} />\r\n        {/* <PublicRoute path=\"/login\" component={Login} /> */}\r\n        <PublicRoute path=\"/montessori\" component={LoginLayout} />\r\n        <Route component={Error} />\r\n      </Switch>\r\n    </HashRouter>\r\n  );\r\n\r\n  // #######################################################################\r\n\r\n  function PrivateRoute({ component, ...rest }) {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={props =>\r\n          isAuthenticated ? (\r\n            React.createElement(component, props)\r\n          ) : (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/montessori/login\",\r\n                state: {\r\n                  from: props.location,\r\n                },\r\n              }}\r\n            />\r\n          )\r\n        }\r\n      />\r\n    );\r\n  }\r\n\r\n  function PublicRoute({ component, ...rest }) {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={props =>\r\n          isAuthenticated ? (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/\",\r\n              }}\r\n            />\r\n          ) : (\r\n            React.createElement(component, props)\r\n          )\r\n        }\r\n      />\r\n    );\r\n  }\r\n}\r\n","C:\\montessori\\montessori_ui\\src\\context\\LayoutContext.js",[],"C:\\montessori\\montessori_ui\\src\\context\\UserContext.js",[],"C:\\montessori\\montessori_ui\\src\\themes\\index.js",[],"C:\\montessori\\montessori_ui\\src\\services\\CategoryServices.js",[],"C:\\montessori\\montessori_ui\\src\\pages\\dashboard\\SchoolRegistration.js",["360","361","362","363","364","365","366","367","368","369","370","371","372","373","374","375","376","377","378","379","380","381","382","383","384","385","386","387","388","389","390","391","392","393","394","395","396","397","398","399","400"],"import React, { useState } from \"react\";\r\nimport {\r\n  LinearProgress,\r\n  OutlinedInput,\r\n} from \"@material-ui/core\";\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport {\r\n  Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, FormControl, InputLabel, MenuItem,\r\n  TableRow, Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableCell\r\n} from \"@material-ui/core\";\r\nimport schooleRegistration from \"./Locality/Service/schooleRegistration\"\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\nimport { Grid, Card, Box, Select, TextField } from \"@material-ui/core\";\r\nimport { useFormik } from 'formik';\r\n\r\nimport { useContext, useEffect } from 'react';\r\nimport { useTheme } from \"@material-ui/styles\";\r\n\r\nimport {\r\n  ResponsiveContainer,\r\n  ComposedChart,\r\n  AreaChart,\r\n  LineChart,\r\n  Line,\r\n  Area,\r\n  PieChart,\r\n  Pie,\r\n  Cell,\r\n  YAxis,\r\n  XAxis,\r\n} from \"recharts\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as Yup from 'yup';\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport mock from \"./mock\";\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { Typography } from \"../../components/Wrappers/Wrappers\";\r\nimport Dot from \"../../components/Sidebar/components/Dot\";\r\nimport BigStat from \"./components/BigStat/BigStat\";\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport SchooleRegistrationService from \"./Locality/Service/schooleRegistration\";\r\nexport default function SchooleRegistration(props) {\r\n  const classes = useStyles();\r\n  const [age, setAge] = React.useState('');\r\n  var [error, setError] = useState(null);\r\n  const [schooleRegistrationList, setSchooleRegistrationList] = useState([]);\r\n  const [schooleRegistration, setSchooleRegistration] = useState({\r\n    schooleName: '',\r\n    address: '',\r\n    city: '',\r\n    pincode: '',\r\n    selectCountry: '',\r\n    name: '',\r\n    email: '',\r\n    mobileNumber: '',\r\n    schooleEmail: '',\r\n    schooleContact: '',\r\n    password: '',\r\n    subscription: '',\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    setAge(event.target.value);\r\n  };\r\n  const validationSchema = Yup.object().shape({\r\n    schooleName: Yup.string().required('schoole Name  is required'),\r\n     address: Yup.string().required('address is required'),\r\n    city: Yup.string().required('city is required'),\r\n    pincode: Yup.string().required('pin code is required')\r\n      .matches(/^[0-9]+$/, \"Must be only digits\")\r\n      .min(6, 'Must be exactly 6 digits')\r\n      .max(6, 'Must be exactly 6 digits'),\r\n    selectCountry: Yup.string().required('selectCountry is required'),\r\n    name: Yup.string().required('name is required'),\r\n    email: Yup.string().required('email is required'),\r\n    mobileNumber: Yup.string().required()\r\n      .matches(/^[0-9]+$/, \"Must be only digits\")\r\n      .min(10, 'Must be exactly 10 digits')\r\n      .max(10, 'Must be exactly 10 digits'),\r\n    schooleEmail: Yup.string()\r\n      .required('schoole Email is required'),\r\n    schooleContact: Yup.string().required()\r\n      .matches(/^[0-9]+$/, \"Must be only digits\")\r\n      .min(10, 'Must be exactly 10 digits')\r\n      .max(10, 'Must be exactly 10 digits'),\r\n    password: Yup.string().required('password is required'),\r\n     subscription: Yup.string(),\r\n  });\r\n  const getSchooleRegistrationList = () => {\r\n    SchooleRegistrationService.getAllSchooleRegistration().then((res) => {\r\n      setSchooleRegistrationList(res);\r\n    }).catch((err) => {\r\n      setError(err.message);\r\n    });\r\n  }\r\n  // onSubmitHandler = (e) => {\r\n  //   e.preventDefault();\r\n  //  this.props.history.push('/login')\r\n  // }\r\n  const formik = useFormik({\r\n    initialValues:  schooleRegistration,\r\n    enableReinitialize: true,\r\n    validationSchema: validationSchema,\r\n    onSubmit: (values, { resetForm }) => {\r\n      SchooleRegistrationService.creteSchooleRegistration(values).then((res) => {\r\n        debugger\r\n        alert(\" Registration Successfully.\");\r\n        props.history.push('/montessori/login');\r\n      })\r\n        .catch((err) => {\r\n          alert(err.response.data.message)\r\n        })\r\n    },\r\n  });\r\n\r\n\r\n  return (\r\n\r\n    <>\r\n      <Card sx={{ maxWidth: 345 }}>\r\n        <Box   >\r\n          <div style={{ marginLeft: \"7%\" }}>\r\n            <form onSubmit={formik.handleSubmit} >\r\n              <Grid container spacing={2} columns={12} >\r\n                <Grid item xs={12}>\r\n                  <PageTitle InputProps={{ style: { color: '#10b680' } }} title=\" School Registration\" ></PageTitle>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <TextField InputProps={{ style: { width: 370 } }}\r\n                  autoFocus\r\n                    margin=\"dense\"\r\n                    id=\"schooleName\"\r\n                    name=\"schooleName\"\r\n                    label=\"Name Of The School\"\r\n                    type=\"text\"\r\n                    variant=\"standard\"\r\n                    value={formik.values.schooleName}\r\n                    onChange={formik.handleChange}\r\n                    error={formik.touched.schooleName && Boolean(formik.errors.schooleName)}\r\n                    helperText={formik.touched.schooleName && formik.errors.schooleName}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} style={{ marginTop: '30px' }}>\r\n                  <span style={{ fontSize: '17px', color: 'rgb(16 182 128)' }} >Address:</span>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <TextField\r\n                    InputProps={{ style: { width: 370 } }}\r\n                    margin=\"dense\"\r\n                    id=\"address\"\r\n                    name=\"address\"\r\n                    placeholder=\"Door/Flat/Apartment Name.\"\r\n                    label=\"address \"\r\n                    type=\"text\"\r\n                    variant=\"standard\"\r\n                    value={formik.values.address}\r\n\r\n                    onChange={formik.handleChange}\r\n                    error={formik.touched.address && Boolean(formik.errors.address)}\r\n                    helperText={formik.touched.address && formik.errors.address}\r\n                  />\r\n\r\n\r\n\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <TextField\r\n                    InputProps={{ style: { width: 370 } }}           \r\n                    margin=\"dense\"\r\n                    id=\"city\"\r\n                    name=\"city\"\r\n                    label=\"City \"\r\n                    type=\"text\"\r\n                    variant=\"standard\"\r\n                    value={formik.values.city}\r\n\r\n                    onChange={formik.handleChange}\r\n                    error={formik.touched.city && Boolean(formik.errors.city)}\r\n                    helperText={formik.touched.city && formik.errors.city}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <TextField\r\n                    InputProps={{ style: { width: 370 } }}\r\n                    margin=\"dense\"\r\n                    id=\"pincode\"\r\n                    name=\"pincode\"\r\n                    label=\"Pin Code\"\r\n                    type=\"text\"\r\n                    variant=\"standard\"\r\n                    value={formik.values.pincode}\r\n\r\n                    onChange={formik.handleChange}\r\n                    error={formik.touched.pincode && Boolean(formik.errors.pincode)}\r\n                    helperText={formik.touched.pincode && formik.errors.pincode}\r\n                  />\r\n                </Grid>\r\n\r\n\r\n                <Grid item xs={6}>\r\n                  <div style={{ width: 370 }}>\r\n                    <FormControl className={classes.formControl}\r\n                      fullWidth=\"true\" >\r\n                      <InputLabel id=\"demo-simple-select-label\">Select country</InputLabel>\r\n                      <Select\r\n                        labelId=\"demo-simple-select-label\"\r\n                        id=\"selectCountry\"\r\n                        name=\"selectCountry\"\r\n\r\n                        label=\"selectCountry\"\r\n\r\n                        onChange={formik.handleChange}\r\n                        value={formik.values.selectCountry}\r\n                        error={formik.touched.selectCountry && Boolean(formik.errors.selectCountry)}\r\n                        helperText={formik.touched.selectCountry && formik.errors.selectCountry}\r\n                      >\r\n                        <MenuItem value=\"\">\r\n                          <em>None</em>\r\n                        </MenuItem>\r\n                        <MenuItem value={1}>United States</MenuItem>\r\n                        <MenuItem value={2}>United Kingdom</MenuItem>\r\n                        <MenuItem value={3}>Australia</MenuItem>\r\n                        <MenuItem value={4}>India</MenuItem>\r\n                        <MenuItem value={5}>Finland</MenuItem>\r\n                      </Select>\r\n                    </FormControl>\r\n                  </div>\r\n                </Grid>\r\n                <Grid item xs={12} style={{ marginTop: '30px' }}>\r\n                  <span style={{ fontSize: '17px', color: 'rgb(16 182 128)' }} >Contact Details:</span>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n\r\n                  <TextField\r\n                    InputProps={{ style: { width: 370 } }}\r\n                    \r\n                    margin=\"dense\"\r\n                    id=\"name\"\r\n                    name=\"name\"\r\n                    label=\"Full Name\"\r\n                    type=\"Full Name\"\r\n                    variant=\"standard\"\r\n                    value={formik.values.name}\r\n                    onChange={formik.handleChange}\r\n                    error={formik.touched.name && Boolean(formik.errors.name)}\r\n                    helperText={formik.touched.name && formik.errors.name}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n\r\n                  <TextField\r\n                    InputProps={{ style: { width: 370 } }}\r\n                    \r\n                    margin=\"dense\"\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    label=\"Email ID\"\r\n                    type=\"Email ID\"\r\n                    variant=\"standard\"\r\n                    value={formik.values.email}\r\n                    onChange={formik.handleChange}\r\n                    error={formik.touched.email && Boolean(formik.errors.email)}\r\n                    helperText={formik.touched.email && formik.errors.email}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <TextField\r\n                    InputProps={{ style: { width: 370 } }}\r\n                    \r\n                    margin=\"dense\"\r\n                    id=\"mobileNumber\"\r\n                    name=\"mobileNumber\"\r\n                    label=\"Mobile Number\"\r\n                    type=\"Mobile Number\"\r\n                    variant=\"standard\"\r\n                    value={formik.values.mobileNumber}\r\n                    onChange={formik.handleChange}\r\n                    error={formik.touched.mobileNumber && Boolean(formik.errors.mobileNumber)}\r\n                    helperText={formik.touched.mobileNumber && formik.errors.mobileNumber}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n\r\n                  <TextField\r\n                    InputProps={{ style: { width: 370 } }}\r\n                    \r\n                    margin=\"dense\"\r\n                    id=\"schooleEmail\"\r\n                    name=\"schooleEmail\"\r\n                    label=\"School Email \"\r\n                    type=\"Schoole Email\"\r\n                    variant=\"standard\"\r\n                    value={formik.values.schooleEmail}\r\n                    onChange={formik.handleChange}\r\n                    error={formik.touched.schooleEmail && Boolean(formik.errors.schooleEmail)}\r\n                    helperText={formik.touched.schooleEmail && formik.errors.schooleEmail}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n\r\n                  <TextField\r\n                    InputProps={{ style: { width: 370 } }}\r\n                    \r\n                    margin=\"dense\"\r\n                    id=\"schooleContact  \"\r\n                    name=\"schooleContact\"\r\n                    label=\"School contact number   \"\r\n                    type=\"Schoole contact number \"\r\n                    variant=\"standard\"\r\n                    value={formik.values.schooleContact}\r\n\r\n                    onChange={formik.handleChange}\r\n                    error={formik.touched.schooleContact && Boolean(formik.errors.schooleContact)}\r\n                    helperText={formik.touched.schooleContact && formik.errors.schooleContact}\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item xs={6}>\r\n\r\n                  <TextField\r\n                    id=\"password\"\r\n                    InputProps={{ style: { width: 370 } }}\r\n                    margin=\"normal\"\r\n                    label=\" Set Password  \"\r\n                    // placeholder=\"Password\"\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    value={formik.values.password}\r\n                    onChange={formik.handleChange}\r\n                    error={formik.touched.password && Boolean(formik.errors.password)}\r\n                    helperText={formik.touched.password && formik.errors.password}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <FormControl component=\"fieldset\">\r\n                    <FormLabel component=\"legend\" >Avail trail subscription </FormLabel>\r\n                    <RadioGroup aria-label=\"subscription\" name=\"subscription\"  margin=\"dense\"\r\n                    id=\"subscription  \"  type=\"radio \"\r\n                    variant=\"standard\"\r\n                    value={formik.values.subscription}\r\n                    onChange={formik.handleChange}\r\n                    error={formik.touched.subscription && Boolean(formik.errors.subscription)}\r\n                    helperText={formik.touched.subscription && formik.errors.subscription}\r\n                    >\r\n                      <FormControlLabel value=\"yes\" control={<Radio />} label=\"Yes\" />\r\n                      <FormControlLabel value=\"no\" control={<Radio />} label=\"No\" />\r\n\r\n                    </RadioGroup>\r\n                  </FormControl>\r\n                </Grid>\r\n              </Grid>\r\n              <div style={{ textAlign: 'right', margin: '29px' }}>\r\n                <Button style={{ backgroundColor: 'rgb(48 135 91)', color: 'white' }} type=\"submit\" variant=\"contained\" >Submit</Button>\r\n              </div>\r\n\r\n            </form>\r\n          </div>\r\n        </Box>\r\n\r\n      </Card>\r\n\r\n\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n","C:\\montessori\\montessori_ui\\src\\components\\LoginLayout\\LoginLayout.js",["401","402","403","404","405","406","407","408","409"],"import React from \"react\";\r\nimport {\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n  withRouter,\r\n} from \"react-router-dom\";\r\nimport Layout from \"../Layout/Layout\"\r\nimport classnames from \"classnames\";\r\nimport {Box, IconButton, Link} from '@material-ui/core'\r\nimport Icon from '@mdi/react'\r\n// import Vendor from \"../../pages/vendor\";\r\n// import VendorRegistration from \"../../pages/vendor/VendorRegistration\";\r\n// import Locality from \"../../pages/dashboard/Locality/Locality\";\r\n// import Categories from \"../../pages/dashboard/components/Categories/Categories\";\r\n// import Menu from \"../../pages/dashboard/components/Menu/Menu\"\r\n// import VendorList from \"../../pages/dashboard/components/VendorList/VendorList\"\r\n// import OrderDetailes from \"../../pages/dashboard/components/OrderDetailes/OrderDetailes\"\r\n// import DicountCoupon from \"../../pages/dashboard/components/DiscountCoupon/DiscountCoupon\";\r\n//icons\r\nimport {\r\n  mdiFacebook as FacebookIcon,\r\n  mdiTwitter as TwitterIcon,\r\n  mdiGithub as GithubIcon,\r\n} from '@mdi/js'\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport Header from \"../Header\";\r\nimport Sidebar from \"../Sidebar\";\r\n\r\n// pages\r\nimport Dashboard from \"../../pages/dashboard/SchoolRegistration\";\r\nimport Typography from \"../../pages/typography\";\r\nimport Notifications from \"../../pages/notifications\";\r\nimport Maps from \"../../pages/maps\";\r\n// import Tables from \"../../pages/tables\";\r\n\r\nimport Icons from \"../../pages/icons\";\r\nimport Charts from \"../../pages/charts\";\r\n\r\n// context\r\nimport { useLayoutState } from \"../../context/LayoutContext\";\r\nimport { Category } from \"@material-ui/icons\";\r\nimport Login from \"../../pages/login/Login\";\r\nimport LoginHeader from \"../LoginHeader/LoginHeader\";\r\nimport SchoolRegistration from \"../../pages/dashboard/SchoolRegistration\";\r\n\r\nfunction LoginLayout(props) {\r\n  var classes = useStyles();\r\n\r\n  // global\r\n  var layoutState = useLayoutState();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        <>\r\n        <LoginHeader history={props.history} />\r\n          \r\n          <div\r\n            className={classnames(classes.content, {\r\n              [classes.contentShift]: layoutState.isSidebarOpened,\r\n            })}\r\n          >\r\n            <div className={classes.fakeToolbar} />\r\n            <Switch>\r\n             \r\n               <Route\r\n                exact\r\n                path=\"/\"\r\n                render={() => <Redirect to=\"/montessori/schoolregistration\" />}\r\n              />  \r\n              <Route path=\"/montessori/schoolregistration\" component={SchoolRegistration} />\r\n              <Route path=\"/montessori/login\" component={Login} />\r\n\r\n              <Route path=\"/montessori/dashboard\" component={Layout} />\r\n            </Switch>\r\n            <Box\r\n              mt={5}\r\n              width={\"100%\"}\r\n              display={\"flex\"}\r\n              alignItems={\"center\"}\r\n              justifyContent=\"space-between\"\r\n            >\r\n              {/* <div>\r\n                <Link\r\n                  color={'primary'}\r\n                  href={'https://flatlogic.com/'}\r\n                  target={'_blank'}\r\n                  className={classes.link}\r\n                >\r\n                  Flatlogic\r\n                </Link>\r\n                <Link\r\n                  color={'primary'}\r\n                  href={'https://flatlogic.com/about'}\r\n                  target={'_blank'}\r\n                  className={classes.link}\r\n                >\r\n                  About Us\r\n                </Link>\r\n                <Link\r\n                  color={'primary'}\r\n                  href={'https://flatlogic.com/blog'}\r\n                  target={'_blank'}\r\n                  className={classes.link}\r\n                >\r\n                  Blog\r\n                </Link>\r\n              </div> */}\r\n              <div>\r\n                <Link\r\n                  href={'https://www.facebook.com/flatlogic'}\r\n                  target={'_blank'}\r\n                >\r\n                  <IconButton aria-label=\"facebook\">\r\n                    <Icon\r\n                      path={FacebookIcon}\r\n                      size={1}\r\n                      color=\"#6E6E6E99\"\r\n                    />\r\n                  </IconButton>\r\n                </Link>\r\n                <Link\r\n                  href={'https://twitter.com/flatlogic'}\r\n                  target={'_blank'}\r\n                >\r\n                  <IconButton aria-label=\"twitter\">\r\n                    <Icon\r\n                      path={TwitterIcon}\r\n                      size={1}\r\n                      color=\"#6E6E6E99\"\r\n                    />\r\n                  </IconButton>\r\n                </Link>\r\n                <Link\r\n                  href={'https://github.com/flatlogic'}\r\n                  target={'_blank'}\r\n                >\r\n                  <IconButton\r\n                    aria-label=\"github\"\r\n                    style={{marginRight: -12}}\r\n                  >\r\n                    <Icon\r\n                      path={GithubIcon}\r\n                      size={1}\r\n                      color=\"#6E6E6E99\"\r\n                    />\r\n                  </IconButton>\r\n                </Link>\r\n              </div>\r\n            </Box>\r\n          </div>\r\n        </>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(LoginLayout);\r\n","C:\\montessori\\montessori_ui\\src\\pages\\login\\Login.js",["410","411","412","413","414","415","416","417","418","419","420","421","422","423","424","425"],"import React, { useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  CircularProgress,\r\n  Typography,\r\n  Tabs,\r\n  Tab,\r\n  TextField,\r\n  Fade,Select,\r\n\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Button, Dialog, DialogActions, DialogContent, DialogTitle, FormControl, InputLabel, MenuItem,\r\n  TableRow, Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableCell\r\n} from \"@material-ui/core\";\r\nimport { loginUser } from \"../../context/UserContext\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// logo\r\nimport logo from \"./logo.svg\";\r\nimport google from \"../../images/google.svg\";\r\n\r\n// context\r\nimport { useUserDispatch, lofginUser } from \"../../context/UserContext\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\n\r\nfunction Login(props) {\r\n  var classes = useStyles();\r\n\r\n  // global\r\n  var userDispatch = useUserDispatch();\r\n\r\n  // local\r\n  var [isLoading, setIsLoading] = useState(false);\r\n  var [error, setError] = useState(null);\r\n  var [activeTabId, setActiveTabId] = useState(0);\r\n  var [nameValue, setNameValue] = useState(\"\");\r\n  var [loginValue, setLoginValue] = useState(\"\");\r\n  var [passwordValue, setPasswordValue] = useState(\"\");\r\n  var [roleValue, setRoleValue] = useState(\"\");\r\n  return (\r\n    <Grid container className={classes.container}>\r\n      <div className={classes.logotypeContainer} >\r\n        <img src=\"https://img.freepik.com/premium-photo/hands-student-boy-using-wooden-material-montessori-school_47726-6358.jpg?w=2000\"\r\n         alt=\"logo\" className={classes.logotypeImage} style={{ width: '820px',  height: '1000px'}}/>\r\n        {/* <Typography className={classes.logotypeText}> School Montessori </Typography> */}\r\n      </div>\r\n      <div className={classes.formContainer}>\r\n        <div className={classes.form}>\r\n\r\n         <h2 style={{fontFamily: 'unset',color: '#0fb880', fontSize: '20px', fontWeight: 'revert',   \r\n       \r\n        }}>Welcome To School Montessori </h2>\r\n      \r\n          <Tabs\r\n            value={activeTabId}\r\n            onChange={(e, id) => setActiveTabId(id)}\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            centered\r\n          >\r\n             \r\n\r\n\r\n            <Tab label=\"Login\" classes={{ root: classes.tab }} />\r\n          </Tabs>\r\n            <React.Fragment>\r\n              <Fade in={error}>\r\n                <Typography color=\"secondary\" className={classes.errorMessage}>\r\n                  Something is wrong with your login or password :\r\n                </Typography>\r\n              </Fade>\r\n              <FormControl variant=\"standard\" fullWidth>\r\n                            <InputLabel id=\"demo-simple-select-standard-label\">Select Role</InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-standard-label\"\r\n                                id=\"demo-simple-select-standard\"\r\n                                label=\"Select Login\"\r\n                                name=\"status\"\r\n                                placeholder=\"Select Role\"\r\n                               value={roleValue}\r\n                               onChange={e => setRoleValue(e.target.value)}\r\n                            >\r\n                                <MenuItem value=\"\">\r\n                                    <em>None</em>\r\n                                </MenuItem>\r\n                                <MenuItem value={'SCHOOLE'}>Admin </MenuItem>\r\n                                <MenuItem value={'PARENT'}>Parent </MenuItem>\r\n                                <MenuItem value={'TEACHER'}>Teacher </MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n              <TextField\r\n                id=\"email\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={loginValue}\r\n                onChange={e => setLoginValue(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder=\"Email Adress\"\r\n                type=\"email\"\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                id=\"password\"\r\n                InputProps={{\r\n                  classes: {\r\n                    underline: classes.textFieldUnderline,\r\n                    input: classes.textField,\r\n                  },\r\n                }}\r\n                value={passwordValue}\r\n                onChange={e => setPasswordValue(e.target.value)}\r\n                margin=\"normal\"\r\n                placeholder=\"Password\"\r\n                type=\"password\"\r\n                fullWidth\r\n              />\r\n              <div className={classes.formButtons}>\r\n                {isLoading ? (\r\n                  <CircularProgress size={26} className={classes.loginLoader} />\r\n                ) : (\r\n                  <Button\r\n                    disabled={\r\n                      loginValue.length === 0 || passwordValue.length === 0\r\n                    }\r\n                    onClick={() =>\r\n                      \r\n                      loginUser(\r\n                        userDispatch,\r\n                        loginValue,\r\n                        passwordValue,\r\n                        props.history,\r\n                        setIsLoading,\r\n                        setError,\r\n                        roleValue\r\n                      )\r\n                    }\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"large\"\r\n                  >\r\n                    Login\r\n                  </Button>\r\n                 \r\n                )}\r\n                \r\n                <Button\r\n                  color=\"primary\"\r\n                  size=\"large\"\r\n                  className={classes.forgetButton}\r\n                >\r\n                  Forgot Password\r\n                </Button>\r\n              </div>\r\n            </React.Fragment>\r\n         \r\n          \r\n        </div>\r\n        {/* <Typography color=\"primary\" className={classes.copyright}>\r\n        © 2014-{new Date().getFullYear()} <a style={{ textDecoration: 'none', color: 'inherit' }} href=\"https://flatlogic.com\" rel=\"noopener noreferrer\" target=\"_blank\">Flatlogic</a>, LLC. All rights reserved.\r\n        </Typography> */}\r\n      </div>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default withRouter(Login);\r\n","C:\\montessori\\montessori_ui\\src\\components\\Layout\\Layout.js",["426","427","428","429","430"],"import React from \"react\";\r\nimport {\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n  withRouter,\r\n} from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\nimport StudentRegistration from \"../../pages/dashboard/StudentForm\"\r\nimport AddClass from \"../../pages/dashboard/AddClass\";\r\nimport Teacher from \"../../pages/dashboard/Teacher\";\r\nimport Activity from \"../../pages/dashboard/StudentActivity\"\r\nimport CalenderEvents from \"../../pages/dashboard/CalelnderEvents\"\r\nimport CreateEvents from \"../../pages/dashboard/CreateEvents\"\r\nimport ActivityTabel from \"../../pages/dashboard/ActivityTabel\"\r\nimport SuperActivity from \"../../pages/dashboard/SuperActivity\"\r\nimport SubActivity from \"../../pages/dashboard/SubActivity\"\r\nimport ActivityExpected from \"../../pages/dashboard/ActivityExpected\"\r\nimport Attendence from \"../../pages/dashboard/Attendence\"\r\nimport StudentDetails from \"../../pages/dashboard/StudentDetails\"\r\nimport Reports from \"../../pages/dashboard/reports\"\r\nimport AgeReports from \"../../pages/dashboard/AgeReports\"\r\nimport SpecialObservation from \"../../pages/dashboard/SpecialObservation\"\r\nimport ReportOfActivities from \"../../pages/dashboard/reportofactivities\"\r\nimport {Box, IconButton, Link} from '@material-ui/core'\r\nimport Icon from '@mdi/react'\r\n// import Vendor from \"../../pages/vendor\";\r\n// import VendorRegistration from \"../../pages/vendor/VendorRegistration\";\r\n// import Locality from \"../../pages/dashboard/Locality/Locality\";\r\n// import Categories from \"../../pages/dashboard/components/Categories/Categories\";\r\n// import Menu from \"../../pages/dashboard/components/Menu/Menu\"\r\n// import VendorList from \"../../pages/dashboard/components/VendorList/VendorList\"\r\n// import OrderDetailes from \"../../pages/dashboard/components/OrderDetailes/OrderDetailes\"\r\n// import DicountCoupon from \"../../pages/dashboard/components/DiscountCoupon/DiscountCoupon\";\r\n//icons\r\nimport {\r\n  mdiFacebook as FacebookIcon,\r\n  mdiTwitter as TwitterIcon,\r\n  mdiGithub as GithubIcon,\r\n} from '@mdi/js'\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport Header from \"../Header\";\r\nimport Sidebar from \"../Sidebar\";\r\n\r\n// pages\r\nimport Dashboard from \"../../pages/dashboard/SchoolRegistration\";\r\nimport Typography from \"../../pages/typography\";\r\nimport Notifications from \"../../pages/notifications\";\r\nimport Maps from \"../../pages/maps\";\r\nimport Icons from \"../../pages/icons\";\r\nimport Charts from \"../../pages/charts\";\r\n// context\r\nimport { useLayoutState } from \"../../context/LayoutContext\";\r\nimport { Category } from \"@material-ui/icons\";\r\nimport SchooRegistration from \"../../pages/dashboard/SchoolRegistration\";\r\nimport ActivityService from \"../../pages/dashboard/Locality/Service/activityService\";\r\nfunction Layout(props) {\r\n  var classes = useStyles();\r\n\r\n  // global\r\n  var layoutState = useLayoutState();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n        <>\r\n          <Header history={props.history} />\r\n          <Sidebar />\r\n          <div\r\n            className={classnames(classes.content, {\r\n              [classes.contentShift]: layoutState.isSidebarOpened,\r\n            })}\r\n          >\r\n            <div className={classes.fakeToolbar} />\r\n            <Switch>\r\n              <Route path=\"/app/studentregistration/:id\" component={StudentRegistration} />\r\n              <Route path=\"/app/addclass\" component={AddClass} />\r\n              <Route path=\"/app/teacher\" component={Teacher} />\r\n              <Route path=\"/app/studentactivity\" component={Activity} />\r\n              <Route path=\"/app/activitytabel\" component={ActivityTabel} />\r\n              <Route path=\"/app/activityexpected\" component={ActivityExpected} />\r\n              <Route path=\"/app/superactivity\" component={SuperActivity} />\r\n              <Route path=\"/app/subactivity\" component={SubActivity} />\r\n              <Route path=\"/app/attendence\" component={Attendence} />\r\n              <Route path=\"/app/studentdetails\" component={StudentDetails} />\r\n              <Route path=\"/app/typography\" component={Typography} />\r\n              <Route path=\"/app/notifications\" component={Notifications} />\r\n              <Route path=\"/app/calenderevents\" component={CalenderEvents} />\r\n              <Route path=\"/app/createevents\" component={CreateEvents} />\r\n              <Route path=\"/app/agereports\" component={AgeReports} />\r\n              <Route path=\"/app/specialobservation\" component={SpecialObservation} />\r\n              {/* <Route path=\"/app/reports\" component={Reports} /> */}\r\n              {/* <Route path=\"/app/vendor\" component={Vendor} />\r\n              <Route path=\"/app/vendorregistration/:id\" component={VendorRegistration} />\r\n              <Route path=\"/app/locality\" component={Locality} />\r\n              <Route path=\"/app/categories\" component={Categories} />\r\n              <Route path=\"/app/menu\" component={Menu} />\r\n              <Route path=\"/app/listvendor\" component={VendorList} />\r\n              <Route path=\"/app/orderdetailes\" component={OrderDetailes} />\r\n              <Route path=\"/app/discountcoupon\" component={DicountCoupon} /> */}\r\n              <Route\r\n                exact\r\n                path=\"/app/ui\"\r\n                render={() => <Redirect to=\"/app/ui/icons\" />}\r\n              />\r\n              <Route path=\"/app/reports\" component={Reports} />\r\n              <Route path=\"/app/reportofactivities\" component={ReportOfActivities} />\r\n              <Route path=\"/app/ui/reportofactivities\" component={Icons} />\r\n              <Route path=\"/app/ui/charts\" component={Charts} />\r\n            </Switch>\r\n            <Box\r\n              mt={5}\r\n              width={\"100%\"}\r\n              display={\"flex\"}\r\n              alignItems={\"center\"}\r\n              justifyContent=\"space-between\"\r\n            >\r\n              {/* <div>\r\n                <Link\r\n                  color={'primary'}\r\n                  href={'https://flatlogic.com/'}\r\n                  target={'_blank'}\r\n                  className={classes.link}\r\n                >\r\n                  Flatlogic\r\n                </Link>\r\n                <Link\r\n                  color={'primary'}\r\n                  href={'https://flatlogic.com/about'}\r\n                  target={'_blank'}\r\n                  className={classes.link}\r\n                >\r\n                  About Us\r\n                </Link>\r\n                <Link\r\n                  color={'primary'}\r\n                  href={'https://flatlogic.com/blog'}\r\n                  target={'_blank'}\r\n                  className={classes.link}\r\n                >\r\n                  Blog\r\n                </Link>\r\n              </div> */}\r\n              <div>\r\n                <Link\r\n                  href={'https://www.facebook.com/flatlogic'}\r\n                  target={'_blank'}\r\n                >\r\n                  <IconButton aria-label=\"facebook\">\r\n                    <Icon\r\n                      path={FacebookIcon}\r\n                      size={1}\r\n                      color=\"#6E6E6E99\"\r\n                    />\r\n                  </IconButton>\r\n                </Link>\r\n                <Link\r\n                  href={'https://twitter.com/flatlogic'}\r\n                  target={'_blank'}\r\n                >\r\n                  <IconButton aria-label=\"twitter\">\r\n                    <Icon\r\n                      path={TwitterIcon}\r\n                      size={1}\r\n                      color=\"#6E6E6E99\"\r\n                    />\r\n                  </IconButton>\r\n                </Link>\r\n                <Link\r\n                  href={'https://github.com/flatlogic'}\r\n                  target={'_blank'}\r\n                >\r\n                  <IconButton\r\n                    aria-label=\"github\"\r\n                    style={{marginRight: -12}}\r\n                  >\r\n                    <Icon\r\n                      path={GithubIcon}\r\n                      size={1}\r\n                      color=\"#6E6E6E99\"\r\n                    />\r\n                  </IconButton>\r\n                </Link>\r\n              </div>\r\n            </Box>\r\n          </div>\r\n        </>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(Layout);\r\n","C:\\montessori\\montessori_ui\\src\\pages\\error\\Error.js",[],"C:\\montessori\\montessori_ui\\src\\themes\\default.js",[],"C:\\montessori\\montessori_ui\\src\\services\\httpServices.js",[],"C:\\montessori\\montessori_ui\\src\\components\\LoginHeader\\LoginHeader.js",["431","432","433","434","435","436","437","438","439","440","441","442","443","444","445","446","447","448","449","450","451","452","453","454"],"import React from \"react\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  InputBase,\r\n  Menu,\r\n  MenuItem,\r\n  Fab,\r\n  withStyles,\r\n  Button\r\n} from \"@material-ui/core\";\r\nimport { Grid, Card, Box, FormControl, Select, InputLabel, TextField } from \"@material-ui/core\";\r\nimport Login from \"../../pages/login/Login\";\r\nimport {\r\n\r\n  Link\r\n} from \"react-router-dom\";\r\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\r\nimport SchoolRegistration from \"../../pages/dashboard/SchoolRegistration\";\r\nimport {\r\n  Menu as MenuIcon,\r\n\r\n \r\n  Send as SendIcon,\r\n  ArrowBack as ArrowBackIcon\r\n} from \"@material-ui/icons\";\r\nimport { fade } from \"@material-ui/core/styles/colorManipulator\";\r\nimport classNames from \"classnames\";\r\n\r\nimport { Badge, Typography } from \"../Wrappers/Wrappers\";\r\n\r\nimport UserAvatar from \"../UserAvatar/UserAvatar\";\r\n\r\nconst messages = [\r\n  {\r\n    id: 0,\r\n    variant: \"warning\",\r\n    name: \"Jane Hew\",\r\n    message: \"Hey! How is it going?\",\r\n    time: \"9:32\"\r\n  },\r\n  {\r\n    id: 1,\r\n    variant: \"success\",\r\n    name: \"Lloyd Brown\",\r\n    message: \"Check out my new Dashboard\",\r\n    time: \"9:18\"\r\n  },\r\n  {\r\n    id: 2,\r\n    variant: \"primary\",\r\n    name: \"Mark Winstein\",\r\n    message: \"I want rearrange the appointment\",\r\n    time: \"9:15\"\r\n  },\r\n  {\r\n    id: 3,\r\n    variant: \"secondary\",\r\n    name: \"Liana Dutti\",\r\n    message: \"Good news from sale department\",\r\n    time: \"9:09\"\r\n  }\r\n];\r\n\r\n\r\n\r\n\r\nconst HeaderView = ({ classes, isSidebarOpened, toggleSidebar, ...props }) => (\r\n  <AppBar position=\"fixed\" className={classes.appBar} style={{backgroundColor : '#30875b'}}>\r\n    <Toolbar className={classes.toolbar} >\r\n      \r\n  \r\n      <Typography variant=\"h6\" weight=\"medium\" className={classes.logotype} style={{ fontSize:\"calc(2.142rem)\", fontWeight:\"600\"}}>Montessori Campass</Typography>\r\n      <div className={classes.grow} />\r\n    \r\n\r\n\r\n  <Grid item xs>\r\n  <li  style={{ display:\"block\"}}>\r\n          <Link to=\"/montessori/schoolregistration\" style={{color:\"white\", textDecoration: \"none\"}}>School Registration</Link>\r\n          </li>\r\n  </Grid>\r\n  \r\n  <Grid item xs>\r\n  <li style={{ display:\"block\"}}>\r\n          <Link to=\"/montessori/login\" style={{color:\"white\", textDecoration: \"none\" }}>Login</Link>\r\n          </li>\r\n  </Grid>\r\n      <Menu\r\n        id=\"profile-menu\"\r\n        open={Boolean(props.profileMenu)}\r\n        anchorEl={props.profileMenu}\r\n        onClose={props.closeProfileMenu}\r\n        className={classes.headerMenu}\r\n        classes={{ paper: classes.profileMenu }}\r\n        disableAutoFocusItem\r\n      >\r\n        <div className={classes.profileMenuUser}>\r\n          <Typography variant=\"h4\" weight=\"medium\">\r\n            John Smith\r\n          </Typography>\r\n          <Typography\r\n            className={classes.profileMenuLink}\r\n            component=\"a\"\r\n            color=\"primary\"\r\n            href=\"https://flatlogic.com\"\r\n          >\r\n            Flalogic.com\r\n          </Typography>\r\n        </div>\r\n      \r\n       \r\n        <div className={classes.profileMenuUser}>\r\n          <Typography\r\n            className={classes.profileMenuLink}\r\n            color=\"primary\"\r\n            onClick={props.signOut}\r\n          >\r\n            Sign Out\r\n          </Typography>\r\n        </div>\r\n      </Menu>\r\n    </Toolbar>\r\n  </AppBar>\r\n);\r\n\r\nconst styles = theme => ({\r\n  logotype: {\r\n    color: \"white\",\r\n    marginLeft: theme.spacing.unit * 2.5,\r\n    marginRight: theme.spacing.unit * 2.5,\r\n    fontWeight: 500,\r\n    fontSize: 18,\r\n    whiteSpace: \"nowrap\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      display: \"none\"\r\n    }\r\n  },\r\n  appBar: {\r\n    width: \"100vw\",\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen\r\n    })\r\n  },\r\n  toolbar: {\r\n    paddingLeft: theme.spacing.unit * 2,\r\n    paddingRight: theme.spacing.unit * 2\r\n  },\r\n  hide: {\r\n    display: \"none\"\r\n  },\r\n  grow: {\r\n    flexGrow: 1\r\n  },\r\n \r\n \r\n  \r\n  inputRoot: {\r\n    color: \"inherit\",\r\n    width: \"100%\"\r\n  },\r\n  inputInput: {\r\n    height: 36,\r\n    padding: 0,\r\n    paddingRight: 36 + theme.spacing.unit * 1.25,\r\n    width: \"100%\"\r\n  },\r\n  messageContent: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\"\r\n  },\r\n  headerMenu: {\r\n    marginTop: theme.spacing.unit * 7\r\n  },\r\n  headerMenuList: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\"\r\n  },\r\n  headerMenuItem: {\r\n    \"&:hover, &:focus\": {\r\n      backgroundColor: theme.palette.primary.main,\r\n      color: \"white\"\r\n    }\r\n  },\r\n  headerMenuButton: {\r\n    marginLeft: theme.spacing.unit * 2,\r\n    padding: theme.spacing.unit / 2\r\n  },\r\n  headerMenuButtonCollapse: {\r\n    marginRight: theme.spacing.unit * 2\r\n  },\r\n  headerIcon: {\r\n    fontSize: 28,\r\n    color: \"rgba(255, 255, 255, 0.35)\"\r\n  },\r\n  headerIconCollapse: {\r\n    color: \"white\"\r\n  },\r\n  profileMenu: {\r\n    minWidth: 265\r\n  },\r\n  profileMenuUser: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    padding: theme.spacing.unit * 2\r\n  },\r\n  profileMenuItem: {\r\n    color: theme.palette.text.hint\r\n  },\r\n  profileMenuIcon: {\r\n    marginRight: theme.spacing.unit * 2,\r\n    color: theme.palette.text.hint\r\n  },\r\n  profileMenuLink: {\r\n    fontSize: 16,\r\n    textDecoration: \"none\",\r\n    \"&:hover\": {\r\n      cursor: \"pointer\"\r\n    }\r\n  },\r\n \r\n \r\n  sendMessageButton: {\r\n    margin: theme.spacing.unit * 4,\r\n    marginTop: theme.spacing.unit * 2,\r\n    marginBottom: theme.spacing.unit * 2,\r\n    textTransform: \"none\"\r\n  },\r\n  sendButtonIcon: {\r\n    marginLeft: theme.spacing.unit * 2\r\n  }\r\n});\r\n\r\nexport default withStyles(styles)(HeaderView);\r\n","C:\\montessori\\montessori_ui\\src\\pages\\error\\styles.js",[],"C:\\montessori\\montessori_ui\\src\\components\\UserAvatar\\UserAvatar.js",[],"C:\\montessori\\montessori_ui\\src\\components\\UserAvatar\\styles.js",[],"C:\\montessori\\montessori_ui\\src\\components\\Wrappers\\Wrappers.js",[],"C:\\montessori\\montessori_ui\\src\\components\\Layout\\styles.js",[],"C:\\montessori\\montessori_ui\\src\\pages\\dashboard\\reportofactivities.js",["455","456","457","458","459","460","461","462","463","464","465","466","467","468","469","470","471","472","473","474","475","476","477","478","479","480","481","482","483","484","485","486","487","488","489","490","491","492","493","494","495","496","497","498","499","500","501","502","503","504","505","506","507","508","509","510","511","512","513","514","515","516","517","518"],"import React, { useState } from \"react\";\r\nimport {\r\n    LinearProgress,\r\n    OutlinedInput,\r\n} from \"@material-ui/core\";\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport {\r\n    Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, FormControl, InputLabel, MenuItem,\r\n    TableRow, Table,\r\n    TableHead,\r\n    TableBody,\r\n    TableCell\r\n} from \"@material-ui/core\";\r\nimport ActivityTabelService from \"./Locality/Service/activityTabelService\";\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport InputBase from '@material-ui/core/InputBase';\r\n// import { DataGrid, GridColDef, GridValueGetterParams } from '@mui/x-data-grid';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ActivityService from \"./Locality/Service/activityService\";\r\nimport AttendenceService from \"./Locality/Service/attendenceService\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as Yup from 'yup';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport { Grid, Card, Box, Select, TextField } from \"@material-ui/core\";\r\nimport { useFormik } from 'formik';\r\nimport { useContext, useEffect } from 'react';\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport StudentService from \"./Locality/Service/studentService\";\r\nimport {\r\n    ResponsiveContainer,\r\n    ComposedChart,\r\n    AreaChart,\r\n    LineChart,\r\n    Line,\r\n    Area,\r\n    PieChart,\r\n    Pie,\r\n    Cell,\r\n    YAxis,\r\n    XAxis,\r\n} from \"recharts\";\r\nimport mock from \"./mock\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { Typography } from \"../../components/Wrappers/Wrappers\";\r\nimport Dot from \"../../components/Sidebar/components/Dot\";\r\nimport BigStat from \"./components/BigStat/BigStat\";\r\n\r\nimport { withStyles, makeStyles, alpha } from '@material-ui/core/styles';\r\nimport AddClassService from \"./Locality/Service/addClassService\";\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        backgroundColor: \"#30875b\",\r\n        color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n        fontSize: 14,\r\n    },\r\n}))(TableCell);\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: 200,\r\n    },\r\n}));\r\nexport default function ReportOfActivities() {\r\n\r\n    const tableHeaders = [ 'Student Name', 'Age', 'Activity Name', 'Sub Activity Name','Key'];\r\n    const classes = useStyles();\r\n    const [activityList, setActivityList] = useState([]);\r\n    const [reportList, setReportList] = useState([]);\r\n    const [classNameList, setClassNameList] = useState([]);\r\n    const [addClassList, setAddClassList] = useState([]);\r\n    const [age, setAge] = React.useState('');\r\n    var [error, setError] = useState(null);\r\n    const [studentList, setStudentList] = useState([]);\r\n    const [activityIdList, setActivityIdList] = useState([]);\r\n    const [open, setOpen] = React.useState(false);\r\n    const current = new Date();\r\n    const date = `${current.getFullYear()}-0${current.getMonth() + 1}-${current.getDate()}`;\r\n    var [dateValue, setDateValue] = useState(date);\r\n    var [classValue, setClassValue] = useState(\"\");\r\n    var [studentId, setStudentId] = useState(\"\");\r\n    var [keyValue, setKeyValue] = useState(\"\");\r\n    const [activity, setActivity] = useState({\r\n        classId: '',\r\n        startDate: '',\r\n        endDate: '',\r\n        description: '',\r\n        activityName: '',\r\n        status: '',\r\n    });\r\n    useEffect(() => {\r\n        getAddClassList();\r\n        return () => {\r\n            setActivityIdList([]);\r\n            setActivityList([]);\r\n            setAddClassList([]);\r\n            setStudentList([]);\r\n            \r\n            // setClassNameList([]);\r\n        }\r\n    }, []);\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const onclick = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const handleChange = (event) => {\r\n        setAge(event.target.value);\r\n    };\r\n    const ageChange = (attendence) => {\r\n\r\n    };\r\n    const onSubmit = data => {\r\n        const userDetails = JSON.parse(localStorage.getItem(\"userDetail\"));\r\n        const keys = { \"classId\": classValue, \"schooleId\": userDetails.schoolId, \"studentId\": studentList }\r\n       \r\n    };\r\n\r\n    const getAddClassList = () => {\r\n        const userDetails = JSON.parse(localStorage.getItem(\"userDetail\"));\r\n        AddClassService.getAllAddClass(userDetails.schoolId).then((res) => {\r\n            setAddClassList(res);\r\n        }).catch((err) => {\r\n            // setError(err.message);\r\n        });\r\n    }\r\n    const findActivityList = (item) => {\r\n        const userDetails = JSON.parse(localStorage.getItem(\"userDetail\"));\r\n        const keys = { \"classId\": classValue, \"schooleId\": userDetails.schoolId, \"studentId\": studentId, \"key\":keyValue }\r\n        ActivityService.findActivityList(keys).then((res) => {\r\n            // setClassValue(\"\");\r\n            setActivityList(res);\r\n           // setStudentList(res);\r\n        }).catch((err) => {\r\n            // setError(err.message);\r\n        });\r\n    }\r\n    const getClassNameList = (item) => {\r\n        AddClassService.getAddClassNameById({ className: item.target.value }).then((res) => {\r\n            setClassNameList(res);\r\n        }).catch((err) => {\r\n            setError(err.message);\r\n        });\r\n    }\r\n    const handleCheck = (event, item) => {\r\n        var updatedList = studentList.map(res => {\r\n            if (item._id === res._id) {\r\n                return { ...res, status: !res.status };\r\n            }\r\n            return { ...res };\r\n        });\r\n        console.log(updatedList)\r\n        setStudentList(updatedList);\r\n    };\r\n    const getStudentActivityList = () => {\r\n        const userDetails = JSON.parse(localStorage.getItem(\"userDetail\"));\r\n     \r\n        ActivityTabelService.getStudentActivity(userDetails.schoolId).then((res) => {\r\n\r\n            setActivityList(res);\r\n        }).catch((err) => {\r\n            // setError(err.message);\r\n        });\r\n    }\r\n    const getStudentList = (event,obj) => {\r\n        const userDetails = JSON.parse(localStorage.getItem(\"userDetail\"));\r\n        StudentService.getAllStudentById(userDetails.schoolId, { classId: event }).then((res) => {\r\n            const studentDetails = res.map(res => {\r\n                return { _id: res._id, studentName: res.studentName, status: true };\r\n            })\r\n            \r\n            setStudentList(studentDetails);\r\n\r\n        }).catch((err) => {\r\n            // setError(err.message);\r\n        });\r\n    }\r\n    return (\r\n\r\n        <>\r\n            <PageTitle title=\"Activity Reports\" />\r\n            <Card sx={{ maxWidth: 345 }}>\r\n                <Box   >\r\n                    <div >\r\n                        <form\r\n                        // onSubmit={formik.handleSubmit} \r\n                        >\r\n                            <Grid container spacing={2} columns={12} style={{ margin: 10 }}  >                           \r\n                                <Grid item xs={3} >\r\n                                <FormControl variant=\"standard\" fullWidth=\"true\" >\r\n                            <InputLabel id=\"demo-simple-select-standard-label\">Age</InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-standard-label\"\r\n                                id=\"className\"\r\n                                name=\"classId\"\r\n                                label=\"className\"\r\n                               value={classValue}\r\n                                onChange={e => {getStudentList(e.target.value); setClassValue(e.target.value) }}\r\n                            >\r\n                                <MenuItem value=\"\">\r\n                                    <em>None</em>\r\n                                </MenuItem>\r\n                                {addClassList.map(({ _id, className }) => (\r\n                                    <MenuItem key={_id} value={_id}>{className}\r\n                                        {/* <Checkbox checked={formik.values.categoryId.indexOf(parent) > -1} /> */}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n\r\n                        </FormControl>\r\n                                </Grid>\r\n                                <Grid item xs={3}>\r\n                                <FormControl variant=\"standard\" fullWidth>\r\n                            <InputLabel id=\"studentName\">Student Name</InputLabel>\r\n                            <Select\r\n                                labelId=\"studentName\"\r\n                                id=\"studentName\"\r\n                                label=\"Student Name\"\r\n                                name=\"studentId\"\r\n                                 value={studentId}\r\n                                onChange={e => {setStudentId(e.target.value) }}\r\n                                // error={formik.touched.studentId && Boolean(formik.errors.studentId)}\r\n                                // helperText={formik.touched.studentId && formik.errors.studentId}\r\n                            >\r\n                                <MenuItem value=\"\">\r\n                                    <em>None</em>\r\n                                </MenuItem>\r\n                                {studentList.map(({index,_id, studentName}) => (\r\n                                    <MenuItem key={index} value={_id}>{studentName}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n                                </Grid>\r\n                               \r\n                                <Grid item xs={3} >\r\n                                <FormControl variant=\"standard\" fullWidth>\r\n                            <InputLabel id=\"demo-simple-select-standard-label\">Select Key</InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-standard-label\"\r\n                                id=\"demo-simple-select-standard\"\r\n                                label=\"Key\"\r\n                                name=\"key\"\r\n                                value={keyValue}\r\n                                onChange={e => {setKeyValue(e.target.value) }}\r\n                               \r\n                            >\r\n                                <MenuItem value=\"\">\r\n                                    <em>None</em>\r\n                                </MenuItem>\r\n                                <MenuItem value={\"A\"}>Works with Assistance </MenuItem>\r\n                                <MenuItem value={\"I\"}>Works Independently</MenuItem>\r\n                                <MenuItem value={\"N\"}>Not yet Presented</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                                </Grid>\r\n                                <Grid item xs={3} >\r\n                                <Button style={{ backgroundColor: 'rgb(48 135 91)', color: 'white' }}\r\n                                 type=\"button\" onClick={() => findActivityList()} variant=\"contained\" >\r\n                                     Search</Button>\r\n                                </Grid>\r\n                                <Grid container spacing={4}>\r\n                                    <Grid item xs={12}>\r\n                                        <Widget title=\"\" upperTitle noBodyPadding bodyClass={classes.tableOverflow}>\r\n                                            <Table className=\"mb-0\">\r\n                                                <TableHead >\r\n                                                    <TableRow>\r\n                                                        {tableHeaders.map(key => (\r\n                                                            <StyledTableCell key={key}>{key}</StyledTableCell>\r\n                                                        ))}\r\n                                                    </TableRow>\r\n                                                </TableHead>\r\n                                                <TableBody>\r\n                                                    {activityList.map((activitydetails) => (\r\n                                                        <TableRow key={activitydetails._id}>\r\n                                                            \r\n                                                            <TableCell className=\"pl-3 fw-normal\" >\r\n                                                                <span style={{ fontSize: \"larger\" }}>{activitydetails.studentId.studentName}</span>\r\n                                                            </TableCell>\r\n                                                            <TableCell className=\"pl-3 fw-normal\" >{activitydetails.classId ? activitydetails.classId.className : ''}</TableCell>\r\n                                                            <TableCell className=\"pl-3 fw-normal\" >{activitydetails.activityId ? activitydetails.activityId.activityName : ''}</TableCell>\r\n                                                            <TableCell className=\"pl-3 fw-normal\" >{activitydetails.subActivityId ? activitydetails.subActivityId.subActivityName : ''}</TableCell>\r\n                                                            {/* <TableCell className=\"pl-3 fw-normal\" >{sub.subActivityName}</TableCell> */}\r\n                                                            <TableCell className=\"pl-3 fw-normal\" >{activitydetails.key}</TableCell>\r\n                                                        </TableRow>\r\n                                                    ))}\r\n                                                </TableBody>\r\n                                            </Table>\r\n                                        </Widget>\r\n                                    </Grid>\r\n                                </Grid>\r\n                                {/* <span style={{ fontSize: \"larger\", marginTop: \"20px\" }}>Student Details:</span>\r\n                                {studentList.map((item, index) => (\r\n                                    <Grid container rowSpacing={1} key={index} style={{ lineHeight: \"2\" }}>\r\n\r\n                                        <Grid item xs={6}>\r\n                                            <span style={{ fontSize: \"larger\" }}>{item.studentName}</span>\r\n                                        </Grid>\r\n                                        <Grid item xs={2}>\r\n                                            <input value={item.status} type=\"checkbox\" checked={item.status} style={{ height: \"15px\", width: \"15px\" }}\r\n                                                //  onChange={handleCheck}\r\n                                                onChange={e => handleCheck(e, item)} />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                ))} */}\r\n                            </Grid>\r\n                           \r\n                        </form>\r\n                    </div>\r\n                </Box>\r\n            </Card>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n","C:\\montessori\\montessori_ui\\src\\pages\\dashboard\\reports.js",["519","520","521","522","523","524","525","526","527","528","529","530","531","532","533","534","535","536","537","538","539","540","541","542","543","544","545","546","547","548","549","550","551","552","553","554","555","556","557","558","559","560","561","562","563","564","565","566","567","568","569","570","571","572","573","574","575","576","577","578","579","580"],"import React, { useState } from \"react\";\r\nimport {\r\n    LinearProgress,\r\n    OutlinedInput,\r\n} from \"@material-ui/core\";\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport {\r\n    Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, FormControl, InputLabel, MenuItem,\r\n    TableRow, Table,\r\n    TableHead,\r\n    TableBody,\r\n    TableCell\r\n} from \"@material-ui/core\";\r\nimport ExportExcel from \"../../Excelexport\";\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport InputBase from '@material-ui/core/InputBase';\r\n// import { DataGrid, GridColDef, GridValueGetterParams } from '@mui/x-data-grid';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ActivityService from \"./Locality/Service/activityService\";\r\nimport AttendenceService from \"./Locality/Service/attendenceService\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as Yup from 'yup';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport { Grid, Card, Box, Select, TextField } from \"@material-ui/core\";\r\nimport { useFormik } from 'formik';\r\nimport { useContext, useEffect } from 'react';\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport StudentService from \"./Locality/Service/studentService\";\r\nimport {\r\n    ResponsiveContainer,\r\n    ComposedChart,\r\n    AreaChart,\r\n    LineChart,\r\n    Line,\r\n    Area,\r\n    PieChart,\r\n    Pie,\r\n    Cell,\r\n    YAxis,\r\n    XAxis,\r\n} from \"recharts\";\r\nimport mock from \"./mock\";\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { Typography } from \"../../components/Wrappers/Wrappers\";\r\nimport Dot from \"../../components/Sidebar/components/Dot\";\r\nimport BigStat from \"./components/BigStat/BigStat\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { withStyles, makeStyles, alpha } from '@material-ui/core/styles';\r\nimport AddClassService from \"./Locality/Service/addClassService\";\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        backgroundColor: \"#30875b\",\r\n        color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n        fontSize: 14,\r\n    },\r\n}))(TableCell);\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: 200,\r\n    },\r\n}));\r\nexport default function Reports() {\r\n\r\n    const tableHeaders = [ 'Student Name', 'Number Of Working Days','Days Presented','Days Obsented'];\r\n    const classes = useStyles();\r\n    const [activityList, setActivityList] = useState([]);\r\n    const [result, setResult]= useState([]);\r\n    const [reportList, setReportList] = useState([]);\r\n    const [classNameList, setClassNameList] = useState([]);\r\n    const [addClassList, setAddClassList] = useState([]);\r\n    const [pg, setpg] = React.useState(0);\r\n    const [rpg, setrpg] = React.useState(5);\r\n    const [startDate1, setStartDate1] = useState('');\r\n    const [endDate1, setEndDate1] = useState('');\r\n    const [age, setAge] = React.useState('');\r\n    var [studentId, setStudentId] = useState(\"\");\r\n    var [error, setError] = useState(null);\r\n    const [studentList, setStudentList] = useState([]);\r\n    const [getReport, setGetReport ]= useState([]);\r\n    const [activityIdList, setActivityIdList] = useState([]);\r\n    const [open, setOpen] = React.useState(false);\r\n    const current = new Date();\r\n    const date = `${current.getFullYear()}-0${current.getMonth() + 1}-${current.getDate()}`;\r\n    var [dateValue, setDateValue] = useState(date);\r\n    var [classValue, setClassValue] = useState(\"\");\r\n    const [activity, setActivity] = useState({\r\n        classId: '',\r\n        startDate: '',\r\n        endDate: '',\r\n        description: '',\r\n        activityName: '',\r\n        status: '',\r\n    });\r\n    \r\n    useEffect(() => {\r\n        getStudentList()\r\n        // getActivityList();\r\n        // getAddClassList();\r\n        return () => {\r\n            // setActivityIdList([]);\r\n            // setActivityList([]);\r\n            // setAddClassList([]);\r\n            setReportList([]);\r\n            setStudentList([]);\r\n            setGetReport([]);\r\n            // setClassNameList([]);\r\n        }\r\n    }, []);\r\n    const handleChangeRowsPerPage=(event)=> {\r\n        setrpg(parseInt(event.target.value, 10));\r\n        setpg(0);\r\n    }\r\n    const  excelExport  =(res)  => {\r\n        const result= res.map((response)=>{\r\n \r\n             return {\r\n                 \"Student Name\":response.studentDetails[0] ? response.studentDetails[0].studentName : '', \r\n                 \"Count\":response.count,\r\n                 \"Date\":response.present,\r\n                 \"Absent\":response.absent\r\n\r\n\r\n                \r\n             }\r\n            \r\n          })\r\n          setResult(result);\r\n     };\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const onclick = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const handleChange = (event) => {\r\n        setAge(event.target.value);\r\n    };\r\n    const ageChange = (attendence) => {\r\n\r\n    };\r\n    const onSubmit = data => {\r\n        const report = JSON.parse(localStorage.getItem(\"userDetail\"));\r\n        const newstartDate1 = startDate1 ? startDate1 : null;\r\n        const newendDate1 = endDate1 ? endDate1 : null;\r\n        const keys = { \"schooleId\": report.schoolId, \"studentId\": studentId, \"startDate1\":newstartDate1,\"endDate1\":newendDate1 }\r\n        AttendenceService.getStuAttReport(keys).then((res) => {\r\n            excelExport(res);\r\n            setGetReport(res);\r\n            \r\n            // setStudentList(res[0]);\r\n        }).catch((err) => {\r\n            // setError(err.message);\r\n        });\r\n    };\r\n    // const getActivityList = () => {\r\n    //     const userDetails = JSON.parse(localStorage.getItem(\"userDetail\"));\r\n    //     ActivityService.getAllActivity(userDetails.schoolId).then((res) => {\r\n    //         setActivityList(res);\r\n    //     }).catch((err) => {\r\n    //         // setError(err.message);\r\n    //     });\r\n    // }\r\n\r\n    const getStudentList = (event, obj) => {\r\n        const userDetails = JSON.parse(localStorage.getItem(\"userDetail\"));\r\n        StudentService.getAllStudentById(userDetails.schoolId,\r\n            //  { classId: event }\r\n        ).then((res) => {\r\n            const studentDetails = res.map(res => {\r\n                return { _id: res._id, studentName: res.studentName, status: true };\r\n            })\r\n            setStudentList(studentDetails);\r\n\r\n            if (obj) {\r\n                setActivity(obj);\r\n            }\r\n        }).catch((err) => {\r\n            // setError(err.message);\r\n        });\r\n    }\r\n    // const getAddClassList = () => {\r\n    //     const userDetails = JSON.parse(localStorage.getItem(\"userDetail\"));\r\n    //     AddClassService.getAllAddClass(userDetails.schoolId).then((res) => {\r\n    //         setAddClassList(res);\r\n    //     }).catch((err) => {\r\n    //         // setError(err.message);\r\n    //     });\r\n    // }\r\n    const findAttendenceList = (item) => {\r\n        const userDetails = JSON.parse(localStorage.getItem(\"userDetail\"));\r\n        const keys = { \"classId\": classValue, \"schooleId\": userDetails.schoolId,  \"date\": dateValue }\r\n        AttendenceService.findAttendenceList(keys).then((res) => {\r\n            debugger\r\n            setDateValue(\"\");\r\n            setClassValue(\"\");\r\n            setStudentList(res[0]);\r\n        }).catch((err) => {\r\n            // setError(err.message);\r\n        });\r\n    }\r\n\r\n    const getClassNameList = (item) => {\r\n        AddClassService.getAddClassNameById({ className: item.target.value }).then((res) => {\r\n\r\n            setClassNameList(res);\r\n\r\n        }).catch((err) => {\r\n            setError(err.message);\r\n        });\r\n    }\r\n    const editActivity = (activity) => {\r\n        activity.classId = activity.classId ? activity.classId._id : '';\r\n        setActivity(activity)\r\n        handleOpen()\r\n    }\r\n    const deleteActivity = (activitydelete) => {\r\n        if (activitydelete) {\r\n            ActivityService.deleteActivity(activitydelete).then((res) => {\r\n                // getActivityList();\r\n            }).catch((err) => {\r\n            });\r\n        }\r\n    };\r\n    const handleChangePage=(event, newpage) =>{\r\n        setpg(newpage);\r\n    }\r\n    const handleCheck = (event, item) => {\r\n        var updatedList = studentList.map(res => {\r\n            if (item._id === res._id) {\r\n                return { ...res, status: !res.status };\r\n            }\r\n            return { ...res };\r\n        });\r\n        console.log(updatedList)\r\n        setStudentList(updatedList);\r\n    };\r\n    return (\r\n\r\n        <>\r\n            <PageTitle title=\"Attendence Reports\" />\r\n            <Card sx={{ maxWidth: 345 }}>\r\n                <Box   >\r\n                    <div >\r\n                        <form\r\n                        // onSubmit={formik.handleSubmit} \r\n                        >\r\n                             <Grid container spacing={2} columns={12} style={{ margin: 10 }}  >\r\n                             <Grid item xs={2} >\r\n                             <FormControl variant=\"standard\" fullWidth>\r\n                            <InputLabel id=\"studentName\">Student Name</InputLabel>\r\n                            <Select\r\n                                labelId=\"studentName\"\r\n                                id=\"studentName\"\r\n                                label=\"Student Name\"\r\n                                name=\"studentId\"\r\n                                 value={studentId}\r\n                                onChange={e => {setStudentId(e.target.value) }}\r\n                                // error={formik.touched.studentId && Boolean(formik.errors.studentId)}\r\n                                // helperText={formik.touched.studentId && formik.errors.studentId}\r\n                            >\r\n                                <MenuItem value=\"\">\r\n                                    <em>None</em>\r\n                                </MenuItem>\r\n                                {studentList.map(({index,_id, studentName}) => (\r\n                                    <MenuItem key={index} value={_id}>{studentName}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n                                </Grid>\r\n                            <Grid item xs={2}>\r\n                                    <form className={classes.container} noValidate>\r\n                                    <TextField InputProps={{ style: { width: 160 } }}\r\n                                            id=\"dob\"\r\n                                            name=\"dob\"\r\n                                            label=\"Start Date\"\r\n                                            type=\"date\"\r\n                                           min=\"2016-11-10\"\r\n                                            max=\"2022-11-10\"   \r\n                                            value={startDate1}\r\n                                            onChange={e => {getStudentList(e.target.value); setStartDate1(e.target.value) }}          \r\n                                            className={classes.textField}\r\n                                            InputLabelProps={{\r\n                                                shrink: true,\r\n                                            }}\r\n                                        />\r\n                                    </form>\r\n                                </Grid>\r\n                                <Grid item xs={2} >\r\n                                <TextField InputProps={{ style: { width: 160 } }}\r\n                                            id=\"dob\"\r\n                                            name=\"dob\"\r\n                                            label=\"End Date\"\r\n                                            type=\"date\"\r\n                                           min=\"2016-11-10\"\r\n                                            max=\"2022-11-10\" \r\n                                            value={endDate1}\r\n                                            onChange={e => {setEndDate1(e.target.value) }}\r\n                                            // defaultValue=\"2017-05-24\"\r\n                                            InputLabelProps={{\r\n                                                shrink: true,\r\n                                            }}\r\n                                        />\r\n                                </Grid>\r\n                                <Grid item xs={2} >\r\n                                <Button style={{ backgroundColor: 'rgb(48 135 91)', color: 'white' }}\r\n                                 type=\"button\" onClick={() => onSubmit()} variant=\"contained\" >\r\n                                     Search</Button>\r\n                                </Grid>\r\n                                <Grid item xs={2} >\r\n                                <ExportExcel   excelData={result} fileName={'Student Activity'} />\r\n                                </Grid>\r\n                            </Grid>\r\n                            </form>\r\n                </div>  \r\n                </Box>\r\n            </Card>\r\n            <Grid container spacing={4}>\r\n                <Grid item xs={12}>\r\n                    <Widget title=\"\" upperTitle noBodyPadding bodyClass={classes.tableOverflow}>\r\n                        <Table className=\"mb-0\">\r\n                            <TableHead >\r\n                                <TableRow>\r\n                                    {tableHeaders.map(key => (\r\n                                        <StyledTableCell key={key}>{key}</StyledTableCell>\r\n                                    ))}\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                           \r\n                                {getReport.slice(pg * rpg, pg * rpg + rpg).map((report) => (\r\n                                    <TableRow key={report._id}>\r\n                                     <TableCell className=\"pl-3 fw-normal\" >{report.studentDetails[0]?report.studentDetails[0].studentName:''}</TableCell>\r\n                                     <TableCell className=\"pl-3 fw-normal\" >{report.count}</TableCell>\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{report.present}</TableCell>\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{report.absent}</TableCell>\r\n                                       \r\n                                    </TableRow>\r\n                                    \r\n                                ))}\r\n                                {/* ))} */}\r\n                            </TableBody>\r\n                        </Table>\r\n                        <TablePagination\r\n                            component=\"div\"\r\n                            rowsPerPageOptions={[5, 25, 50, 100, 200, 500, 700, 1000 ]}\r\n                            count={reportList.length}\r\n                            page={pg}\r\n                            onPageChange={handleChangePage}\r\n                            rowsPerPage={rpg}\r\n                            onRowsPerPageChange={handleChangeRowsPerPage}\r\n                        />\r\n                    </Widget>\r\n                </Grid>\r\n            </Grid>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n","C:\\montessori\\montessori_ui\\src\\pages\\dashboard\\Attendence.js",["581","582","583","584","585","586","587","588","589","590","591","592","593","594","595","596","597","598","599","600","601","602","603","604","605","606","607","608","609","610","611","612","613","614","615","616","617","618","619","620","621","622","623","624","625","626","627","628","629","630","631","632","633","634","635","636","637","638","639","640","641","642","643","644"],"import React, { useState } from \"react\";\r\nimport {\r\n    LinearProgress,\r\n    OutlinedInput,\r\n} from \"@material-ui/core\";\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport {\r\n    Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, FormControl, InputLabel, MenuItem,\r\n    TableRow, Table,\r\n    TableHead,\r\n    TableBody,\r\n    TableCell\r\n} from \"@material-ui/core\";\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport ActivityService from \"./Locality/Service/activityService\";\r\nimport AttendenceService from \"./Locality/Service/attendenceService\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as Yup from 'yup';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport { Grid, Card, Box, Select, TextField } from \"@material-ui/core\";\r\nimport { useFormik } from 'formik';\r\nimport { useContext, useEffect } from 'react';\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport StudentService from \"./Locality/Service/studentService\";\r\nimport {\r\n    ResponsiveContainer,\r\n    ComposedChart,\r\n    AreaChart,\r\n    LineChart,\r\n    Line,\r\n    Area,\r\n    PieChart,\r\n    Pie,\r\n    Cell,\r\n    YAxis,\r\n    XAxis,\r\n} from \"recharts\";\r\nimport mock from \"./mock\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { Typography } from \"../../components/Wrappers/Wrappers\";\r\nimport Dot from \"../../components/Sidebar/components/Dot\";\r\nimport BigStat from \"./components/BigStat/BigStat\";\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport AddClassService from \"./Locality/Service/addClassService\";\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        backgroundColor: \"#30875b\",\r\n        color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n        fontSize: 14,\r\n    },\r\n}))(TableCell);\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: 200,\r\n    },\r\n}));\r\nexport default function Attendence() {\r\n    const tableHeaders = ['Class Name', 'Activity Name', 'Status', 'Edit', 'Delete'];\r\n    const classes = useStyles();\r\n    const [activityList, setActivityList] = useState([]);\r\n    const [classNameList, setClassNameList] = useState([]);\r\n    const [addClassList, setAddClassList] = useState([]);\r\n    const [age, setAge] = React.useState('');\r\n    var [error, setError] = useState(null);\r\n    const [studentList, setStudentList] = useState([]);\r\n    const [activityIdList, setActivityIdList] = useState([]);\r\n    const [open, setOpen] = React.useState(false);\r\n    const current = new Date();\r\n    const date = `${current.getFullYear()}-0${current.getMonth() + 1}-${current.getDate()}`;\r\n    var [dateValue, setDateValue] = useState(date);\r\n    var [classValue, setClassValue] = useState(\"\");\r\n    const [activity, setActivity] = useState({\r\n        classId: '',\r\n        startDate: '',\r\n        endDate: '',\r\n        description: '',\r\n        activityName: '',\r\n        status: '',\r\n    });\r\n    useEffect(() => {\r\n        getActivityList();\r\n\r\n        getAddClassList();\r\n        return () => {\r\n            setActivityIdList([]);\r\n            setActivityList([]);\r\n            setAddClassList([]);\r\n            setStudentList([]);\r\n            // setClassNameList([]);\r\n        }\r\n    }, []);\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const onclick = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const handleChange = (event) => {\r\n        setAge(event.target.value);\r\n    };\r\n    const ageChange = (attendence) => {\r\n\r\n    };\r\n    const onSubmit = data => {\r\n        const userDetails = JSON.parse(localStorage.getItem(\"userDetail\"));\r\n        const keys = { \"classId\": classValue, \"schooleId\": userDetails.schoolId, \"studentList\": studentList, \"teacherId\": userDetails._id, \"date\": dateValue }\r\n        AttendenceService.creteAttendence(keys).then((res) => {\r\n            setDateValue(\"\");\r\n            setClassValue(\"\");\r\n            setStudentList([]);\r\n            alert(\" Attendence Successfully.\");\r\n        }).catch((err) => {\r\n            debugger\r\n            alert(err.response.data.message);\r\n        });\r\n    };\r\n    const getActivityList = () => {\r\n        const userDetails = JSON.parse(localStorage.getItem(\"userDetail\"));\r\n        ActivityService.getAllActivity(userDetails.schoolId).then((res) => {\r\n            setActivityList(res);\r\n        }).catch((err) => {\r\n            // setError(err.message);\r\n        });\r\n    }\r\n    const getAddClassList = () => {\r\n        const userDetails = JSON.parse(localStorage.getItem(\"userDetail\"));\r\n        AddClassService.getAllAddClass(userDetails.schoolId).then((res) => {\r\n            setAddClassList(res);\r\n        }).catch((err) => {\r\n            // setError(err.message);\r\n        });\r\n    }\r\n    const getStudentList = (event) => {\r\n        const userDetails = JSON.parse(localStorage.getItem(\"userDetail\"));\r\n        StudentService.getAllStudentById(userDetails.schoolId, { classId: event }).then((res) => {\r\n            const studentDetails = res.map(res => {\r\n                return { _id: res._id, studentName: res.studentName, status: true };\r\n            })\r\n            setStudentList(studentDetails);\r\n        }).catch((err) => {\r\n            // setError(err.message);\r\n        });\r\n    }\r\n\r\n\r\n    const getClassNameList = (event) => {\r\n        AddClassService.getAddClassNameById({ className: event.target.value }).then((res) => {\r\n\r\n            setClassNameList(res);\r\n\r\n        }).catch((err) => {\r\n            setError(err.message);\r\n        });\r\n    }\r\n    const editActivity = (activity) => {\r\n        activity.classId = activity.classId ? activity.classId._id : '';\r\n        setActivity(activity)\r\n        handleOpen()\r\n    }\r\n    const deleteActivity = (activitydelete) => {\r\n        if (activitydelete) {\r\n            ActivityService.deleteActivity(activitydelete).then((res) => {\r\n                getActivityList();\r\n            }).catch((err) => {\r\n            });\r\n        }\r\n    };\r\n    const handleCheck = (event, item) => {\r\n        var updatedList = studentList.map(res => {\r\n            if (item._id === res._id) {\r\n                return { ...res, status: !res.status };\r\n            }\r\n            return { ...res };\r\n        });\r\n        console.log(updatedList)\r\n        setStudentList(updatedList);\r\n    };\r\n    return (\r\n\r\n        <>\r\n            <PageTitle title=\"Attendence\" />\r\n            <Card sx={{ maxWidth: 345 }}>\r\n                <Box   >\r\n                    <div >\r\n                        <form\r\n                        // onSubmit={formik.handleSubmit} \r\n                        >\r\n                            <Grid container spacing={1} columns={12} style={{ margin: 10 }}  >\r\n                                <Grid item xs={12}>\r\n                                    <form className={classes.container} noValidate>\r\n                                        <TextField\r\n                                            InputProps={{ inputProps: { min: \"2020-05-01\" } }}\r\n                                            style={{ width: 270 }}\r\n                                            id=\"date\"\r\n                                            name=\"date\"\r\n                                            label=\"Date \"\r\n                                            type=\"date\"\r\n                                            min=\"2016-11-10\"\r\n                                            value={dateValue}\r\n                                            onChange={e =>{ setDateValue(e.target.value); getStudentList(e.target.value)}}\r\n                                            className={classes.textField}\r\n                                            InputLabelProps={{\r\n                                                shrink: true,\r\n                                            }}\r\n                                        />\r\n                                    </form>\r\n                                </Grid>\r\n                                {/* <Grid item xs={6} >\r\n                                    <FormControl variant=\"standard\" style={{ width: 270 }} >\r\n                                        <InputLabel id=\"demo-simple-select-standard-label\" >Age</InputLabel>\r\n                                        <Select\r\n                                            labelId=\"demo-simple-select-standard-label\"\r\n                                            id=\"className\"\r\n                                            name=\"classId\"\r\n                                            label=\"className\"\r\n                                            value={classValue}\r\n                                            onChange={e => { setClassValue(e.target.value); getStudentList(e.target.value) }}\r\n                                        >\r\n                                            <MenuItem value=\"\">\r\n                                                <em>None</em>\r\n                                            </MenuItem>\r\n                                            {addClassList.map(({ _id, className }) => (\r\n                                                <MenuItem key={_id} value={_id}>{className}\r\n                                                  \r\n                                                </MenuItem>\r\n                                            ))}\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </Grid> */}\r\n                                <span style={{ fontSize: \"larger\", marginTop: \"20px\" }}>Student Details:</span>\r\n                                {studentList.map((item, index) => (\r\n                                    <Grid container rowSpacing={1} key={index} style={{ lineHeight: \"2\" }}>\r\n\r\n                                        <Grid item xs={6}>\r\n                                            <span style={{ fontSize: \"larger\" }}>{item.studentName}</span>\r\n                                        </Grid>\r\n                                        <Grid item xs={2}>\r\n                                            <input value={item.status} type=\"checkbox\" checked={item.status} style={{ height: \"15px\", width: \"15px\" }}\r\n                                                //  onChange={handleCheck}\r\n                                                onChange={e => handleCheck(e, item)} />\r\n                                        </Grid>\r\n                                    </Grid>\r\n                                ))}\r\n                            </Grid>\r\n                            <div style={{ textAlign: 'right', margin: '29px' }}>\r\n                                <Button style={{ backgroundColor: 'rgb(48 135 91)', color: 'white' }} type=\"button\" onClick={() => onSubmit()} variant=\"contained\" >Submit</Button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </Box>\r\n            </Card>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n","C:\\montessori\\montessori_ui\\src\\pages\\dashboard\\StudentDetails.js",["645","646","647","648","649","650","651","652","653","654","655","656","657","658","659","660","661","662","663","664","665","666","667","668","669","670","671","672","673","674","675","676","677","678","679","680","681","682","683","684","685","686","687","688","689","690","691","692","693","694","695","696","697","698","699","700","701"],"import React, { useState } from \"react\";\r\nimport {\r\n    LinearProgress,\r\n    OutlinedInput,\r\n} from \"@material-ui/core\";\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\n\r\nimport { Link } from \"@material-ui/core\";\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport {\r\n    Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, FormControl, InputLabel, MenuItem,\r\n    TableRow, Table,\r\n    TableHead,\r\n    TableBody,\r\n    TableCell\r\n} from \"@material-ui/core\";\r\nimport {\r\n    useParams\r\n  } from \"react-router-dom\";\r\nimport TeacherService from \"./Locality/Service/teacherService\";\r\nimport ActivityService from \"./Locality/Service/activityService\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as Yup from 'yup';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport { Grid, Card, Box, Select, TextField } from \"@material-ui/core\";\r\nimport { useFormik } from 'formik';\r\nimport { useContext, useEffect } from 'react';\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport {\r\n    ResponsiveContainer,\r\n    ComposedChart,\r\n    AreaChart,\r\n    LineChart,\r\n    Line,\r\n    Area,\r\n    PieChart,\r\n    Pie,\r\n    Cell,\r\n    YAxis,\r\n    XAxis,\r\n} from \"recharts\";\r\nimport mock from \"./mock\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { Typography } from \"../../components/Wrappers/Wrappers\";\r\nimport Dot from \"../../components/Sidebar/components/Dot\";\r\nimport BigStat from \"./components/BigStat/BigStat\";\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport AddClassService from \"./Locality/Service/addClassService\";\r\nimport StudentService from \"./Locality/Service/studentService\";\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        backgroundColor: \"#30875b\",\r\n        color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n        fontSize: 14,\r\n    },\r\n}))(TableCell);\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: 200,\r\n    },\r\n}));\r\nexport default function StudentDetails(props, history) {\r\n    const { id } = useParams();\r\n\r\n    const tableHeaders = ['Student Name','Email' ,'Parent Name','Edit', 'Delete' ];\r\n    const classes = useStyles();\r\n    const [teacherList, setTeacherList] = useState([]);\r\n    const [classNameList, setClassNameList] = useState([]);\r\n    const [studentList, setStudentList] = useState([]);\r\n    const [age, setAge] = React.useState('');\r\n    var [error, setError] = useState(null);\r\n    const [teacherIdList, setTeacherIdList] = useState([]);\r\n    const [open, setOpen] = React.useState(false);\r\n    const [pg, setpg] = React.useState(0);\r\n    const [rpg, setrpg] = React.useState(5);\r\n    const [addUserPermitionsList, setUserPermitionsList] = useState({studentDetailsEdit:false, studentDetailsDelete:false});\r\n    const [student, setStudent] = useState({\r\n        classId: '',\r\n        teacherName: '',\r\n        email: '',\r\n        subject: '',\r\n        qualification: '',\r\n        address: '',\r\n        mobileNumber: '',\r\n        attendence: '',\r\n        status: '',\r\n    });const handleChangePage=(event, newpage) =>{\r\n        setpg(newpage);\r\n    }\r\n  \r\n    const handleChangeRowsPerPage=(event)=> {\r\n        setrpg(parseInt(event.target.value, 10));\r\n        setpg(0);\r\n    }\r\n\r\n    useEffect(() => {\r\n        // getTeacherList();\r\n        getStudentList();\r\n        getUserPermitionsList();\r\n        return () => {\r\n            setTeacherIdList([]);\r\n            setTeacherList([]);\r\n            setStudentList([]);\r\n            setUserPermitionsList({})\r\n            // setClassNameList([]);\r\n        }\r\n    }, []);\r\n    const handleOpen = () => {\r\n        props.history.push('/app/studentregistration/add') \r\n    };\r\n    const onclick = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const handleChange = (event) => {\r\n        setAge(event.target.value);\r\n    };\r\n    const onSubmit = data => {\r\n        console.log(JSON.stringify(data, null, 2));\r\n    };\r\n    // const getTeacherList = () => {\r\n    //     TeacherService.getAllTeacher().then((res) => {\r\n    //         setTeacherList(res);\r\n    //     }).catch((err) => {\r\n           \r\n    //     });\r\n    // }\r\n    const getUserPermitionsList=()=>{\r\n        const userPermitions= ActivityService.userPermitions();\r\n        debugger\r\n             setUserPermitionsList(userPermitions);\r\n        }\r\n    const getStudentList = () => {\r\n        const userDetails = JSON.parse(localStorage.getItem(\"userDetail\"));\r\n        StudentService.getAllStudent(userDetails.schoolId).then((res) => {\r\n            setStudentList(res);\r\n        }).catch((err) => {\r\n            // setError(err.message);\r\n        });\r\n    }\r\n    const editStudent = (id) => {\r\n        // teacher.classId = teacher.classId ? teacher.classId._id :'';\r\n        props.history.push(`/app/studentregistration/${id}`);\r\n        // setStudent(student);\r\n        // handleOpen();\r\n    }\r\n    const deleteStudent= (studentdelete) => {\r\n        if (studentdelete) {\r\n            StudentService.deleteStudent(studentdelete).then((res) => {\r\n                getStudentList();\r\n            }).catch((err) => {\r\n            });\r\n        }\r\n    };\r\n    const formik = useFormik({\r\n        initialValues: student,\r\n        enableReinitialize: true,\r\n        onSubmit: (values, { resetForm }) => {\r\n        //   StudentService.upadeStudent(values).then((res) => {\r\n        //     alert(\" Updated Successfully.\");\r\n        //   })\r\n        //     .catch((err) => {\r\n        //       alert(err.response.data.message)\r\n        //     })\r\n        },\r\n      });\r\n    return (\r\n        <>\r\n            <PageTitle title=\"Student Details\" button={<Button\r\n                variant=\"contained\"   onClick={handleOpen}\r\n                size=\"medium\"\r\n                color=\"secondary\" style={{ backgroundColor: '#30875b' }}> Student Registration\r\n            </Button>} />\r\n            <Grid container spacing={4}>\r\n                <Grid item xs={12}>\r\n                    <Widget title=\"\" upperTitle noBodyPadding bodyClass={classes.tableOverflow}>\r\n                        <Table className=\"mb-0\">\r\n                            <TableHead >\r\n                                <TableRow>                           \r\n                                <StyledTableCell >Student Name</StyledTableCell>\r\n                                <StyledTableCell >Email</StyledTableCell>\r\n                                <StyledTableCell >Parent Name</StyledTableCell>\r\n                                        { addUserPermitionsList && addUserPermitionsList.studentDetailsEdit ?\r\n                                        <StyledTableCell >Edit</StyledTableCell>: null }\r\n                                          {addUserPermitionsList && addUserPermitionsList.studentDetailsDelete ?\r\n                                        <StyledTableCell >Delete</StyledTableCell>: null }\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {studentList.slice(pg * rpg, pg * rpg + rpg).map((student) => (\r\n                                    <TableRow key={student._id}>\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{student.studentName}</TableCell>\r\n                                        {/* <TableCell className=\"pl-3 fw-normal\" >{student.classId ? student.classId.className:\"\"}</TableCell> */}\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{student.email}</TableCell>\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{student.parentName}</TableCell>\r\n\r\n                                        { addUserPermitionsList.studentDetailsEdit ? \r\n                                        <TableCell>\r\n                                            <EditIcon style={{ cursor: 'pointer' }} onClick={() => editStudent(student._id)} >\r\n                                            </EditIcon >\r\n                                        </TableCell>: null }\r\n                                        { addUserPermitionsList.studentDetailsDelete ?\r\n                                        <TableCell>\r\n                                            <DeleteIcon style={{ cursor: 'pointer' }} onClick={() => deleteStudent(student._id)} />\r\n                                        </TableCell>: null }\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                        <TablePagination\r\n                            component=\"div\"\r\n                            rowsPerPageOptions={[5, 10, 25]}\r\n                            count={studentList.length}\r\n                            page={pg}\r\n                            onPageChange={handleChangePage}\r\n                            rowsPerPage={rpg}\r\n                            onRowsPerPageChange={handleChangeRowsPerPage}\r\n                        />\r\n                    </Widget>\r\n                </Grid>\r\n            </Grid>\r\n            \r\n        </>\r\n    );\r\n}\r\n\r\n\r\n","C:\\montessori\\montessori_ui\\src\\pages\\dashboard\\SubActivity.js",["702","703","704","705","706","707","708","709","710","711"],"import React, { useState } from \"react\";\r\nimport {\r\n    Button, Dialog, DialogActions, DialogContent, DialogTitle, FormControl, InputLabel, MenuItem,\r\n    TableRow, Table,\r\n    TableHead,\r\n    TableBody,\r\n    TableCell\r\n} from \"@material-ui/core\";\r\nimport ActivityService from \"./Locality/Service/activityService\";\r\nimport SubActivityService from \"./Locality/Service/subActivityService\";\r\nimport ActivityTabelService from \"./Locality/Service/activityTabelService\";\r\nimport * as Yup from 'yup';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport { Grid, Select, TextField } from \"@material-ui/core\";\r\nimport { useFormik } from 'formik';\r\nimport {  useEffect } from 'react';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport AddClassService from \"./Locality/Service/addClassService\";\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        backgroundColor: \"#30875b\",\r\n        color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n        fontSize: 14,\r\n    },\r\n}))(TableCell);\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: 200,\r\n    },\r\n}));\r\nexport default function SubActivity() {\r\n    const tableHeaders = ['List Of Activities','Exercise','Edit', 'Delete'];\r\n    const classes = useStyles();\r\n    const [filterActivity, setfilterActivity] = useState('');\r\n    const [filterExercise, setExercise] = useState('');\r\n    const [filterExerciseList, setExerciseList] = useState([]);\r\n    const [subActivitylList, setSubActivityList] = useState([]);\r\n    const [temSubActivitylList, setTempSubActivityList] = useState([]);\r\n    const [classNameList, setClassNameList] = useState([]);\r\n    const [activityList, setActivityList] = useState([]);\r\n    const [age, setAge] = React.useState('');\r\n    var [error, setError] = useState(null);\r\n    const [addActivityList, setAddActivityList] = useState([]);\r\n    const [subActivityIdList, setSubActivityIdList] = useState([]);\r\n    const [open, setOpen] = React.useState(false);\r\n    const [pg, setpg] = React.useState(0);\r\n    const [rpg, setrpg] = React.useState(5);\r\n    const [subActivity, setSubActivity] = useState({\r\n        // classId: '',\r\n        subActivityName: '',\r\n    });\r\n    const handleChangePage=(event, newpage) =>{\r\n        setpg(newpage);\r\n    }\r\n  \r\n    const handleChangeRowsPerPage=(event)=> {\r\n        setrpg(parseInt(event.target.value, 10));\r\n        setpg(0);\r\n    }\r\n    const validationSchema = Yup.object().shape({\r\n        // classId: Yup.string().required('Class Name is required'),\r\n        subActivityName: Yup.string().required('Sub Activity Name is required'),\r\n    });\r\n    useEffect(() => {\r\n        getSubList();\r\n        getActivityList()\r\n       \r\n        return () => {\r\n            setSubActivityIdList([]);\r\n            setActivityList([]);\r\n            setSubActivityList([]);\r\n            setTempSubActivityList([]);\r\n            // setAddClassList([]);\r\n            // setClassNameList([]);\r\n        }\r\n    }, []);\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const onclick = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const handleChange = (event) => {\r\n        setAge(event.target.value);\r\n    };\r\n    const onSubmit = data => {\r\n        console.log(JSON.stringify(data, null, 2));\r\n    };\r\n    const getSubList = () => {\r\n        const userDetails = JSON.parse(localStorage.getItem(\"userDetail\"));\r\n        SubActivityService.getAllSubActivity(userDetails.schoolId).then((res) => {\r\n            \r\n            if(res){\r\n                setSubActivityList(res);\r\n                setTempSubActivityList(res);\r\n                const setValues = res.map(result=>{\r\n                    return {name:result.subActivityName,value:result._id};\r\n                });\r\n                setExerciseList(setValues);\r\n               \r\n            }\r\n            \r\n        }).catch((err) => {\r\n            // setError(err.message);\r\n        });\r\n    }\r\n    const getActivityList = () => {\r\n        const userDetails = JSON.parse(localStorage.getItem(\"userDetail\"));\r\n        ActivityTabelService.getAllActivityTabel(userDetails.schoolId).then((res) => {\r\n            setAddActivityList(res);\r\n        }).catch((err) => {\r\n            // setError(err.message);\r\n        });\r\n    }\r\n    const getClassNameList = (event) => {\r\n        AddClassService.getAddClassNameById({ className: event.target.value }).then((res) => {\r\n            setClassNameList(res);\r\n        }).catch((err) => {\r\n            setError(err.message);\r\n        });\r\n    }\r\n    const editSubActivity = (sub) => {\r\n        const obj = JSON.parse(JSON.stringify(sub));\r\n        obj.activityId = sub.activityId ? sub.activityId._id : '';\r\n        // tabel.classId = activity.classId ? activity.classId._id :'';\r\n        setSubActivity(obj)\r\n        handleOpen()\r\n    }\r\n    const deleteSubActivity = (subdelete) => {\r\n        if (subdelete) {\r\n            SubActivityService.deleteSubActivity(subdelete).then((res) => {\r\n                getSubActivityList();\r\n            }).catch((err) => {\r\n            });\r\n        }\r\n    };\r\n    const getSubActivityList = () => {\r\n        const userDetails = JSON.parse(localStorage.getItem(\"userDetail\"));\r\n        SubActivityService.getAllSubActivity(userDetails.schoolId).then((res) => {\r\n            setSubActivityList(res);\r\n        }).catch((err) => {\r\n            // setError(err.message);\r\n        });\r\n    }\r\n    const formik = useFormik({\r\n        initialValues: subActivity,\r\n        enableReinitialize: true,\r\n        validationSchema: validationSchema,\r\n        onSubmit: (values, { resetForm }) => {\r\n            const userDetails = JSON.parse(localStorage.getItem(\"userDetail\"));\r\n            values.schooleId = userDetails.schoolId;\r\n            if (subActivity._id) {\r\n                SubActivityService.upadeSubActivity(values).then((res) => {\r\n                    \r\n                    handleClose();\r\n                    getSubActivityList();\r\n                    resetForm()\r\n                    alert(\"Sub Activity Tabel Updated Successfully.\");\r\n                }).catch((err) => {\r\n                });\r\n            }\r\n            else {\r\n                SubActivityService.creteSubActivity(values).then((res) => {\r\n                    getSubActivityList();\r\n                    resetForm();\r\n                    handleClose();\r\n                    alert(\" Sub Activity Tabel Added Successfully.\");\r\n                    // props.history.push('/app/vendor');\r\n                })\r\n                    .catch((err) => {\r\n                        alert(err.response.data.message)\r\n                    })\r\n            }\r\n\r\n        },\r\n    });\r\n\r\n    const filterActivitys = (event)=>{\r\n\r\n    setfilterActivity(event.target.value);\r\n    if(event.target.value){\r\n        const filterValue = temSubActivitylList.filter(act=>act.activityId._id === event.target.value);\r\n        setSubActivityList(filterValue);\r\n        const setValues = filterValue.map(result=>{\r\n            return {name:result.subActivityName,value:result._id};\r\n        });\r\n        setExerciseList(setValues);\r\n       \r\n    }else{\r\n        setSubActivityList(temSubActivitylList);\r\n        const setValues = temSubActivitylList.map(result=>{\r\n            return {name:result.subActivityName,value:result._id};\r\n        });\r\n        setExerciseList(setValues);\r\n    }\r\n\r\n    }\r\n\r\n    const filterExcDetails =  (event)=>{\r\n\r\n        setExercise(event.target.value);\r\n        if(event.target.value){\r\n            const filterValue = temSubActivitylList.filter(act=>act._id === event.target.value);\r\n            setSubActivityList(filterValue);\r\n        }else{\r\n            if(filterExercise){\r\n                setSubActivityList(subActivitylList);\r\n            }else{\r\n                setSubActivityList(temSubActivitylList);\r\n            }\r\n           \r\n        }\r\n    \r\n        }\r\n    return (\r\n        <>\r\n            <PageTitle title=\"Exercise\"\r\n             button={<Button\r\n                variant=\"contained\" onClick={handleOpen}\r\n                size=\"medium\"\r\n                color=\"secondary\" style={{ backgroundColor: '#30875b' }}> Add Sub Activity\r\n            </Button>} \r\n            />\r\n             <Grid container spacing={4}>\r\n                <Grid item xs={4}>\r\n                <div >\r\n          <FormControl variant=\"filled\" fullWidth=\"true\" >\r\n                            <InputLabel id=\"demo-simple-select-standard-label\">Filter Activities</InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-standard-label\"\r\n                                id=\"activityName\"\r\n                                name=\"activityId\"\r\n                                label=\"Filter Activities\"\r\n                                value={filterActivity}\r\n                                onChange={filterActivitys}\r\n                                    //  getClassNameList(e) \r\n                                >\r\n                                <MenuItem value=\"\">\r\n                                    <em>None</em>\r\n                                </MenuItem>\r\n                                {addActivityList.map(({ _id, activityName }) => (\r\n                                    <MenuItem key={_id} value={_id}>{activityName}\r\n                                        {/* <Checkbox checked={formik.values.categoryId.indexOf(parent) > -1} /> */}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n          </div>\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                <div >\r\n          <FormControl variant=\"filled\" fullWidth=\"true\" >\r\n                            <InputLabel id=\"demo-simple-select-standard-label\">Filter Exercise</InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-standard-label\"\r\n                                id=\"activityName\"\r\n                                name=\"activityId\"\r\n                                label=\"Filter Activities\"\r\n                                value={filterExercise}\r\n                                onChange={filterExcDetails}\r\n                                    //  getClassNameList(e) \r\n                                >\r\n                                <MenuItem value=\"\">\r\n                                    <em>None</em>\r\n                                </MenuItem>\r\n                                {filterExerciseList.map(({ value, name }) => (\r\n                                    <MenuItem key={value} value={value}>{name}\r\n                                        {/* <Checkbox checked={formik.values.categoryId.indexOf(parent) > -1} /> */}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n          </div>\r\n</Grid>\r\n                </Grid>\r\n          \r\n        \r\n            <Grid container spacing={4}>\r\n                <Grid item xs={12}>\r\n                    <Widget title=\"\" upperTitle noBodyPadding bodyClass={classes.tableOverflow}>\r\n                  \r\n\r\n                        <Table className=\"mb-0\">\r\n                            <TableHead >\r\n                                <TableRow>\r\n                                    {tableHeaders.map(key => (\r\n                                        <StyledTableCell key={key}>{key}</StyledTableCell>\r\n                                    ))}\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {subActivitylList.slice(pg * rpg, pg * rpg + rpg).map((sub) => (\r\n                                    <TableRow key={sub._id}>\r\n                                       <TableCell className=\"pl-3 fw-normal\" >{sub.activityId ? sub.activityId.activityName : ''}</TableCell>\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{sub.subActivityName}</TableCell>\r\n                                        <TableCell>\r\n                                            <EditIcon style={{ cursor: 'pointer' }} onClick={() => editSubActivity(sub)} >\r\n                                            </EditIcon >\r\n                                        </TableCell>\r\n                                        <TableCell>\r\n                                            <DeleteIcon style={{ cursor: 'pointer' }} onClick={() => deleteSubActivity(sub)} />\r\n                                        </TableCell>\r\n        \r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                        <TablePagination\r\n                            component=\"div\"\r\n                            rowsPerPageOptions={[5, 50, 100, 300, 500, 700 ]}\r\n                            count={subActivitylList.length}\r\n                            page={pg}\r\n                            onPageChange={handleChangePage}\r\n                            rowsPerPage={rpg}\r\n                            onRowsPerPageChange={handleChangeRowsPerPage}\r\n                        />\r\n                    </Widget>\r\n                </Grid>\r\n            </Grid>\r\n            <Dialog open={open} onClose={handleClose}>\r\n                <DialogTitle>Add Activity</DialogTitle>\r\n                <form onSubmit={formik.handleSubmit} >\r\n                    <DialogContent style= {{ width: 308 }}>\r\n                    <FormControl variant=\"standard\" fullWidth=\"true\" >\r\n                            <InputLabel id=\"demo-simple-select-standard-label\">List Of Activities</InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-standard-label\"\r\n                                id=\"activityName\"\r\n                                name=\"activityId\"\r\n                                label=\"List Of Activities\"\r\n                                value={formik.values.activityId}\r\n                                onChange={formik.handleChange}\r\n                                    //  getClassNameList(e) \r\n                                error={formik.touched.activityId && Boolean(formik.errors.activityId)}\r\n                                helperText={formik.touched.activityId && formik.errors.activityId}\r\n                            >\r\n                                <MenuItem value=\"\">\r\n                                    <em>None</em>\r\n                                </MenuItem>\r\n                                {addActivityList.map(({ _id, activityName }) => (\r\n                                    <MenuItem key={_id} value={_id}>{activityName}\r\n                                        {/* <Checkbox checked={formik.values.categoryId.indexOf(parent) > -1} /> */}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n                        <TextField\r\n                            InputProps={{ style: { width: 258 } }}\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"subActivityName\"\r\n                            name=\"subActivityName\"\r\n                            label=\"Exercise\"\r\n                            type=\"text\"\r\n                            variant=\"standard\"\r\n                            value={formik.values.subActivityName}\r\n                            onChange={formik.handleChange}\r\n                            error={formik.touched.subActivityName && Boolean(formik.errors.subActivityName)}\r\n                            helperText={formik.touched.subActivityName && formik.errors.subActivityName}\r\n                        />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={handleClose}>Cancel</Button>\r\n                        <Button type=\"submit\">Add</Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n","C:\\montessori\\montessori_ui\\src\\pages\\dashboard\\ActivityTabel.js",["712","713","714","715","716","717","718","719","720","721","722"],"import React, { useState } from \"react\";\r\nimport {\r\n    Button, Dialog, DialogActions, DialogContent, DialogTitle, FormControl, InputLabel, MenuItem,\r\n    TableRow, Table,\r\n    TableHead,\r\n    TableBody,\r\n    TableCell\r\n} from \"@material-ui/core\";\r\nimport ActivityService from \"./Locality/Service/activityService\";\r\nimport ActivityTabelService from \"./Locality/Service/activityTabelService\";\r\nimport * as Yup from 'yup';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport { Grid, Select, TextField } from \"@material-ui/core\";\r\nimport { useFormik } from 'formik';\r\nimport {  useEffect } from 'react';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport AddClassService from \"./Locality/Service/addClassService\";\r\nimport SuperActivityService from \"./Locality/Service/superActivityService\";\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        backgroundColor: \"#30875b\",\r\n        color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n        fontSize: 14,\r\n    },\r\n}))(TableCell);\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: 200,\r\n    },\r\n}));\r\nexport default function Activity() {\r\n    const tableHeaders = [ 'Area Of Work', 'List Of Activities','Edit', 'Delete'];\r\n    const classes = useStyles();\r\n    const [tabelList, setTabelList] = useState([]);\r\n    const [classNameList, setClassNameList] = useState([]);\r\n    const [addClassList, setAddClassList] = useState([]);\r\n    const [age, setAge] = React.useState('');\r\n    var [error, setError] = useState(null);\r\n    const [tabelIdList, setTabelIdList] = useState([]);\r\n    const [open, setOpen] = React.useState(false);\r\n    const [pg, setpg] = React.useState(0);\r\n    const [rpg, setrpg] = React.useState(5);\r\n    const [addSuperActivityList, setAddSuperActivityList] = useState([]);\r\n    const [tabel, setTabel] = useState({\r\n        // classId: '',\r\n        superActivityId:'',\r\n        activityName: '',\r\n    });\r\n    const validationSchema = Yup.object().shape({\r\n        // classId: Yup.string().required('Class Name is required'),\r\n        superActivityId:Yup.string().required('super Activity Name is required'),\r\n        activityName: Yup.string().required('Activity Name is required'),\r\n       \r\n    });\r\n    const handleChangePage=(event, newpage) =>{\r\n        setpg(newpage);\r\n    }\r\n    const handleChangeRowsPerPage=(event)=> {\r\n        setrpg(parseInt(event.target.value, 10));\r\n        setpg(0);\r\n    }\r\n    useEffect(() => {\r\n        getTabelList();\r\n        getSuperActivityList();\r\n        // getAddClassList();\r\n        return () => {\r\n            setTabelIdList([]);\r\n            setTabelList([]);\r\n            setAddSuperActivityList([]);\r\n            // setAddClassList([]);\r\n            // setClassNameList([]);\r\n        }\r\n    }, []);\r\n    const getSuperActivityList = () => {\r\n        const userDetails = JSON.parse(localStorage.getItem(\"userDetail\"));\r\n        SuperActivityService.getAllSuperActivity(userDetails.schoolId).then((res) => {\r\n            setAddSuperActivityList(res);\r\n        }).catch((err) => {\r\n            // setError(err.message);\r\n        });\r\n    }\r\n    const getActivityTabelList = () => {\r\n        const userDetails = JSON.parse(localStorage.getItem(\"userDetail\"));\r\n        ActivityTabelService.getAllActivityTabel(userDetails.schoolId).then((res) => {\r\n            setTabelList(res);\r\n        }).catch((err) => {\r\n            // setError(err.message);\r\n        });\r\n    }\r\n    const getTabelList = () => {\r\n        const userDetails = JSON.parse(localStorage.getItem(\"userDetail\"));\r\n        ActivityTabelService.getAllActivityTabel(userDetails.schoolId).then((res) => {\r\n            setTabelList(res);\r\n        }).catch((err) => {\r\n            // setError(err.message);\r\n        });\r\n    }\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const onclick = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const handleChange = (event) => {\r\n        setAge(event.target.value);\r\n    };\r\n    const onSubmit = data => {\r\n        console.log(JSON.stringify(data, null, 2));\r\n    };\r\n  \r\n    const getAddClassList = () => {\r\n        const userDetails = JSON.parse(localStorage.getItem(\"userDetail\"));\r\n        AddClassService.getAllAddClass(userDetails.schoolId).then((res) => {\r\n            setAddClassList(res);\r\n        }).catch((err) => {\r\n            // setError(err.message);\r\n        });\r\n    }\r\n    const getClassNameList = (event) => {\r\n        AddClassService.getAddClassNameById({ className: event.target.value }).then((res) => {\r\n          \r\n            setClassNameList(res);\r\n\r\n        }).catch((err) => {\r\n            setError(err.message);\r\n        });\r\n    }\r\n    const editActivityTabel = (tabel) => {\r\n        const obj = JSON.parse(JSON.stringify(tabel));\r\n        \r\n          obj.superActivityId = tabel.superActivityId ? tabel.superActivityId._id : '';\r\n\r\n        //  tabel.superActivityId = tabel.superActivityId ? tabel.superActivityId._id :''; \r\n        setTabel(obj)\r\n        handleOpen()\r\n    }\r\n    const deleteActivityTabel = (tabeldelete) => {\r\n        if (tabeldelete) {\r\n            ActivityTabelService.deleteActivityTabel(tabeldelete).then((res) => {\r\n                getActivityTabelList();\r\n            }).catch((err) => {\r\n            });\r\n        }\r\n    };\r\n  \r\n\r\n    const formik = useFormik({\r\n        initialValues: tabel,\r\n        enableReinitialize: true,\r\n        validationSchema: validationSchema,\r\n        onSubmit: (values, { resetForm }) => {\r\n            const userDetails = JSON.parse(localStorage.getItem(\"userDetail\"));\r\n            values.schooleId = userDetails.schoolId;\r\n            if (tabel._id) {\r\n                ActivityTabelService.upadeActivityTabel(values).then((res) => {\r\n                    handleClose();\r\n                    getActivityTabelList();\r\n                    // getSuperActivityList()\r\n                    resetForm()\r\n                    alert(\"Activity Tabel Updated Successfully.\");\r\n                }).catch((err) => {\r\n                });\r\n            }\r\n            else {\r\n                ActivityTabelService.creteActivityTabel(values).then((res) => {\r\n                    getActivityTabelList();\r\n                    resetForm();\r\n                    handleClose();\r\n                    alert(\" Activity Tabel Added Successfully.\");\r\n                    // props.history.push('/app/vendor');\r\n                })\r\n                    .catch((err) => {\r\n                        \r\n                        alert(err.response.data.message)\r\n                    })\r\n            }\r\n\r\n        },\r\n    });\r\n    return (\r\n        <>\r\n            <PageTitle title=\"List Of Activities\" button={<Button\r\n                variant=\"contained\" onClick={handleOpen}\r\n                size=\"medium\"\r\n                color=\"secondary\" style={{ backgroundColor: '#30875b' }}> Add Activity\r\n            </Button>} />\r\n            <Grid container spacing={4}>\r\n                <Grid item xs={12}>\r\n                    <Widget title=\"\" upperTitle noBodyPadding bodyClass={classes.tableOverflow}>\r\n                        <Table className=\"mb-0\">\r\n                            <TableHead >\r\n                                <TableRow>\r\n                                    {tableHeaders.map(key => (\r\n                                        <StyledTableCell key={key}>{key}</StyledTableCell>\r\n                                    ))}\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {tabelList.slice(pg * rpg, pg * rpg + rpg).map((tabel) => (\r\n                                    <TableRow key={tabel._id}>\r\n                                        \r\n\r\n                                        {/* <TableCell className=\"pl-3 fw-normal\" >{activity.classId ? activity.classId.className : ''}</TableCell> */}\r\n                                        {/* <TableCell className=\"pl-3 fw-normal\" >{sub.activityId ? sub.activityId.activityName : ''}</TableCell> */}\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{tabel.superActivityId ? tabel.superActivityId.superActivityName : ''}</TableCell>\r\n                                        {/* <TableCell className=\"pl-3 fw-normal\" >{tabel.superActivityName}</TableCell> */}\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{tabel.activityName}</TableCell>\r\n                                        <TableCell>\r\n                                            <EditIcon style={{ cursor: 'pointer' }} onClick={() => editActivityTabel(tabel)} >\r\n                                            </EditIcon >\r\n                                        </TableCell>\r\n                                        <TableCell>\r\n                                            <DeleteIcon style={{ cursor: 'pointer' }} onClick={() => deleteActivityTabel(tabel)} />\r\n                                        </TableCell>\r\n        \r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                        <TablePagination\r\n                            component=\"div\"\r\n                            rowsPerPageOptions={[5, 10, 25, 50, 75, 100 ]}\r\n                            count={tabelList.length}\r\n                            page={pg}\r\n                            onPageChange={handleChangePage}\r\n                            rowsPerPage={rpg}\r\n                            onRowsPerPageChange={handleChangeRowsPerPage}\r\n                        />\r\n                    </Widget>\r\n                </Grid>\r\n            </Grid>\r\n            <Dialog open={open} onClose={handleClose}>\r\n                <DialogTitle>Add Activity</DialogTitle>\r\n                <form onSubmit={formik.handleSubmit} >\r\n                    <DialogContent style= {{ width: 308 }}>\r\n                    <FormControl variant=\"standard\" fullWidth>\r\n                            <InputLabel id=\"demo-simple-select-standard-label\">Area Of Work</InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-standard-label\"\r\n                                id=\"superActivityName\"\r\n                                label=\"Area Of Work \"\r\n                                name=\"superActivityId\"\r\n                                onChange={formik.handleChange}\r\n                                // onChange={e => { formik.handleChange(e); getSubActivityList(e) }}\r\n                                value={formik.values.superActivityId}\r\n                                error={formik.touched.superActivityId && Boolean(formik.errors.superActivityId)}\r\n                                helperText={formik.touched.superActivityId && formik.errors.superActivityId}\r\n                            >\r\n                                <MenuItem value=\"\">\r\n                                    <em>None</em>\r\n                                </MenuItem>\r\n                                {addSuperActivityList.map(({ _id, superActivityName }) => (\r\n                                    \r\n                                    <MenuItem key={_id} value={_id}>{superActivityName}\r\n                                        {/* <Checkbox checked={formik.values.categoryId.indexOf(parent) > -1} /> */}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n                        <TextField\r\n                            InputProps={{ style: { width: 258 } }}\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"activityName\"\r\n                            name=\"activityName\"\r\n                            label=\"List Of Activities\"\r\n                            type=\"text\"\r\n                            variant=\"standard\"\r\n                            value={formik.values.activityName}\r\n                            onChange={formik.handleChange}\r\n                            error={formik.touched.activityName && Boolean(formik.errors.activityName)}\r\n                            helperText={formik.touched.activityName && formik.errors.activityName}\r\n                        />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={handleClose}>Cancel</Button>\r\n                        <Button type=\"submit\">Add</Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n","C:\\montessori\\montessori_ui\\src\\pages\\dashboard\\CalelnderEvents.js",["723","724","725","726","727","728","729","730","731","732","733","734","735","736","737","738","739","740","741"],"\r\nimport Calendar from 'react-calendar';\r\nimport FullCalendar from '@fullcalendar/react' // must go before plugins\r\nimport dayGridPlugin from '@fullcalendar/daygrid' // a plugin!\r\nimport timeGridPlugin from '@fullcalendar/timegrid'\r\nimport {\r\n  Button, Dialog, DialogActions, DialogContent, DialogTitle, FormControl, InputLabel, MenuItem,\r\n  TableRow, Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableCell\r\n} from \"@material-ui/core\";\r\nimport interactionPlugin from '@fullcalendar/interaction'\r\nimport CalelnderEventsService from \"./Locality/Service/calelnderEventsService\";\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport React, { useState } from \"react\";\r\nimport {  useEffect } from 'react';\r\nfunction CalelnderEvents() {\r\n  const [date, setDate] = useState(new Date());\r\n  const [eventList, setEventList] = useState([]);\r\n  const [title, setTitle] =useState('');\r\n  const [open, setOpen] = React.useState(false);\r\n  const [events, setEvents] = useState({\r\n    teacherId: '',\r\n    startDate: '',\r\n    endDate: '',\r\n});\r\nlet tooltipInstance = null;\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  startDate: Yup.string(),\r\n  endDate: Yup.string(),\r\n});\r\nuseEffect(() => {\r\n  getCalelnderEventsList();\r\n\r\n  return () => {\r\n    setEventList([]);\r\n  }\r\n}, []);\r\nconst getCalelnderEventsList = () => {\r\n  const userDetails = JSON.parse(localStorage.getItem(\"userDetail\"));\r\n  CalelnderEventsService.getAllCalelnderEvents(userDetails.schoolId).then((res) => {\r\n   \r\n  //   const persons = this.state.name.map((item, i) => {\r\n  //     return \r\n  //        (<div>\r\n  //           <h1> {item.name} </h1> \r\n  //        </div>);\r\n  // });\r\nconst mapEventData = res.map(res=>{\r\n  return {title:res.eventName,date:res.dateTime};\r\n})\r\n    setEventList(mapEventData);\r\n  }).catch((err) => {\r\n      // setError(err.message);\r\n  });\r\n}\r\n// const deleteActivityTabel = (eventdelete) => {\r\n//   if (eventdelete) {\r\n//     CalelnderEventsService.deleteCalelnderEvents(eventdelete).then((res) => {\r\n//       getCalelnderEventsList();\r\n//       }).catch((err) => {\r\n//       });\r\n//   }\r\n// };\r\nconst handleMouseEnter = (info) => {\r\n  debugger\r\n  if (info.event._def && info.event._def.title) {\r\n    setOpen(true)\r\n    setTitle(info.event._def.title);\r\n    // tooltipInstance = new Tooltip(info.el, {\r\n    //   title: info.event.extendedProps.description,\r\n    //   html: true,\r\n    //   placement: \"top\",\r\n    //   trigger: \"hover\",\r\n    //   container: \"body\"\r\n    // });\r\n\r\n    // tooltipInstance.show();\r\n  }\r\n};\r\n\r\nconst handleMouseLeave = (info) => {\r\n  // if (open) {\r\n  //   setOpen(false)\r\n  //   setTitle(); \r\n  //  }\r\n};\r\nconst handleClose = () => {\r\n  setOpen(false);\r\n};\r\n//   const formik = useFormik({\r\n//     initialValues: events,\r\n//     enableReinitialize: true,\r\n//     validationSchema: validationSchema,\r\n//     onSubmit: (values, { resetForm }) => {\r\n//         const userDetails = JSON.parse(localStorage.getItem(\"userDetail\"));\r\n//         values.schooleId = userDetails.schoolId;\r\n//         if (events._id) {\r\n//             CalelnderEventsService.upadeCalelnderEvents(values).then((res) => {\r\n//                 handleClose();\r\n//                 getCalelnderEventsList();\r\n//                 resetForm()\r\n//                 alert(\"Calelnder Events Updated Successfully.\");\r\n//             }).catch((err) => {\r\n//             });\r\n//         }\r\n//         else {\r\n//           CalelnderEventsService.creteCalelnderEvents(values).then((res) => {\r\n//             getCalelnderEventsList();\r\n//                 resetForm();\r\n//                 handleClose();\r\n//                 alert(\" Calelnder Events Added Successfully.\");\r\n//                 // props.history.push('/app/vendor');\r\n//             })\r\n//                 .catch((err) => {\r\n                    \r\n//                     alert(err.response.data.message)\r\n//                 })\r\n//         }\r\n\r\n//     },\r\n// });\r\n\r\n  return (\r\n    <div className='app'>\r\n    <h1 className='text-center'>Activities</h1>\r\n    <div className='calendar-container'>\r\n\r\n\r\n    <FullCalendar\r\n        // plugins={[ timeGridPlugin ]}\r\n        plugins={[ dayGridPlugin, timeGridPlugin, interactionPlugin ]}\r\n        eventMouseEnter={handleMouseEnter}\r\n        eventMouseLeave={handleMouseLeave}\r\n       // initialView=\"dayGrid\"\r\n         initialView=\"timeGridWeek\"\r\n        // allDay={true}\r\n        header={{\r\n          left: \"prev,next today\",\r\n          center: \"title\",\r\n          right: \"dayGridMonth,timeGridWeek,timeGridDay,listWeek\"\r\n        }}\r\n        events={eventList}\r\n      />\r\n       <Dialog open={open} onClose={handleClose}>\r\n       <DialogContent >\r\n       {title}\r\n       </DialogContent>\r\n       </Dialog>\r\n    </div>\r\n  \r\n  </div>\r\n);\r\n}\r\nexport default CalelnderEvents;","C:\\montessori\\montessori_ui\\src\\pages\\dashboard\\CreateEvents.js",["742","743","744","745","746","747","748","749","750","751","752"],"\r\nimport Calendar from 'react-calendar';\r\nimport {\r\n  Button, Dialog, DialogActions, DialogContent, DialogTitle, FormControl, InputLabel, MenuItem,\r\n  TableRow, Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableCell\r\n} from \"@material-ui/core\";\r\nimport Widget from \"../../components/Widget/Widget\";\r\n import TablePagination from '@material-ui/core/TablePagination';\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport FullCalendar from '@fullcalendar/react' // must go before plugins\r\nimport dayGridPlugin from '@fullcalendar/daygrid' // a plugin!\r\nimport CalelnderEventsService from \"./Locality/Service/calelnderEventsService\";\r\nimport { useFormik } from 'formik';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport * as Yup from 'yup';\r\nimport { Grid, Select, TextField } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { useEffect } from 'react';\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: \"#30875b\",\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 200,\r\n  },\r\n}));\r\nfunction CreateEvents() {\r\n  const tableHeaders = ['Event Name', 'Date And Time'];\r\n  const [date, setDate] = useState(new Date());\r\n  const [eventList, setEventList] = useState([]);\r\n  var [dateValue, setDateValue] = useState(date);\r\n  const [open, setOpen] = React.useState(false);\r\n  const classes = useStyles();\r\n  const [pg, setpg] = React.useState(0);\r\n    const [rpg, setrpg] = React.useState(5);\r\n  const [events, setEvents] = useState({\r\n    teacherId: '',\r\n    dateTime: '',\r\n  });\r\n  const validationSchema = Yup.object().shape({\r\n    dateTime: Yup.string(),\r\n  });\r\n  const handleChangePage=(event, newpage) =>{\r\n    setpg(newpage);\r\n}\r\n\r\nconst handleChangeRowsPerPage=(event)=> {\r\n    setrpg(parseInt(event.target.value, 10));\r\n    setpg(0);\r\n}\r\n  useEffect(() => {\r\n    getCalelnderEventsList();\r\n\r\n    return () => {\r\n      setEventList([]);\r\n    }\r\n  }, []);\r\n  const getCalelnderEventsList = () => {\r\n    const userDetails = JSON.parse(localStorage.getItem(\"userDetail\"));\r\n    CalelnderEventsService.getAllCalelnderEvents(userDetails.schoolId).then((res) => {\r\n      setEventList(res);\r\n    }).catch((err) => {\r\n      // setError(err.message);\r\n    });\r\n  }\r\n  const deleteActivityTabel = (eventdelete) => {\r\n    if (eventdelete) {\r\n      CalelnderEventsService.deleteCalelnderEvents(eventdelete).then((res) => {\r\n        getCalelnderEventsList();\r\n      }).catch((err) => {\r\n      });\r\n    }\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const formik = useFormik({\r\n    initialValues: events,\r\n    enableReinitialize: true,\r\n    validationSchema: validationSchema,\r\n    onSubmit: (values, { resetForm }) => {\r\n      const userDetails = JSON.parse(localStorage.getItem(\"userDetail\"));\r\n      const keys = { \"schooleId\": userDetails.schoolId, \"teacherId\": userDetails._id, \"date\": dateValue }\r\n      values.schooleId = userDetails.schoolId;\r\n      values.teacherId = userDetails._id;\r\n      if (events._id) {\r\n        CalelnderEventsService.upadeCalelnderEvents(values).then((res) => {\r\n          handleClose();\r\n          getCalelnderEventsList();\r\n          resetForm()\r\n          alert(\"Calelnder Events Updated Successfully.\");\r\n        }).catch((err) => {\r\n        });\r\n      }\r\n      else {\r\n        CalelnderEventsService.creteCalelnderEvents(values).then((res) => {\r\n          setDateValue(\"\");\r\n          getCalelnderEventsList();\r\n          resetForm();\r\n          handleClose();\r\n          alert(\" Calelnder Events Added Successfully.\");\r\n          // props.history.push('/app/vendor');\r\n        })\r\n          .catch((err) => {\r\n\r\n            alert(err.response.data.message)\r\n          })\r\n      }\r\n\r\n    },\r\n  });\r\n  return (\r\n    <>\r\n      <PageTitle title=\"Create Events \" button={<Button\r\n        variant=\"contained\" onClick={handleOpen}\r\n        size=\"medium\"\r\n        color=\"secondary\" style={{ backgroundColor: '#30875b' }}> Create Event\r\n      </Button>} />\r\n      <Grid container spacing={4}>\r\n        <Grid item xs={12}>\r\n          <Widget title=\"\" upperTitle noBodyPadding bodyClass={classes.tableOverflow}>\r\n            <Table className=\"mb-0\">\r\n              <TableHead >\r\n                <TableRow>\r\n                  {tableHeaders.map(key => (\r\n                    <StyledTableCell key={key}>{key}</StyledTableCell>\r\n                  ))}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {eventList.slice(pg * rpg, pg * rpg + rpg).map((event) => (\r\n                  <TableRow key={event._id}>\r\n                    {/* <TableCell className=\"pl-3 fw-normal\" >{event.teacherId}</TableCell> */}\r\n                    <TableCell className=\"pl-3 fw-normal\" >{event.eventName}</TableCell>\r\n                    <TableCell className=\"pl-3 fw-normal\" >{event.dateTime}</TableCell>\r\n\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n            <TablePagination\r\n                            component=\"div\"\r\n                            rowsPerPageOptions={[5, 10, 25, 50, 100]}\r\n                            count={eventList.length}\r\n                            page={pg}\r\n                            onPageChange={handleChangePage}\r\n                            rowsPerPage={rpg}\r\n                            onRowsPerPageChange={handleChangeRowsPerPage}\r\n                        />\r\n          </Widget>\r\n        </Grid>\r\n      </Grid>\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <DialogTitle>Create Event</DialogTitle>\r\n        <form onSubmit={formik.handleSubmit} >\r\n          <DialogContent style={{ width: 308 }}>\r\n\r\n            <TextField\r\n              InputProps={{ style: { width: 258 } }}\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"eventName\"\r\n              name=\"eventName\"\r\n              label=\"Event Name\"\r\n              type=\"text\"\r\n              variant=\"standard\"\r\n              value={formik.values.eventName}\r\n              onChange={formik.handleChange}\r\n              error={formik.touched.eventName && Boolean(formik.errors.eventName)}\r\n              helperText={formik.touched.eventName && formik.errors.eventName}\r\n            />\r\n            <form className={classes.container} noValidate>\r\n              <TextField InputProps={{ style: { width: 258 } }}\r\n                id=\"dateTime\"\r\n                \r\n                name='dateTime'\r\n                label=\"Select Date And Time\"\r\n                type=\"datetime-local\"\r\n                defaultValue=\"2017-05-24T10:30\"\r\n                \r\n                value={formik.values.dateTime}\r\n                onChange={formik.handleChange}\r\n                error={formik.touched.dateTime && Boolean(formik.errors.dateTime)}\r\n                helperText={formik.touched.dateTime && formik.errors.dateTime}\r\n                className={classes.textField}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            </form>\r\n            {/* <form className={classes.container} noValidate>\r\n              <TextField InputProps={{ style: { width: 258 } }}\r\n                id=\"startDate\"\r\n                name=\"startDate\"\r\n                label=\"startDate\"\r\n                type=\"date\"\r\n                // value={dateValue}\r\n                                            // onChange={e => setDateValue(e.target.value)}\r\n                                           \r\n                // defaultValue=\"2017-05-24\"\r\n                value={formik.values.startDate}\r\n                onChange={formik.handleChange}\r\n                error={formik.touched.startDate && Boolean(formik.errors.startDate)}\r\n                helperText={formik.touched.startDate && formik.errors.startDate}\r\n                className={classes.textField}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n              <TextField InputProps={{ style: { width: 258 } }}\r\n                id=\"startTime\"\r\n                name=\"startTime\"\r\n                label=\"startTime\"\r\n                type=\"time\"\r\n                // defaultValue=\"2017-05-24\"\r\n                value={formik.values.startTime}\r\n                onChange={formik.handleChange}\r\n                error={formik.touched.startTime && Boolean(formik.errors.startTime)}\r\n                helperText={formik.touched.startTime && formik.errors.startTime}\r\n                className={classes.textField}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            </form> */}\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleClose}>Cancel</Button>\r\n            <Button type=\"submit\">Add</Button>\r\n          </DialogActions>\r\n        </form>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\nexport default CreateEvents;","C:\\montessori\\montessori_ui\\src\\pages\\dashboard\\StudentActivity.js",["753","754","755","756","757","758","759","760","761","762","763","764","765","766","767","768","769","770","771"],"import React, { useState } from \"react\";\r\nimport {\r\n    Button, Dialog, DialogActions, DialogContent, DialogTitle, FormControl, InputLabel, MenuItem,\r\n    TableRow, Table,\r\n    TableHead,\r\n    TableBody,\r\n    TableCell\r\n} from \"@material-ui/core\";\r\n//import ExcelExportData from \"../../Excelexport\"\r\nimport {  Card, Box } from \"@material-ui/core\";\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport ActivityService from \"./Locality/Service/activityService\";\r\nimport ActivityTabelService from \"./Locality/Service/activityTabelService\";\r\nimport SubActivityService from \"./Locality/Service/subActivityService\";\r\nimport StudentService from \"./Locality/Service/studentService\"\r\nimport SuperActivityService from \"./Locality/Service/superActivityService\"\r\nimport * as Yup from 'yup';\r\nimport { Grid, Select, TextField } from \"@material-ui/core\";\r\nimport { useFormik } from 'formik';\r\nimport { useEffect } from 'react';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport AddClassService from \"./Locality/Service/addClassService\";\r\nimport ExportExcel from \"../../Excelexport\";\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        backgroundColor: \"#30875b\",\r\n        color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n        fontSize: 14,\r\n    },\r\n}))(TableCell);\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: 200,\r\n    },\r\n}));\r\nexport default function StudentActivity() {\r\n    const tableHeaders = ['Student Name', 'Area Of Work', 'List Of Activities', 'Exercise','Remarks','Date', 'Edit', 'Delete', 'Add More'];\r\n    const classes = useStyles();\r\n    const [activityList, setActivityList] = useState([]);\r\n    const [studentList, setStudentList] = useState([]);\r\n    const [subActivityList, setSubActivityList] = useState([]);\r\n    const [classNameList, setClassNameList] = useState([]);\r\n    const [age, setAge] = React.useState('');\r\n    var [error, setError] = useState(null);\r\n    const [activityIdList, setActivityIdList] = useState([]);\r\n    const [open, setOpen] = React.useState(false);\r\n    const [isAdd, setIsAdd] = React.useState(false);\r\n    const [addClassList, setAddClassList] = useState([]);\r\n    const [subActivityIdList, setSubActivityIdList] = useState([]);\r\n    const [addActivityList, setAddActivityList] = useState([]);\r\n    const [addSuperActivityList, setAddSuperActivityList] = useState([]);\r\n    const [startDate1, setStartDate1] = useState('');\r\n    const [endDate1, setEndDate1] = useState('');\r\n    const [result, setResult]= useState([]);\r\n    var [studentId, setStudentId] = useState(\"\");\r\n    const today = new Date();\r\n    const getWeekStartEnd = (date) => {\r\n        const startOfWeek = new Date(date);\r\n        startOfWeek.setDate(startOfWeek.getDate() - startOfWeek.getDay());\r\n        const endOfWeek = new Date(date);\r\n        endOfWeek.setDate(endOfWeek.getDate() + (5 - endOfWeek.getDay()));\r\n\r\n        let startDay = startOfWeek.getDate();\r\n        let startMonth = startOfWeek.getMonth()+1;\r\n        let startYear = startOfWeek.getFullYear();\r\n        if (startDay < 10) {\r\n            startDay = '0' + startDay;\r\n        }\r\n        \r\n        if (startMonth < 10) {\r\n            startMonth = `0${startMonth}`;\r\n        }\r\n        let format = startYear  + \"-\" + startMonth + \"-\" + startDay;\r\n\r\n        let endDay = endOfWeek.getDate();\r\n        let endMonth = endOfWeek.getMonth()+1;\r\n        let endYear = endOfWeek.getFullYear();\r\n        if (endDay < 10) {\r\n            endDay = '0' + endDay;\r\n        }\r\n        \r\n        if (endMonth < 10) {\r\n            endMonth = `0${endMonth}`;\r\n        }\r\n      \r\n        let format1 = endYear + \"-\" + endMonth + \"-\" + endDay;\r\n        \r\n        return { start: format, end: format1 };\r\n    }\r\n    const date = new Date();\r\nconst week = getWeekStartEnd(date);\r\n    const [pg, setpg] = React.useState(0);\r\n    const [rpg, setrpg] = React.useState(5);\r\n  const year = today.getFullYear();\r\n    const [activity, setActivity] = useState({\r\n        // classId: '',\r\n        date:'',\r\n        studentId: '',\r\n        superActivityId: '',\r\n        activityId: '',\r\n        subActivityId: '',\r\n        // academicYear:'',\r\n        remarks: '',\r\n        planning: '',\r\n    });\r\n\r\n    const handleChangePage=(event, newpage) =>{\r\n        setpg(newpage);\r\n    }\r\n    const ExcelExportData =[\r\n        {\r\n            \"first Name\":'arul',\r\n            \"last Name\":'arul',\r\n            \"middle Name\":'arul',\r\n            \"age\":'arul',\r\n            \"city\":'arul',\r\n            \"address\":'arul',\r\n        },\r\n        {\r\n            \"first Name\":'arul',\r\n            \"last Name\":'arul',\r\n            \"middle Name\":'arul',\r\n            \"age\":'arul',\r\n            \"city\":'arul',\r\n            \"address\":'arul',\r\n    \r\n        },\r\n        {\r\n            \"first Name\":'arul',\r\n            \"last Name\":'arul',\r\n            \"middle Name\":'arul',\r\n            \"age\":'arul',\r\n            \"city\":'arul',\r\n            \"address\":'arul',\r\n \r\n        },\r\n        {\r\n            \"first Name\":'arul',\r\n            \"last Name\":'arul',\r\n            \"middle Name\":'arul',\r\n            \"age\":'arul',\r\n            \"city\":'arul',\r\n            \"address\":'arul',\r\n\r\n        },\r\n        {\r\n            \"first Name\":'arul',\r\n            \"last Name\":'arul',\r\n            \"middle Name\":'arul',\r\n            \"age\":'arul',\r\n            \"city\":'arul',\r\n            \"address\":'arul',\r\n \r\n        },\r\n        {\r\n            \"first Name\":'arul',\r\n            \"last Name\":'arul',\r\n            \"middle Name\":'arul',\r\n            \"age\":'arul',\r\n            \"city\":'arul',\r\n            \"address\":'arul',\r\n\r\n        },\r\n        {\r\n            \"first Name\":'arul',\r\n            \"last Name\":'arul',\r\n            \"middle Name\":'arul',\r\n            \"age\":'arul',\r\n            \"city\":'arul',\r\n            \"address\":'arul',\r\n        \r\n        },\r\n    ]\r\n    const handleChangeRowsPerPage=(event)=> {\r\n        setrpg(parseInt(event.target.value, 10));\r\n        setpg(0);\r\n    }\r\n    // const handleChangePage = (event, newPage) => {\r\n    //     setPage(newPage);\r\n    //   };\r\n    \r\n    //   const handleChangeRowsPerPage = (event) => {\r\n    //     setRowsPerPage(parseInt(event.target.value, 10));\r\n    //     setPage(0);\r\n    //   };\r\n    const validationSchema = Yup.object().shape({\r\n        // classId: Yup.string().required('Class Name is required'),\r\n        date: Yup.string().required('Date is required'),\r\n        studentId: Yup.string().required('Student Name is required'),\r\n        activityId: Yup.string().required('ActivityName is required'),\r\n        subActivityId: Yup.string().required('Sub ActivityName is required'),\r\n        // academicYear:Yup.string(),\r\n        remarks: Yup.string(),\r\n        planning: Yup.string(),\r\n        date:Yup.string(),\r\n    });\r\n    useEffect(() => {\r\n        //getActivityList();\r\n        getAddClassList();\r\n        onSubmit();\r\n       // getStudentActivityList();\r\n        getStudentList()\r\n        getSuperActivityList();\r\n        return () => {\r\n            setSubActivityList([]);\r\n            setActivityIdList([]);\r\n            setActivityList([]);\r\n            setAddClassList([]);\r\n            setStudentList([]);\r\n            setAddSuperActivityList([]);\r\n            // setClassNameList([]);\r\n        }\r\n    }, []);\r\n    const getSuperActivityList = () => {\r\n        const userDetails = JSON.parse(localStorage.getItem(\"userDetail\"));\r\n        SuperActivityService.getAllSuperActivity(userDetails.schoolId).then((res) => {\r\n            setAddSuperActivityList(res);\r\n        }).catch((err) => {\r\n            // setError(err.message);\r\n        });\r\n    }\r\n    const handleOpen = (isAdd) => {\r\n        setOpen(true);\r\n        if(isAdd){\r\n            setActivity({\r\n                date:'',\r\n                studentId: '',\r\n                superActivityId: '',\r\n                activityId: '',\r\n                subActivityId: '',\r\n                remarks: '',\r\n                planning: '',\r\n            });\r\n        }\r\n    };\r\n    const onclick = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        setAge(event.target.value);\r\n    };\r\n\r\n    const  excelExport  =(res)  => {\r\n       const result= res.map((response)=>{\r\n\r\n            return {\r\n                \"Student Name\":response.studentId ? response.studentId.studentName : '', \r\n                \"Area Of Work\": response.superActivityId ? response.superActivityId. superActivityName:'',\r\n                \"List Of Activities\": response.activityId ? response.activityId.activityName:'',\r\n                \"Exercise\":response.subActivityId ? response.subActivityId.subActivityName:'',\r\n                \"Remarks\":response.remarks,\r\n                \"Key\":response.key,\r\n                \"Date\":response.date,\r\n            }\r\n           \r\n         })\r\n         setResult(result);\r\n    };\r\n\r\n\r\n    const onSubmit = data => {\r\n        const userDetails = JSON.parse(localStorage.getItem(\"userDetail\"));\r\n        const newstartDate1 = startDate1 ? startDate1 : null;\r\n        const newendDate1 = endDate1 ? endDate1 : null;\r\n        const keys = {  \"schooleId\": userDetails.schoolId,  \"studentId\": studentId, \"startDate1\":newstartDate1,\"endDate1\":newendDate1  }\r\n        ActivityService.findActivityList(keys).then((res) => {\r\n            excelExport(res);\r\n            console.log(res)\r\n            // setClassValue(\"\");\r\n            setActivityList(res);\r\n           // setStudentList(res);\r\n        }).catch((err) => {\r\n            console.error(err)\r\n            // setError(err.message);\r\n        });\r\n        \r\n    };\r\n    const getSubActivityList = (event, obj) => {\r\n        const userDetails = JSON.parse(localStorage.getItem(\"userDetail\"));\r\n        const getsubActList = { schooleId: userDetails.schoolId, activityId: event.target.value };\r\n        SubActivityService.getAllSubActivityByActivityId(getsubActList).then((res) => {\r\n            setSubActivityList(res);\r\n            if (obj) {\r\n                setActivity(obj);\r\n            }\r\n        }).catch((err) => {\r\n            // setError(err.message);\r\n        });\r\n    }\r\n    const getActivityList = (event, obj) => {\r\n        const userDetails = JSON.parse(localStorage.getItem(\"userDetail\"));\r\n        const getsubActList = { schooleId: userDetails.schoolId, superActivityId: event.target.value };\r\n        ActivityTabelService.getAllActivityTabeBySuperActivityId(getsubActList).then((res) => {\r\n            setAddActivityList(res);\r\n            if (obj) {\r\n                setActivity(obj);\r\n            }\r\n        }).catch((err) => {\r\n            // setError(err.message);\r\n        });\r\n    }\r\n\r\n    const getStudentList = (event, obj) => {\r\n        const userDetails = JSON.parse(localStorage.getItem(\"userDetail\"));\r\n        StudentService.getAllStudentById(userDetails.schoolId,\r\n            //  { classId: event }\r\n        ).then((res) => {\r\n            const studentDetails = res.map(res => {\r\n                return { _id: res._id, studentName: res.studentName, status: true };\r\n            })\r\n            setStudentList(studentDetails);\r\n\r\n            if (obj) {\r\n                setActivity(obj);\r\n            }\r\n        }).catch((err) => {\r\n            // setError(err.message);\r\n        });\r\n    }\r\n    const getStudentActivityList = () => {\r\n        const userDetails = JSON.parse(localStorage.getItem(\"userDetail\"));\r\n\r\n        ActivityTabelService.getStudentActivity(userDetails.schoolId, false).then((res) => {\r\n            setActivityList(res);\r\n        }).catch((err) => {\r\n            // setError(err.message);\r\n        });\r\n    }\r\n\r\n    const getAddClassList = () => {\r\n        const userDetails = JSON.parse(localStorage.getItem(\"userDetail\"));\r\n        AddClassService.getAllAddClass(userDetails.schoolId).then((res) => {\r\n            setAddClassList(res);\r\n        }).catch((err) => {\r\n            // setError(err.message);\r\n        });\r\n    }\r\n    const getClassNameList = (event) => {\r\n        AddClassService.getAddClassNameById({ className: event.target.value }).then((res) => {\r\n            setClassNameList(res);\r\n        }).catch((err) => {\r\n            setError(err.message);\r\n        });\r\n    }\r\n    const editActivity = (useractivitys, status) => {\r\n        const obj = JSON.parse(JSON.stringify(useractivitys, status));\r\n        //    obj.classId = useractivitys.classId ? useractivitys.classId._id : '';\r\n        obj.studentId = useractivitys.studentId ? useractivitys.studentId._id : '';\r\n        obj.superActivityId = useractivitys.superActivityId ? useractivitys.superActivityId._id : '';\r\n        obj.activityId = useractivitys.activityId ? useractivitys.activityId._id : '';\r\n        obj.subActivityId = useractivitys.subActivityId ? useractivitys.subActivityId._id : '';\r\n\r\n        getStudentList(\r\n            // obj.classId,\r\n            obj);\r\n        getSubActivityList({ target: { value: obj.activityId } }, obj);\r\n         getActivityList({ target: { value: obj.superActivityId } }, obj);\r\n        //getStudentActivityList(useractivitys.classId);\r\n        if(status){\r\n           delete obj._id;\r\n        }\r\n        setActivity(obj);\r\n\r\n        handleOpen()\r\n    }\r\n\r\n    const deleteActivity = (activitydelete) => {\r\n        if (activitydelete) {\r\n            ActivityService.deleteActivity(activitydelete).then((res) => {\r\n\r\n                onSubmit()\r\n            }).catch((err) => {\r\n            });\r\n        }\r\n    };\r\n    const formik = useFormik({\r\n        initialValues: activity,\r\n        enableReinitialize: true,\r\n        validationSchema: validationSchema,\r\n        onSubmit: (values, { resetForm }) => {\r\n            const userDetails = JSON.parse(localStorage.getItem(\"userDetail\"));\r\n            values.schooleId = userDetails.schoolId;\r\n            values.authorizedPerson = userDetails.email\r\n            values.isFuturePlanning = false\r\n            if (activity._id) {\r\n                ActivityService.upadeActivity(values).then((res) => {\r\n                    handleClose();\r\n                    // getActivityList();\r\n                    onSubmit()\r\n                    resetForm()\r\n                    alert(\"Activity Updated Successfully.\");\r\n                }).catch((err) => {\r\n                });\r\n            }\r\n            else {\r\n                let currentYear = new Date().getFullYear();\r\n                let nextYear = new Date().getFullYear() + 1;\r\n                console.log(currentYear + \"-\" + nextYear);\r\n                values['academicYear'] = currentYear + \"-\" + nextYear;\r\n                ActivityService.creteActivity(values).then((res) => {\r\n                    // getActivityList();\r\n                    onSubmit()\r\n                    resetForm();\r\n                    handleClose();\r\n                    alert(\" Activity Added Successfully.\");\r\n                    // props.history.push('/app/vendor');\r\n                })\r\n                    .catch((err) => {\r\n\r\n                        alert(err.response.data.message)\r\n                    })\r\n            }\r\n\r\n        },\r\n    });\r\n\r\n    return (\r\n\r\n        <>\r\n            <PageTitle title=\"Student Activity\" button={<Button\r\n                variant=\"contained\" onClick={() => handleOpen(true) }\r\n                size=\"medium\"\r\n                color=\"secondary\" style={{ backgroundColor: '#30875b' }}> Add Activity\r\n            </Button>} />\r\n            \r\n            <Card sx={{ maxWidth: 345 }}>\r\n            <Box   >\r\n            <div >\r\n            <form\r\n            // onSubmit={formik.handleSubmit} \r\n                        >\r\n                             <Grid container spacing={2} columns={12} style={{ margin: 10 }}  >\r\n                             <Grid item xs={2} >\r\n                            \r\n                              \r\n                             <FormControl variant=\"standard\" fullWidth>\r\n                            <InputLabel id=\"studentName\">Student Name</InputLabel>\r\n                            <Select\r\n                                labelId=\"studentName\"\r\n                                id=\"studentName\"\r\n                                label=\"Student Name\"\r\n                                name=\"studentId\"\r\n                                 value={studentId}\r\n                                onChange={e => {setStudentId(e.target.value) }}\r\n                                // error={formik.touched.studentId && Boolean(formik.errors.studentId)}\r\n                                // helperText={formik.touched.studentId && formik.errors.studentId}\r\n                            >\r\n                                <MenuItem value=\"\">\r\n                                    <em>None</em>\r\n                                </MenuItem>\r\n                                {studentList.map(({index,_id, studentName}) => (\r\n                                    <MenuItem key={index} value={_id}>{studentName}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n                                </Grid>\r\n                            <Grid item xs={2}>\r\n                                    <form className={classes.container} noValidate>\r\n                                    <TextField InputProps={{ style: { width: 160 } }}\r\n                                            id=\"dob\"\r\n                                            name=\"dob\"\r\n                                            label=\"Start Date\"\r\n                                            type=\"date\"\r\n                                           min=\"2016-11-10\"\r\n                                            max=\"2022-11-10\"   \r\n                                            value={startDate1}\r\n                                            onChange={e => {getStudentList(e.target.value); setStartDate1(e.target.value) }}          \r\n                                            className={classes.textField}\r\n                                            InputLabelProps={{\r\n                                                shrink: true,\r\n                                            }}\r\n                                        />\r\n                                    </form>\r\n                                </Grid>\r\n                                <Grid item xs={2} >\r\n                                <TextField InputProps={{ style: { width: 160 } }}\r\n                                            id=\"dob\"\r\n                                            name=\"dob\"\r\n                                            label=\"End Date\"\r\n                                            type=\"date\"\r\n                                           min=\"2016-11-10\"\r\n                                            max=\"2022-11-10\" \r\n                                            value={endDate1}\r\n                                            onChange={e => {setEndDate1(e.target.value) }}\r\n                                            // defaultValue=\"2017-05-24\"\r\n                                            InputLabelProps={{\r\n                                                shrink: true,\r\n                                            }}\r\n                                        />\r\n                                </Grid>\r\n                                <Grid item xs={2} >\r\n                                <Button style={{ backgroundColor: 'rgb(48 135 91)', color: 'white' }}\r\n                                 type=\"button\"\r\n                                 \r\n                                  onClick={() => onSubmit()} variant=\"contained\" \r\n                                 >\r\n                                    \r\n                                     Search</Button>\r\n                                </Grid>\r\n                                <Grid item xs={2} >\r\n                                <ExportExcel   excelData={result} fileName={'Student Activity'} />\r\n                                </Grid>\r\n                            </Grid>\r\n                            </form>\r\n                </div>\r\n                </Box>\r\n                </Card>\r\n            <Grid container spacing={4}>\r\n                <Grid item xs={12}>\r\n                    <Widget title=\"\" upperTitle noBodyPadding bodyClass={classes.tableOverflow}>\r\n                        <Table className=\"mb-0\">\r\n                            <TableHead >\r\n                                <TableRow>\r\n                                    {tableHeaders.map(key => (\r\n                                        <StyledTableCell key={key}>{key}</StyledTableCell>\r\n                                    ))}\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                           \r\n                                {activityList.slice(pg * rpg, pg * rpg + rpg).map((activitydetails) => (\r\n                                    <TableRow key={activitydetails._id}>\r\n\r\n                                        {/* <TableCell className=\"pl-3 fw-normal\" >{activitydetails.classId ? activitydetails.classId.className : ''}</TableCell> */}\r\n\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{activitydetails.studentId.studentName}</TableCell>\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{activitydetails.superActivityId ? activitydetails.superActivityId.superActivityName : ''}</TableCell>\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{activitydetails.activityId ? activitydetails.activityId.activityName : ''}</TableCell>\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{activitydetails.subActivityId ? activitydetails.subActivityId.subActivityName : ''}</TableCell>\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{activitydetails.remarks}</TableCell>\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{activitydetails.date}</TableCell>\r\n                                        <TableCell>\r\n                                            <EditIcon style={{ cursor: 'pointer' }} onClick={() => editActivity(activitydetails,false)} >\r\n                                            </EditIcon >\r\n                                        </TableCell>\r\n                                        <TableCell>\r\n                                            <DeleteIcon style={{ cursor: 'pointer' }} onClick={() => deleteActivity(activitydetails._id)} />\r\n                                        </TableCell>\r\n                                        <TableCell>\r\n                                            <AddIcon style={{ cursor: 'pointer' }} onClick={() => editActivity(activitydetails,true)} />\r\n                                        </TableCell>\r\n\r\n                                    </TableRow>\r\n                                ))}\r\n                                {/* ))} */}\r\n                            </TableBody>\r\n                        </Table>\r\n                        <TablePagination\r\n                            component=\"div\"\r\n                            rowsPerPageOptions={[5, 25, 50, 100, 200, 500, 700, 1000 ]}\r\n                            count={activityList.length}\r\n                            page={pg}\r\n                            onPageChange={handleChangePage}\r\n                            rowsPerPage={rpg}\r\n                            onRowsPerPageChange={handleChangeRowsPerPage}\r\n                        />\r\n                    </Widget>\r\n                </Grid>\r\n            </Grid>\r\n            <Dialog open={open} onClose={handleClose}>\r\n                <DialogTitle>Add Activity</DialogTitle>\r\n                <form onSubmit={formik.handleSubmit} >\r\n                    <DialogContent style={{ width: 308 }}>\r\n                        {/* <FormControl variant=\"standard\" fullWidth=\"true\" >\r\n                            <InputLabel id=\"demo-simple-select-standard-label\">Age</InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-standard-label\"\r\n                                id=\"className\"\r\n                                name=\"classId\"\r\n                                label=\"className\"\r\n                                value={formik.values.classId}\r\n                                onChange={e => { formik.handleChange(e); getStudentList(e.target.value) }}\r\n                                error={formik.touched.classId && Boolean(formik.errors.classId)}\r\n                                helperText={formik.touched.classId && formik.errors.classId}\r\n                            >\r\n                                <MenuItem value=\"\">\r\n                                    <em>None</em>\r\n                                </MenuItem>\r\n                                {addClassList.map(({ _id, className }) => (\r\n                                    <MenuItem key={_id} value={_id}>{className}\r\n                                     \r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n\r\n                        </FormControl> */}\r\n                         <TextField InputProps={{ style: { width: 250 } }}\r\n                                            id=\"date\"\r\n                                            name=\"date\"\r\n                                            label=\"Date\"\r\n                                            type=\"date\"\r\n                                            value={formik.values.date}\r\n                                            onChange={formik.handleChange}\r\n                                            error={formik.touched.date && Boolean(formik.errors.date)}\r\n                                            helperText={formik.touched.date && formik.errors.date}\r\n                                            className={classes.textField}\r\n                                            InputLabelProps={{\r\n                                                shrink: true,\r\n                                            }}\r\n                                        />\r\n                        <FormControl variant=\"standard\" fullWidth>\r\n                            <InputLabel id=\"studentName\">Student Name</InputLabel>\r\n                            <Select\r\n                                 autoFocus\r\n                                labelId=\"studentName\"\r\n                                id=\"studentName\"\r\n                                label=\"Student Name\"\r\n                                name=\"studentId\"\r\n                                value={formik.values.studentId}\r\n                                onChange={e => {\r\n                                    formik.handleChange(e);\r\n                                    getStudentList(e.target.value)\r\n                                }}\r\n                                // onChange={formik.handleChange}\r\n                                error={formik.touched.studentId && Boolean(formik.errors.studentId)}\r\n                                helperText={formik.touched.studentId && formik.errors.studentId}\r\n                            >\r\n                                <MenuItem value=\"\">\r\n                                    <em>None</em>\r\n                                </MenuItem>\r\n                                {studentList.map(({ index, _id, studentName }) => (\r\n                                    <MenuItem key={index} value={_id}>{studentName}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n                        <FormControl variant=\"standard\" fullWidth>\r\n                            <InputLabel id=\"demo-simple-select-standard-label\">Area Of Work</InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-standard-label\"\r\n                                id=\"superActivityName\"\r\n                                label=\"Area Of Work \"\r\n                                name=\"superActivityId\"\r\n                                onChange={e => { formik.handleChange(e); getActivityList(e) }}\r\n                                value={formik.values.superActivityId}\r\n                                error={formik.touched.superActivityId && Boolean(formik.errors.superActivityId)}\r\n                                helperText={formik.touched.superActivityId && formik.errors.superActivityId}\r\n                            >\r\n                                <MenuItem value=\"\">\r\n                                    <em>None</em>\r\n                                </MenuItem>\r\n                                {addSuperActivityList.map(({ _id, superActivityName }) => (\r\n\r\n                                    <MenuItem key={_id} value={_id}>{superActivityName}\r\n                                        {/* <Checkbox checked={formik.values.categoryId.indexOf(parent) > -1} /> */}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n                        <FormControl variant=\"standard\" fullWidth>\r\n                            <InputLabel id=\"demo-simple-select-standard-label\">List Of Activities</InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-standard-label\"\r\n                                id=\"activityName\"\r\n                                label=\"List Of Activities\"\r\n                                name=\"activityId\"\r\n                                onChange={e => { formik.handleChange(e); getSubActivityList(e) }}\r\n                                value={formik.values.activityId}\r\n                                error={formik.touched.activityId && Boolean(formik.errors.activityId)}\r\n                                helperText={formik.touched.activityId && formik.errors.activityId}\r\n                            >\r\n                                <MenuItem value=\"\">\r\n                                    <em>None</em>\r\n                                </MenuItem>\r\n                                {addActivityList.map(({ _id, activityName }) => (\r\n\r\n                                    <MenuItem key={_id} value={_id}>{activityName}\r\n                                        {/* <Checkbox checked={formik.values.categoryId.indexOf(parent) > -1} /> */}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n                        <FormControl variant=\"standard\" fullWidth>\r\n                            <InputLabel id=\"subActivityName\">Exercise</InputLabel>\r\n                            <Select\r\n                                labelId=\"subActivityName\"\r\n                                id=\"subActivityId\"\r\n                                label=\"Exercise\"\r\n                                name=\"subActivityId\"\r\n                                value={formik.values.subActivityId}\r\n                                onChange={formik.handleChange}\r\n                                error={formik.touched.subActivityId && Boolean(formik.errors.subActivityId)}\r\n                                helperText={formik.touched.subActivityId && formik.errors.subActivityId}\r\n                            >\r\n                                <MenuItem value=\"\">\r\n                                    <em>None</em>\r\n                                </MenuItem>\r\n                                {subActivityList.map(({ _id, subActivityName }) => (\r\n                                    <MenuItem key={_id} value={_id}>{subActivityName}\r\n                                        {/* <Checkbox checked={formik.values.categoryId.indexOf(parent) > -1} /> */}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n                        <FormControl variant=\"standard\" fullWidth>\r\n                            <InputLabel id=\"demo-simple-select-standard-label\">Select Key</InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-standard-label\"\r\n                                id=\"demo-simple-select-standard\"\r\n                                label=\"Key\"\r\n                                name=\"key\"\r\n                                value={formik.values.key}\r\n                                onChange={formik.handleChange}\r\n                                error={formik.touched.key && Boolean(formik.errors.key)}\r\n                                helperText={formik.touched.key && formik.errors.key}\r\n                            >\r\n                                <MenuItem value=\"\">\r\n                                    <em>None</em>\r\n                                </MenuItem>\r\n                                <MenuItem value={\"A\"}>Works with Assistance </MenuItem>\r\n                                <MenuItem value={\"I\"}>Works Independently</MenuItem>\r\n                                <MenuItem value={\"N\"}> Presented</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n\r\n                        {/* <InputLabel >Copywrite © {year} Name</InputLabel> */}\r\n                        {/* <small>Copywrite © {year} Name</small> */}\r\n                        {/* <FormControl variant=\"standard\" fullWidth>\r\n                            <InputLabel id=\"demo-simple-select-standard-label\">Academic Year</InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-standard-label\"\r\n                                id=\"demo-simple-select-standard\"\r\n                                label=\"status\"\r\n                                name=\"academicYear\"\r\n                                value={formik.values.academicYear}\r\n                                onChange={formik.handleChange}\r\n                                error={formik.touched.academicYear && Boolean(formik.errors.academicYear)}\r\n                                helperText={formik.touched.academicYear && formik.errors.academicYear}\r\n                            >\r\n                                <MenuItem value=\"\">\r\n                                    <em>None</em>\r\n                                </MenuItem>\r\n                                <MenuItem value={year}>{year}</MenuItem>\r\n                            </Select>\r\n                        </FormControl> */}\r\n                        {/* \r\n                        <TextField\r\n                            InputProps={{ style: { width: 258 } }}\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"studentName \"\r\n                            name=\"studentName\"\r\n                            label=\"student Name\"\r\n                            type=\"text\"\r\n                            variant=\"standard\"\r\n                            value={formik.values.studentName}\r\n                            onChange={formik.handleChange}\r\n                            error={formik.touched.studentName && Boolean(formik.errors.studentName)}\r\n                            helperText={formik.touched.studentName && formik.errors.studentName}\r\n                        /> */}\r\n                        <TextField InputProps={{ style: { width: 258 } }}\r\n\r\n                            margin=\"dense\"\r\n                            \r\n                            id=\"remarks\"\r\n                            name=\"remarks\"\r\n                            label=\"Remarks\"\r\n                            type=\"text\"\r\n                            variant=\"standard\"\r\n                            value={formik.values.remarks}\r\n                            onChange={formik.handleChange}\r\n                            error={formik.touched.remarks && Boolean(formik.errors.remarks)}\r\n                            helperText={formik.touched.remarks && formik.errors.remarks}\r\n                        />\r\n\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={handleClose}>Cancel</Button>\r\n                        <Button type=\"submit\">Add</Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n","C:\\montessori\\montessori_ui\\src\\pages\\dashboard\\AddClass.js",["772","773","774","775","776","777","778","779","780","781","782","783","784","785","786","787","788","789","790","791","792","793","794","795","796","797","798","799"],"import React, { useState } from \"react\";\r\nimport {\r\n    Button, Dialog, DialogActions, DialogContent, DialogTitle, FormControl, InputLabel, MenuItem,\r\n    TableRow, Table,\r\n    TableHead,\r\n    TableBody,\r\n    TableCell\r\n} from \"@material-ui/core\";\r\nimport AddClassService from \"./Locality/Service/addClassService\";\r\nimport * as Yup from 'yup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport { Grid, Card, Box, Select, TextField } from \"@material-ui/core\";\r\nimport { useFormik } from 'formik';\r\nimport { useContext, useEffect } from 'react';\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport {\r\n    ResponsiveContainer,\r\n    ComposedChart,\r\n    AreaChart,\r\n    LineChart,\r\n    Line,\r\n    Area,\r\n    PieChart,\r\n    Pie,\r\n    Cell,\r\n    YAxis,\r\n    XAxis,\r\n} from \"recharts\";\r\nimport mock from \"./mock\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { Typography } from \"../../components/Wrappers/Wrappers\";\r\nimport Dot from \"../../components/Sidebar/components/Dot\";\r\nimport BigStat from \"./components/BigStat/BigStat\";\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\n  const StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n      backgroundColor: \"#30875b\",\r\n      color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n      fontSize: 14,\r\n    },\r\n  }))(TableCell);\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: 200,\r\n    },\r\n}));\r\nexport default function AddClass() {\r\n    const tableHeaders = [ 'Class Name', 'Status', 'edit', 'delete'];\r\n    const classes = useStyles();\r\n    const [addClassList, setAddClassList] = useState([]);\r\n    const [age, setAge] = React.useState('');\r\n    var [error, setError] = useState(null);\r\n    const [classList, setClassList] = useState([]);\r\n    const [open, setOpen] = React.useState(false);\r\n    const [addClass, setAddClass] = useState({\r\n        className: '',\r\n        status: '',\r\n    });\r\n    useEffect(() => {\r\n        getAddClassList();\r\n        return () => {\r\n            setClassList([]);\r\n            setAddClassList([])\r\n        }\r\n    }, []);\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const onclick = () => {\r\n\r\n        setOpen(true);\r\n      }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const handleChange = (event) => {\r\n        setAge(event.target.value);\r\n    };\r\n    const getAddClassList = () => {\r\n      const userDetails = JSON.parse(localStorage.getItem(\"userDetail\"));\r\n      \r\n        AddClassService.getAllAddClass(userDetails.schoolId).then((res) => {\r\n            setAddClassList(res);\r\n        }).catch((err) => {\r\n            // setError(err.message);\r\n        });\r\n    }\r\n    const onSubmit = data => {\r\n        console.log(JSON.stringify(data, null, 2));\r\n      };\r\n    const validationSchema = Yup.object().shape({\r\n     \r\n        className: Yup.string().required('Class Name is required'),\r\n        status: Yup.string().required('status  is required'),\r\n    });\r\n   \r\n    const editSchooleId = (schooleid) => {\r\n        setAddClass(schooleid)\r\n        handleOpen()\r\n      }\r\n      const deleteSchooleId = (schooleiddelete) => {\r\n        if (schooleiddelete) {\r\n          AddClassService.deleteAddClass(schooleiddelete).then((res) => {\r\n            getAddClassList();\r\n          }).catch((err) => {\r\n          });\r\n        }\r\n      };\r\n    const formik = useFormik({\r\n        initialValues: addClass,\r\n        enableReinitialize: true,\r\n        validationSchema: validationSchema,\r\n        onSubmit: (values, { resetForm }) => {\r\n            const userDetails = JSON.parse(localStorage.getItem(\"userDetail\"));\r\n            values.schooleId = userDetails.schoolId;\r\n            if(addClass._id){\r\n\r\n              \r\n                AddClassService.upadeAddClass(values).then((res) => {\r\n                    handleClose();\r\n                    getAddClassList();\r\n                    resetForm()\r\n                    alert(\"Class Updated Successfully.\");\r\n                    \r\n                  }).catch((err) => {\r\n                   \r\n                  });\r\n            }\r\n            else {\r\n                    AddClassService.creteAddClass(values).then((res) => {\r\n                        getAddClassList();\r\n                        handleClose();\r\n                        resetForm();\r\n                        alert(\" Class Added Successfully.\");\r\n                        // props.history.push('/app/vendor');\r\n                    })\r\n                \r\n                .catch((err) => {\r\n                    \r\n                    alert(err.response.data.message)\r\n                })\r\n        }\r\n    },\r\n    });\r\n    return (\r\n        <>\r\n            <PageTitle title=\"Age\" button={<Button\r\n                variant=\"contained\" onClick={handleOpen}\r\n                size=\"medium\"\r\n                color=\"secondary\" style={{backgroundColor:'#30875b'}}> Add Age\r\n            </Button>} />\r\n            <Grid container spacing={4}>\r\n        <Grid item xs={12}>\r\n          <Widget title=\"\" upperTitle noBodyPadding bodyClass={classes.tableOverflow}>\r\n            <Table className=\"mb-0\">\r\n              <TableHead >\r\n                <TableRow>\r\n                  {tableHeaders.map(key => (\r\n                    <StyledTableCell key={key}>{key}</StyledTableCell>\r\n                  ))}\r\n                </TableRow>\r\n\r\n              </TableHead>\r\n              <TableBody>\r\n                {addClassList.map((schooleId) => (\r\n                  <TableRow key={schooleId._id}>\r\n        \r\n                    <TableCell className=\"pl-3 fw-normal\" >{schooleId.className}</TableCell>\r\n\r\n                    <TableCell>\r\n                      {schooleId.status ? 'Active' : 'In Active'}\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <EditIcon style={{ cursor: 'pointer' }} onClick={() => editSchooleId(schooleId)} >\r\n                      </EditIcon >\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      <DeleteIcon style={{ cursor: 'pointer' }} onClick={() => deleteSchooleId(schooleId)} />\r\n                    </TableCell>\r\n                    {/* <TableCell>\r\n      <EditIcon   onClick={() => editVendor(category._id)} >\r\n      \r\n      </EditIcon >\r\n    </TableCell> */}\r\n                    {/* <TableCell>\r\n      <DeleteIcon onClick={() => deleteVendorRister(vendorRegistration)} />\r\n    </TableCell> */}\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </Widget>\r\n        </Grid>\r\n      </Grid>\r\n            <Dialog open={open} onClose={handleClose}>\r\n                <DialogTitle>Add Age</DialogTitle>\r\n                <form onSubmit={formik.handleSubmit} >\r\n                    <DialogContent style= {{ width: 308 }}>\r\n                        \r\n                        <TextField\r\n                            InputProps={{ style: { width: 258 } }}\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"className\"\r\n                            name=\"className\"\r\n                            label=\"Age\"\r\n                            type=\"text\"\r\n                            variant=\"standard\"\r\n                            value={formik.values.className}\r\n                            onChange={formik.handleChange}\r\n                            error={formik.touched.className && Boolean(formik.errors.className)}\r\n                            helperText={formik.touched.className && formik.errors.className}\r\n                        />\r\n                        <FormControl variant=\"standard\" fullWidth>\r\n                            <InputLabel id=\"demo-simple-select-standard-label\">Status</InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-standard-label\"\r\n                                id=\"demo-simple-select-standard\"\r\n                                label=\"status\"\r\n                                name=\"status\"\r\n                                value={formik.values.status}\r\n                                onChange={formik.handleChange}\r\n                                error={formik.touched.status && Boolean(formik.errors.status)}\r\n                                helperText={formik.touched.status && formik.errors.status}\r\n                            >\r\n                                <MenuItem value=\"\">\r\n                                    <em>None</em>\r\n                                </MenuItem>\r\n                                <MenuItem value={true}>Active</MenuItem>\r\n                                <MenuItem value={false}>In Active</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={handleClose}>Cancel</Button>\r\n                        <Button type=\"submit\">Add</Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n","C:\\montessori\\montessori_ui\\src\\pages\\dashboard\\Teacher.js",["800","801","802","803","804","805","806","807","808","809","810","811","812","813","814","815","816","817","818","819","820","821","822","823","824","825","826","827","828","829","830","831","832","833","834","835","836","837","838","839","840","841"],"import React, { useState } from \"react\";\r\n\r\nimport {\r\n    LinearProgress,\r\n    OutlinedInput,\r\n} from \"@material-ui/core\";\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport {\r\n    Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, FormControl, InputLabel, MenuItem,\r\n    TableRow, Table,\r\n    TableHead,\r\n    TableBody,\r\n    TableCell\r\n} from \"@material-ui/core\";\r\nimport TeacherService from \"./Locality/Service/teacherService\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as Yup from 'yup';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport { Grid, Card, Box, Select, TextField } from \"@material-ui/core\";\r\nimport { useFormik } from 'formik';\r\nimport { useContext, useEffect } from 'react';\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport {\r\n    ResponsiveContainer,\r\n    ComposedChart,\r\n    AreaChart,\r\n    LineChart,\r\n    Line,\r\n    Area,\r\n    PieChart,\r\n    Pie,\r\n    Cell,\r\n    YAxis,\r\n    XAxis,\r\n} from \"recharts\";\r\nimport mock from \"./mock\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { Typography } from \"../../components/Wrappers/Wrappers\";\r\nimport Dot from \"../../components/Sidebar/components/Dot\";\r\nimport BigStat from \"./components/BigStat/BigStat\";\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport AddClassService from \"./Locality/Service/addClassService\";\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        backgroundColor: \"#30875b\",\r\n        color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n        fontSize: 14,\r\n    },\r\n}))(TableCell);\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: 200,\r\n    },\r\n}));\r\nexport default function Teacher() {\r\n    const tableHeaders = ['Teacher Name', 'Address', 'Edit', 'Delete'];\r\n    const classes = useStyles();\r\n    const [teacherList, setTeacherList] = useState([]);\r\n    const [classNameList, setClassNameList] = useState([]);\r\n    const [addClassList, setAddClassList] = useState([]);\r\n    const [age, setAge] = React.useState('');\r\n    var [error, setError] = useState(null);\r\n    const [teacherIdList, setTeacherIdList] = useState([]);\r\n    const [open, setOpen] = React.useState(false);\r\n    const [teacher, setTeacher] = useState({\r\n        // classId: '',\r\n        teacherName: '',\r\n        email: '',\r\n        password:'',\r\n        // subject: '',\r\n        qualification: '',\r\n        address: '',\r\n        mobileNumber: '',\r\n        // attendence: '',\r\n        // status: '',\r\n    })\r\n    const validationSchema = Yup.object().shape({\r\n        // classId: Yup.string().required('Class Name is required'),\r\n        teacherName: Yup.string().required('teache Name is required'),\r\n        email: Yup.string().required('Email is required'),\r\n        password: Yup.string().required('password is required'),\r\n        // subject: Yup.string().required('Subject is required'),\r\n        qualification: Yup.string().required('Qualification is required'),\r\n        address: Yup.string().required('Address is required'),\r\n        mobileNumber: Yup.string().required()\r\n            .matches(/^[0-9]+$/, \"Must be only digits\")\r\n            .min(10, 'Must be exactly 10 digits')\r\n            .max(10, 'Must be exactly 10 digits'),\r\n        // attendence: Yup.string().required('attendence is required'),\r\n        // status: Yup.string().required('status  is required'),\r\n    });\r\n    useEffect(() => {\r\n        getTeacherList();\r\n        getAddClassList();\r\n        return () => {\r\n            setTeacherIdList([]);\r\n            setTeacherList([]);\r\n            setAddClassList([]);\r\n            // setClassNameList([]);\r\n        }\r\n    }, []);\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const onclick = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const handleChange = (event) => {\r\n        setAge(event.target.value);\r\n    };\r\n    const onSubmit = data => {\r\n        console.log(JSON.stringify(data, null, 2));\r\n    };\r\n    const getTeacherList = () => {\r\n        const userDetails = JSON.parse(localStorage.getItem(\"userDetail\"));\r\n        TeacherService.getAllTeacher(userDetails.schoolId).then((res) => {\r\n            debugger\r\n            setTeacherList(res);\r\n        }).catch((err) => {\r\n            // setError(err.message);\r\n        });\r\n    }\r\n    const getAddClassList = () => {\r\n        const userDetails = JSON.parse(localStorage.getItem(\"userDetail\"));\r\n        AddClassService.getAllAddClass(userDetails.schoolId).then((res) => {\r\n            setAddClassList(res);\r\n        }).catch((err) => {\r\n            // setError(err.message);\r\n        });\r\n    }\r\n    // const getClassNameList = (event) => {\r\n    //     AddClassService.getAddClassNameById({ className: event.target.value }).then((res) => {\r\n    //         debugger\r\n    //         setClassNameList(res);\r\n\r\n    //     }).catch((err) => {\r\n    //         setError(err.message);\r\n    //     });\r\n    // }\r\n    const editTeacher = (teacher) => {\r\n        // teacher.classId = teacher.classId ? teacher.classId._id :'';\r\n        setTeacher(teacher);\r\n        handleOpen();\r\n    }\r\n    const deleteTeacher = (teacherdelete) => {\r\n        if (teacherdelete) {\r\n            TeacherService.deleteTeacher(teacherdelete).then((res) => {\r\n                getTeacherList();\r\n            }).catch((err) => {\r\n            });\r\n        }\r\n    };\r\n    const formik = useFormik({\r\n        initialValues: teacher,\r\n        enableReinitialize: true,\r\n        validationSchema: validationSchema,\r\n        onSubmit: (values, { resetForm }) => {\r\n            const userDetails = JSON.parse(localStorage.getItem(\"userDetail\"));\r\n            values.schooleId = userDetails.schoolId;\r\n            if (teacher._id) {\r\n                TeacherService.upadeTeacher(values).then((res) => {\r\n                    handleClose();\r\n                    getTeacherList();\r\n                    resetForm()\r\n                    alert(\"Teacher Updated Successfully.\");\r\n                }).catch((err) => {\r\n                });\r\n            }\r\n            else {\r\n                TeacherService.creteTeacher(values).then((res) => {\r\n                    debugger\r\n                    getTeacherList();\r\n                    resetForm();\r\n                    handleClose();\r\n                    alert(\" Teacher Added Successfully.\");\r\n                    // props.history.push('/app/vendor');\r\n                })\r\n                    .catch((err) => {\r\n                        alert(err.response.data.message)\r\n                    })\r\n            }\r\n\r\n        },\r\n    });\r\n\r\n    return (\r\n\r\n        <>\r\n            <PageTitle title=\"Teacher\" button={<Button\r\n                variant=\"contained\" onClick={handleOpen}\r\n                size=\"medium\"\r\n                color=\"secondary\" style={{ backgroundColor: '#30875b' }}> Add Teacher\r\n            </Button>} />\r\n            <Grid container spacing={4}>\r\n                <Grid item xs={12}>\r\n                    <Widget title=\"\" upperTitle noBodyPadding bodyClass={classes.tableOverflow}>\r\n\r\n                        <Table className=\"mb-0\">\r\n                            <TableHead >\r\n                                <TableRow>\r\n                                    {tableHeaders.map(key => (\r\n                                        <StyledTableCell key={key}>{key}</StyledTableCell>\r\n                                    ))}\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {teacherList.map((teacher) => (\r\n                                    <TableRow key={teacher._id}>\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{teacher.teacherName}</TableCell>\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{teacher.address}</TableCell>\r\n                                        <TableCell>\r\n                                            <EditIcon style={{ cursor: 'pointer' }} onClick={() => editTeacher(teacher)} >\r\n                                            </EditIcon >\r\n                                        </TableCell>\r\n                                        <TableCell>\r\n                                            <DeleteIcon style={{ cursor: 'pointer' }} onClick={() => deleteTeacher(teacher)} />\r\n                                        </TableCell>\r\n                                        {/* <TableCell>\r\n      <EditIcon   onClick={() => editVendor(category._id)} >\r\n      \r\n      </EditIcon >\r\n    </TableCell> */}\r\n                                        {/* <TableCell>\r\n      <DeleteIcon onClick={() => deleteVendorRister(vendorRegistration)} />\r\n    </TableCell> */}\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </Widget>\r\n                </Grid>\r\n            </Grid>\r\n            <Dialog open={open} onClose={handleClose}>\r\n                <DialogTitle>Add Teacher</DialogTitle>\r\n                <form onSubmit={formik.handleSubmit} >\r\n                    <DialogContent style= {{ width: 308 }}>\r\n                        {/* <FormControl variant=\"standard\" fullWidth=\"true\" >\r\n                            <InputLabel id=\"demo-simple-select-standard-label\">Age</InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-standard-label\"\r\n                                id=\"className\"\r\n                                name=\"classId\"\r\n                                label=\"className\"\r\n                                value={formik.values.classId}\r\n                                onChange={formik.handleChange}\r\n                                error={formik.touched.classId && Boolean(formik.errors.classId)}\r\n                                helperText={formik.touched.classId && formik.errors.classId}\r\n                            >\r\n                                <MenuItem value=\"\">\r\n                                    <em>None</em>\r\n                                </MenuItem>\r\n                                {addClassList.map(({ _id, className }) => (\r\n                                    <MenuItem key={_id} value={_id}>{className}\r\n                                      \r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl> */}\r\n                        <TextField\r\n                            InputProps={{ style: { width: 258} }}\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"teacherName\"\r\n                            name=\"teacherName\"\r\n                            label=\"Teacher Name\"\r\n                            type=\"text\"\r\n                            variant=\"standard\"\r\n                            value={formik.values.teacherName}\r\n                            onChange={formik.handleChange}\r\n                            error={formik.touched.teacherName && Boolean(formik.errors.teacherName)}\r\n                            helperText={formik.touched.teacherName && formik.errors.teacherName}\r\n                        />\r\n                        <TextField\r\n                            InputProps={{ style: { width: 258 } }}\r\n                            margin=\"dense\"\r\n                            id=\"email\"\r\n                            name=\"email\"\r\n                            label=\"Email ID\"\r\n                            type=\"text\"\r\n                            variant=\"standard\"\r\n                            value={formik.values.email}\r\n                            onChange={formik.handleChange}\r\n                            error={formik.touched.email && Boolean(formik.errors.email)}\r\n                            helperText={formik.touched.email && formik.errors.email}\r\n                        />         \r\n                        <TextField\r\n                            id=\"password\"\r\n                            InputProps={{ style: { width: 258 } }}\r\n                            margin=\"normal\"\r\n                            label=\" Set Password  \"\r\n                            // placeholder=\"Password\"\r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            value={formik.values.password}\r\n                            onChange={formik.handleChange}\r\n                            error={formik.touched.password && Boolean(formik.errors.password)}\r\n                            helperText={formik.touched.password && formik.errors.password}\r\n\r\n                        />\r\n                        {/* <TextField\r\n                            InputProps={{ style: { width: 258 } }}                         \r\n                            margin=\"dense\"\r\n                            id=\"subject\"\r\n                            name=\"subject\"\r\n                            label=\"Subject\"\r\n                            type=\"text\"\r\n                            variant=\"standard\"\r\n                            value={formik.values.subject}\r\n                            onChange={formik.handleChange}\r\n                            error={formik.touched.subject && Boolean(formik.errors.subject)}\r\n                            helperText={formik.touched.subject && formik.errors.subject}\r\n                        /> */}\r\n                        <TextField\r\n                            InputProps={{ style: { width: 258 } }}                            \r\n                            margin=\"dense\"\r\n                            id=\"qualification\"\r\n                            name=\"qualification\"\r\n                            label=\"Qualification\"\r\n                            type=\"text\"\r\n                            variant=\"standard\"\r\n                            value={formik.values.qualification}\r\n                            onChange={formik.handleChange}\r\n                            error={formik.touched.qualification && Boolean(formik.errors.qualification)}\r\n                            helperText={formik.touched.qualification && formik.errors.qualification}\r\n                        />\r\n                        <TextField\r\n                            InputProps={{ style: { width: 258 } }}\r\n                            margin=\"dense\"\r\n                            id=\"address\"\r\n                            name=\"address\"\r\n                            placeholder=\"enter City Name \"\r\n                            label=\"address \"\r\n                            type=\"text\"\r\n                            variant=\"standard\"\r\n                            value={formik.values.address}\r\n                            onChange={formik.handleChange}\r\n                            error={formik.touched.address && Boolean(formik.errors.address)}\r\n                            helperText={formik.touched.address && formik.errors.address}\r\n                        />\r\n                        <TextField\r\n                            InputProps={{ style: { width: 258 } }}\r\n                            margin=\"dense\"\r\n                            id=\"mobileNumber\"\r\n                            name=\"mobileNumber\"\r\n                            label=\"Mobile Number\"\r\n                            type=\"text\"\r\n                            variant=\"standard\"\r\n                            value={formik.values.mobileNumber}\r\n                            onChange={formik.handleChange}\r\n                            error={formik.touched.mobileNumber && Boolean(formik.errors.mobileNumber)}\r\n                            helperText={formik.touched.mobileNumber && formik.errors.mobileNumber}\r\n                        />\r\n                        {/* <FormControl variant=\"standard\" fullWidth>\r\n                            <InputLabel id=\"demo-simple-select-standard-label\">Attendence</InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-standard-label\"\r\n                                id=\"demo-simple-select-standard\"\r\n                                label=\"attendence\"\r\n                                name=\"attendence\"\r\n                                value={formik.values.attendence}\r\n                                onChange={formik.handleChange}\r\n                                error={formik.touched.attendence && Boolean(formik.errors.attendence)}\r\n                                helperText={formik.touched.attendence && formik.errors.attendence}\r\n                            >\r\n                                <MenuItem value=\"\">\r\n                                    <em>None</em>\r\n                                </MenuItem>\r\n                                <MenuItem value={true}>Present</MenuItem>\r\n                                <MenuItem value={false}>Obsent</MenuItem>\r\n\r\n                            </Select>\r\n                        </FormControl> */}\r\n                        {/* <FormControl variant=\"standard\" fullWidth>\r\n                            <InputLabel id=\"demo-simple-select-standard-label\">Status</InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-standard-label\"\r\n                                id=\"demo-simple-select-standard\"\r\n                                label=\"status\"\r\n                                name=\"status\"\r\n                                value={formik.values.status}\r\n                                onChange={formik.handleChange}\r\n                                error={formik.touched.status && Boolean(formik.errors.status)}\r\n                                helperText={formik.touched.status && formik.errors.status}\r\n                            >\r\n                                <MenuItem value=\"\">\r\n                                    <em>None</em>\r\n                                </MenuItem>\r\n                                <MenuItem value={true}>Active</MenuItem>\r\n                                <MenuItem value={false}>In Active</MenuItem>\r\n\r\n                            </Select>\r\n                        </FormControl> */}\r\n                    </DialogContent>\r\n\r\n                    <DialogActions>\r\n                        <Button onClick={handleClose}>Cancel</Button>\r\n                        <Button type=\"submit\">Add</Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n","C:\\montessori\\montessori_ui\\src\\pages\\dashboard\\StudentForm.js",["842","843","844","845","846","847","848","849","850","851","852","853","854","855","856","857","858","859","860","861","862","863","864","865","866","867","868","869","870","871","872","873","874","875","876","877","878","879","880","881","882","883","884","885","886","887","888","889","890","891"],"import React, { useState, useMemo } from \"react\";\r\nimport AddClassService from \"./Locality/Service/addClassService\";\r\n\r\nimport {\r\n    LinearProgress,\r\n    OutlinedInput,\r\n} from \"@material-ui/core\";\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport {\r\n    Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, FormControl, InputLabel, MenuItem,\r\n    TableRow, Table,\r\n    TableHead,\r\n    TableBody,\r\n    TableCell\r\n} from \"@material-ui/core\";\r\nimport StudentService from \"./Locality/Service/studentService\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as Yup from 'yup';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n\r\nimport { Grid, Card, Box, Select, TextField } from \"@material-ui/core\";\r\nimport { useFormik } from 'formik';\r\n\r\nimport { useContext, useEffect } from 'react';\r\nimport { useTheme } from \"@material-ui/styles\";\r\n\r\nimport {\r\n    ResponsiveContainer,\r\n    ComposedChart,\r\n    AreaChart,\r\n    LineChart,\r\n    Line,\r\n    Area,\r\n    PieChart,\r\n    Pie,\r\n    Cell,\r\n    YAxis,\r\n    XAxis,\r\n} from \"recharts\";\r\nimport mock from \"./mock\";\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { Typography } from \"../../components/Wrappers/Wrappers\";\r\nimport Dot from \"../../components/Sidebar/components/Dot\";\r\nimport BigStat from \"./components/BigStat/BigStat\";\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport { useParams } from \"react-router-dom\";\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: 200,\r\n    },\r\n}));\r\nexport default function StudentForm(props, history) {\r\n    const { id } = useParams();\r\n    const classes = useStyles();\r\n    const [age, setAge] = React.useState('');\r\n    var [error, setError] = useState(null);\r\n    const [cityList, setCityList] = useState([]);\r\n    const [open, setOpen] = React.useState(false);\r\n    const [addClassList, setAddClassList] = useState([]);\r\n    const [studentList, setStudentList] = useState([]);\r\n    const [student, setStudent] = useState({\r\n        studentName: '',\r\n        dob: '',\r\n        // classId: '',\r\n        parentName: '',\r\n        mobileNumber: '',\r\n        email: '',\r\n        password: '',\r\n        address: '',\r\n        lane: '',\r\n        selectCity: '',\r\n        doa: '',\r\n        allergies: '',\r\n    });\r\n   \r\n    const city = [\r\n        'Mumbai',\r\n        'Delhi',\r\n        'Bagolore',\r\n        'Hyderbad',\r\n        'Chennai',\r\n    ];\r\n    useEffect(() => {\r\n        getAddClassList();\r\n        if (id !== 'add') {\r\n            getByIdList();\r\n        }\r\n        return () => {\r\n            setStudentList([]);\r\n            setAddClassList([]);\r\n\r\n        }\r\n    }, []);\r\n    const handleChange = (event) => {\r\n        setAge(event.target.value);\r\n    };\r\n    const handleOpen = () => {\r\n        props.history.push('/app/studentdetails')\r\n    };\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const validationSchema = Yup.object().shape({\r\n        studentName: Yup.string().required('student name  is required'),\r\n        dob: Yup.string().required('select date of birth'),\r\n        // classId: Yup.string().required('class name  is required'),\r\n        parentName: Yup.string().required('parent name  is required'),\r\n        mobileNumber: Yup.string().required()\r\n            .matches(/^[0-9]+$/, \"Must be only digits\")\r\n            .min(10, 'Must be exactly 10 digits')\r\n            .max(10, 'Must be exactly 10 digits'),\r\n        email: Yup.string().required('email is required'),\r\n        password: Yup.string().required('password is required'),\r\n        address: Yup.string().required('Adress is required'),\r\n        lane: Yup.string(),\r\n        selectCity: Yup.string().required('select city'),\r\n        doa: Yup.string().required('select date of admission'),\r\n        allergies: Yup.string(),\r\n    });\r\n    const getByIdList = () => {\r\n        StudentService.getByIdStudent(id).then((res) => {\r\n\r\n            setStudent(res);\r\n        }).catch((err) => {\r\n            setError(err.message);\r\n        });\r\n    }\r\n    const getStudentList = () => {\r\n        StudentService.getAllStudent().then((res) => {\r\n            setStudentList(res);\r\n        }).catch((err) => {\r\n            // setError(err.message);\r\n        });\r\n    }\r\n    const deleteStudent = (studentdelete) => {\r\n        if (studentdelete) {\r\n            StudentService.deleteStudent(studentdelete).then((res) => {\r\n                getStudentList();\r\n            }).catch((err) => {\r\n            });\r\n        }\r\n    };\r\n    const getAddClassList = () => {\r\n        const userDetails = JSON.parse(localStorage.getItem(\"userDetail\"));\r\n        AddClassService.getAllAddClass(userDetails.schoolId).then((res) => {\r\n            setAddClassList(res);\r\n        }).catch((err) => {\r\n            // setError(err.message);\r\n        });\r\n    }\r\n    const formik = useFormik({\r\n        initialValues: student,\r\n        enableReinitialize: true,\r\n        validationSchema: validationSchema,\r\n        onSubmit: (values, { resetForm }) => {\r\n            const userDetails = JSON.parse(localStorage.getItem(\"userDetail\"));\r\n            values.schooleId = userDetails.schoolId\r\n            if (student._id) {\r\n                StudentService.upadeStudent(values).then((res) => {\r\n\r\n                    alert(\"Student Registration Updated Successfully.\");\r\n                    props.history.push('/app/studentdetails');\r\n                })\r\n                    .catch((err) => {\r\n                        alert(err.response.data.message)\r\n                    })\r\n            }\r\n            else {\r\n                StudentService.creteStudent(values).then((res) => {\r\n                    debugger\r\n                    alert(\" Student Registration Successfully.\");\r\n                    props.history.push('/app/studentdetails');\r\n                    // props.history.push('/app/vendor');\r\n                })\r\n                    .catch((err) => {\r\n\r\n                        alert(err.response.data.message)\r\n                    })\r\n            }\r\n        },\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <Card sx={{ maxWidth: 345 }}>\r\n                <Box   >\r\n                    <div style={{ marginLeft: \"7%\" }}>\r\n                        <form onSubmit={formik.handleSubmit} >\r\n                            <Grid container spacing={2} columns={12} >\r\n                                <Grid item xs={12}>\r\n                                    <PageTitle InputProps={{ style: { color: '#10b680' } }} title=\" Student Registration\" ></PageTitle>\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <TextField InputProps={{ style: { width: 370 } }}\r\n                                        margin=\"dense\"\r\n                                        autoFocus\r\n                                        id=\"studentName\"\r\n                                        name=\"studentName\"\r\n                                        label=\"Name Of The Student \"\r\n                                        type=\"text\"\r\n                                        variant=\"standard\"\r\n                                        value={formik.values.studentName}\r\n                                        onChange={formik.handleChange}\r\n                                        error={formik.touched.studentName && Boolean(formik.errors.studentName)}\r\n                                        helperText={formik.touched.studentName && formik.errors.studentName}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    {/* <form className={classes.container} noValidate> */}\r\n                                        <TextField InputProps={{ style: { width: 370 } }}\r\n                                            id=\"dob\"\r\n                                            name=\"dob\"\r\n                                            label=\"Date Of Birth\"\r\n                                            type=\"date\"\r\n                                           min=\"2016-11-10\"\r\n                                            max=\"2022-11-10\" \r\n                                            // defaultValue=\"2017-05-24\"\r\n                                            value={formik.values.dob}\r\n                                            onChange={formik.handleChange}\r\n                                            error={formik.touched.dob && Boolean(formik.errors.dob)}\r\n                                            helperText={formik.touched.dob && formik.errors.dob}\r\n                                            className={classes.textField}\r\n                                            InputLabelProps={{\r\n                                                shrink: true,\r\n                                            }}\r\n                                        />\r\n                                    {/* </form> */}\r\n                                </Grid>\r\n                                {/* <Grid item xs={6}>\r\n                                    <div style={{ width: 370 }}>\r\n                                        <FormControl className={classes.formControl} fullWidth=\"true\"\r\n                                        >\r\n                                            <InputLabel id=\"demo-simple-select-label\">Select Age</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"demo-simple-select-label\"\r\n                                                id=\"demo-simple-select\"\r\n                                                name=\"classId\"\r\n                                                label=\"selectClass\"\r\n                                                value={formik.values.classId}\r\n                                                onChange={formik.handleChange}\r\n                                                error={formik.touched.classId && Boolean(formik.errors.classId)}\r\n                                                helperText={formik.touched.classId && formik.errors.classId}\r\n                                            >\r\n                                                <MenuItem value=\"\">\r\n                                                    <em>None</em>\r\n                                                </MenuItem>\r\n\r\n                                                {addClassList.map(({ _id, className }) => (\r\n                                    <MenuItem key={_id} value={_id}>{className}\r\n                                        \r\n                                    </MenuItem>\r\n                                                ))}\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n                                </Grid> */}\r\n                                <Grid item xs={6}>\r\n                                    <TextField\r\n                                        InputProps={{ style: { width: 370 } }}\r\n                                        margin=\"dense\"\r\n                                        id=\"parentName\"\r\n                                        name=\"parentName\"\r\n                                        label=\"Parent Name\"\r\n                                        type=\"text\"\r\n                                        variant=\"standard\"\r\n                                        value={formik.values.parentName}\r\n                                        onChange={formik.handleChange}\r\n                                        error={formik.touched.parentName && Boolean(formik.errors.parentName)}\r\n                                        helperText={formik.touched.parentName && formik.errors.parentName}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n\r\n                                    <TextField\r\n                                        InputProps={{ style: { width: 370 } }}\r\n                                        margin=\"dense\"\r\n                                        id=\"mobileNumber\"\r\n                                        name=\"mobileNumber\"\r\n                                        label=\"Mobile Number\"\r\n                                        type=\"text\"\r\n                                        variant=\"standard\"\r\n                                        value={formik.values.mobileNumber}\r\n                                        onChange={formik.handleChange}\r\n                                        error={formik.touched.mobileNumber && Boolean(formik.errors.mobileNumber)}\r\n                                        helperText={formik.touched.mobileNumber && formik.errors.mobileNumber}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n\r\n                                    <TextField\r\n                                        InputProps={{ style: { width: 370 } }}\r\n\r\n                                        margin=\"dense\"\r\n                                        id=\"email\"\r\n                                        name=\"email\"\r\n                                        label=\"Email\"\r\n                                        type=\"Email\"\r\n                                        variant=\"standard\"\r\n                                        value={formik.values.email}\r\n                                        onChange={formik.handleChange}\r\n                                        error={formik.touched.email && Boolean(formik.errors.email)}\r\n                                        helperText={formik.touched.email && formik.errors.email}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <TextField\r\n                                        id=\"password\"\r\n                                        InputProps={{ style: { width: 370 } }}\r\n                                        margin=\"normal\"\r\n                                        label=\" Set Password  \"\r\n                                        // placeholder=\"Password\"\r\n                                        type=\"password\"\r\n                                        name=\"password\"\r\n                                        value={formik.values.password}\r\n\r\n                                        onChange={formik.handleChange}\r\n                                        error={formik.touched.password && Boolean(formik.errors.password)}\r\n                                        helperText={formik.touched.password && formik.errors.password}\r\n\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={12} style={{ marginTop: '30px' }}>\r\n                                    <span style={{ fontSize: '17px', color: 'rgb(16 182 128)' }} >Address:</span>\r\n                                </Grid>\r\n\r\n                                <Grid item xs={6}>\r\n                                    <TextField\r\n                                        InputProps={{ style: { width: 370 } }}\r\n                                        margin=\"dense\"\r\n                                        id=\"address\"\r\n                                        name=\"address\"\r\n                                        placeholder=\"Door/Flat/domicile number \"\r\n                                        label=\"Address \"\r\n                                        type=\"text\"\r\n                                        variant=\"standard\"\r\n                                        value={formik.values.address}\r\n                                        onChange={formik.handleChange}\r\n                                        error={formik.touched.address && Boolean(formik.errors.address)}\r\n                                        helperText={formik.touched.address && formik.errors.address}\r\n                                    />\r\n\r\n\r\n\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <div style={{ width: 370 }}>\r\n                                        <FormControl\r\n                                        //  className={classes.formControl}\r\n                                            fullWidth=\"true\" >\r\n                                            <InputLabel id=\"demo-simple-select-label\">Select City</InputLabel>\r\n                                            <Select\r\n                                                labelId=\"demo-simple-select-label\"\r\n                                                id=\"selectCity\"\r\n                                                name=\"selectCity\"\r\n                                                label=\"selectCity\"\r\n                                                onChange={formik.handleChange}\r\n                                                value={formik.values.selectCity}\r\n                                                error={formik.touched.selectCity && Boolean(formik.errors.selectCity)}\r\n                                                helperText={formik.touched.selectCity && formik.errors.selectCity}\r\n                                            >\r\n                                                <MenuItem value=\"\">\r\n                                                    <em>None</em>\r\n                                                </MenuItem>\r\n                                                {city.map((city) => (\r\n                                                    <MenuItem key={city} selected={city === 'Nursery'} value={city}  >\r\n                                                        {city}\r\n                                                    </MenuItem>\r\n                                                ))}\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    </div>\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    {/* <form className={classes.container} noValidate> */}\r\n                                        <TextField InputProps={{ style: { width: 370 } }}\r\n                                            id=\"doa\"\r\n                                            name=\"doa\"\r\n                                            label=\"Date Of Admission \"\r\n                                            type=\"date\"\r\n                                            defaultValue=\"2017-05-24\"\r\n                                            value={formik.values.doa}\r\n                                            onChange={formik.handleChange}\r\n                                            error={formik.touched.doa && Boolean(formik.errors.doa)}\r\n                                            helperText={formik.touched.doa && formik.errors.doa}\r\n                                            className={classes.textField}\r\n                                            InputLabelProps={{\r\n                                                shrink: true,\r\n                                            }}\r\n                                        />\r\n                                    {/* </form> */}\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <TextField\r\n                                        InputProps={{ style: { width: 370 } }}\r\n                                        margin=\"dense\"\r\n                                        id=\"allergies\"\r\n                                        name=\"allergies\"\r\n                                        label=\"Allergies if any\"\r\n                                        type=\"text\"\r\n                                        variant=\"standard\"\r\n                                        onChange={formik.handleChange}\r\n                                        value={formik.values.allergies}\r\n                                        error={formik.touched.allergies && Boolean(formik.errors.allergies)}\r\n                                        helperText={formik.touched.allergies && formik.errors.allergies}\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                            <div style={{ textAlign: 'right', margin: '29px' }}>\r\n                                <Button style={{ backgroundColor: ' rgb(48 135 91)', color: 'white' }}\r\n                                    type=\"submit\" variant=\"contained\">Submit</Button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </Box>\r\n            </Card>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n","C:\\montessori\\montessori_ui\\src\\pages\\dashboard\\Locality\\Service\\activityService.js",["892"],"import requests from './httpService';\r\nconst ActivityService = {\r\n  getAllActivity(id) {\r\n    return requests.get(`/activity/list/${id}`);\r\n  },\r\n  getAllSuperActivity(id) {\r\n    return requests.get(`/superactivity/list/${id}`);\r\n  },\r\n//   upadeCity(body) {\r\n//     return requests.put(`/city/${body.id}`,body); \r\n//   },\r\n  creteActivity(body){\r\n    return requests.post('/activity/add',body); \r\n  },\r\n  deleteActivity(body){\r\n    return requests.delete(`/activity/${body}`); \r\n    \r\n  },\r\n\r\n\r\n\r\n  findActivityList(body){\r\n    return requests.post(`/activity/find`,body); \r\n  },\r\n//   getAllCoupon() {\r\n//     return requests.get('/coupon');\r\n//   },\r\ngetAllAddClass() {\r\n  return requests.get('/addclass');\r\n},\r\n\r\n  upadeActivity(body) {\r\n    return requests.put(`/activity/${body._id}`,body); \r\n  },\r\n//   creteCoupon(body){\r\n//     return requests.post('/coupon/add',body); \r\n//   },\r\n//   deleteCoupon(body){\r\n//     return requests.delete(`/coupon/${body._id}`); \r\n//   },\r\n//   createVendorOrdersById(body){\r\n//     return requests.post('/orders/getvendororders',body); \r\n//   },\r\n\r\n//   getAllVendorList() {\r\n//     return requests.get('/vendorlist');\r\n//   },\r\nuserPermitions(){\r\n  const userDetails = JSON.parse(localStorage.getItem(\"userDetail\"));\r\n  debugger\r\nswitch(userDetails.role){\r\ncase 'SCHOOLE':\r\nreturn {studentDetailsEdit:true, studentDetailsDelete:true,\r\n  //  studentActivityEdit:true, studentActivityDelete:true\r\n  }\r\ncase 'TEACHER':\r\nreturn {studentDetailsEdit:false, studentDetailsDelete:false,\r\n  studentActivityEdit:false, studentActivityDelete:false}\r\ncase 'PARENT':\r\nreturn {ageEdit:false}\r\n}\r\n}\r\n};\r\n\r\n\r\n\r\n\r\nexport default ActivityService;\r\n","C:\\montessori\\montessori_ui\\src\\pages\\login\\styles.js",[],"C:\\montessori\\montessori_ui\\src\\components\\PageTitle\\PageTitle.js",[],"C:\\montessori\\montessori_ui\\src\\pages\\charts\\Charts.js",[],"C:\\montessori\\montessori_ui\\src\\pages\\maps\\Maps.js",[],"C:\\montessori\\montessori_ui\\src\\pages\\icons\\Icons.js",[],"C:\\montessori\\montessori_ui\\src\\components\\LoginLayout\\styles.js",[],"C:\\montessori\\montessori_ui\\src\\pages\\typography\\Typography.js",[],"C:\\montessori\\montessori_ui\\src\\components\\Sidebar\\Sidebar.js",["893","894","895","896","897","898","899","900","901","902","903"],"import React, { useState, useEffect } from \"react\";\r\nimport { Drawer, IconButton, List } from \"@material-ui/core\";\r\nimport CategoryServices from \"../../services/CategoryServices\";\r\n\r\nimport {\r\n  NotificationsNone as NotificationsIcon,\r\n  FormatSize as TypographyIcon,\r\n  HotTub as HotTub,\r\n  FilterNone as UIElementsIcon,\r\n  BorderAll as TableIcon,\r\n  QuestionAnswer as SupportIcon,\r\n  LibraryBooks as LibraryIcon,\r\n  HelpOutline as FAQIcon,\r\n  ArrowBack as ArrowBackIcon,\r\n  SvgIconComponent as SvgIconComponent,\r\n  CalendarToday as CalendarToday,\r\n  AccessAlarmSharp as AccessAlarmSharp,\r\n  Create as Create,\r\n  SupervisedUserCircle,\r\n  HistorySharp,\r\n  OpenInNew\r\n} from \"@material-ui/icons\";\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport classNames from \"classnames\";\r\n// styles\r\nimport useStyles from \"./styles\";\r\n// components\r\nimport SidebarLink from \"./components/SidebarLink/SidebarLink\";\r\nimport Dot from \"./components/Dot\";\r\n// context\r\nimport {\r\n  useLayoutState,\r\n  useLayoutDispatch,\r\n  toggleSidebar,\r\n} from \"../../context/LayoutContext\";\r\n\r\nlet structure = [\r\n  // { id: 0, label: \"Student Registration\", link: \"/app/studentregistration\", icon: <TypographyIcon /> },\r\n  {\r\n    id: 8,\r\n    label: \"Calender Events\",\r\n    link: \"/app/calenderevents\",\r\n    icon: <CalendarToday />,\r\n  },\r\n  // { id: 1, label: \"Add Age\", link: \"/app/addclass\", icon: <TableIcon /> },\r\n  {\r\n    id: 2,\r\n    label: \"Teacher\",\r\n    link: \"/app/teacher\",\r\n    icon: <FAQIcon />,\r\n  },\r\n \r\n  {\r\n    id: 3,\r\n    label: \"Student Details\",\r\n    link: \"/app/studentdetails\",\r\n    icon: <HotTub />,\r\n  },\r\n  {\r\n    id: 4,\r\n    label: \"Attendence\",\r\n    link: \"/app/attendence\",\r\n    icon: <SupportIcon />,\r\n  },\r\n  {\r\n    id: 6,\r\n    label: \"Area Of Work\",\r\n    link: \"/app/superactivity\",\r\n    icon: <SupervisedUserCircle />,\r\n  },\r\n  {\r\n    id: 5,\r\n    label: \"List of Activities\",\r\n    link: \"/app/activitytabel\",\r\n    icon: <AccessAlarmSharp />,\r\n  },\r\n  {\r\n    id: 6,\r\n    label: \"Exercise \",\r\n    link: \"/app/subactivity\",\r\n    icon: <LibraryIcon />,\r\n  },\r\n  {\r\n    id: 7,\r\n    label: \"Student Activity\",\r\n    link: \"/app/studentactivity\",\r\n    icon: <ArrowBackIcon />,\r\n  },\r\n  {\r\n    id: 8,\r\n    label: \"Weekly Plan\",\r\n    link: \"/app/activityexpected\",\r\n    icon: <HistorySharp />,\r\n  },\r\n  {\r\n    id: 9,\r\n    label: \"Create Events\",\r\n    link: \"/app/createevents\",\r\n    icon: <Create />,\r\n  },\r\n  { label: \"Special Observation\", link: \"/app/specialobservation\",\r\n  icon:<OpenInNew />},\r\n  //   {\r\n  //   id: 9,\r\n  //   label: \"Reports\",\r\n  //   link: \"/app/reports\",\r\n  //   icon: <TableIcon />,\r\n  // },\r\n  {\r\n    id: 10,\r\n    label: \"Reports\",\r\n    icon: <UIElementsIcon />,\r\n    children: [\r\n       { label: \"Attendence Reports\", link: \"/app/reports\" },\r\n      //  { label: \"Activity Reports\", link: \"/app/reportofactivities\" },\r\n      { label: \"Age Reports\", link: \"/app/agereports\" },\r\n     \r\n    ],\r\n  },\r\n  // { id: 5, type: \"divider\" },\r\n  // { id: 6, type: \"title\", label: \"HELP\" },\r\n  // { id: 7, label: \"Library\", link: \"https://flatlogic.com/templates\", icon: <LibraryIcon /> },\r\n  // { id: 8, label: \"Support\", link: \"https://flatlogic.com/forum\", icon: <SupportIcon /> },\r\n  // { id: 9, label: \"FAQ\", link: \"https://flatlogic.com/forum\", icon: <FAQIcon /> },\r\n  // { id: 10, type: \"divider\" },\r\n  // { id: 11, type: \"title\", label: \"PROJECTS\" },\r\n  // {\r\n  //   id: 12,\r\n  //   label: \"My recent\",\r\n  //   link: \"\",\r\n  //   icon: <Dot size=\"small\" color=\"warning\" />,\r\n  // },\r\n  // {\r\n  //   id: 13,\r\n  //   label: \"Starred\",\r\n  //   link: \"\",\r\n  //   icon: <Dot size=\"small\" color=\"primary\" />,\r\n  // },\r\n  // {\r\n  //   id: 14,\r\n  //   label: \"Background\",\r\n  //   link: \"\",\r\n  //   icon: <Dot size=\"small\" color=\"secondary\" />,\r\n  // },\r\n];\r\nconst teacher=[\r\n  {\r\n    id: 1,\r\n    label: \"Calender Events\",\r\n    link: \"/app/calenderevents\",\r\n    icon: <CalendarToday />,\r\n  },\r\n  // {\r\n  //   id: 2,\r\n  //   label: \"Create Events\",\r\n  //   link: \"/app/createevents\",\r\n  //   icon: <Create />,\r\n  // },\r\n \r\n  {\r\n    id: 2,\r\n    label: \"Student Details\",\r\n    link: \"/app/studentdetails\",\r\n    icon: <HotTub />,\r\n  },\r\n  {\r\n    id: 3,\r\n    label: \"Attendence\",\r\n    link: \"/app/attendence\",\r\n    icon: <SupportIcon />,\r\n  },\r\n  // {\r\n  //   id: 7,\r\n  //   label: \"Activity List\",\r\n  //   link: \"/app/activitytabel\",\r\n  //   icon: <AccessAlarmSharp />,\r\n  // },\r\n  // {\r\n  //   id: 8,\r\n  //   label: \"Sub Activity \",\r\n  //   link: \"/app/subactivity\",\r\n  //   icon: <LibraryIcon />,\r\n  // },\r\n  {\r\n    id: 4,\r\n    label: \"Student Activity\",\r\n    link: \"/app/studentactivity\",\r\n    icon: <ArrowBackIcon />,\r\n  },\r\n  {\r\n    id: 5,\r\n    label: \"Weekly Plan\",\r\n    link: \"/app/activityexpected\",\r\n    icon: <HistorySharp />,\r\n  },\r\n  {\r\n    id: 6,\r\n    label: \"Reports\",\r\n    icon: <UIElementsIcon />,\r\n    children: [\r\n      { label: \"Attendence Reports\", link: \"/app/reports\" },\r\n      { label: \"Activity Reports\", link: \"/app/reportofactivities\" },\r\n    ],\r\n  },\r\n\r\n]; \r\nconst student=[\r\n    \r\n  // { id: 1, label: \"Add Class\", link: \"/app/addclass\", icon: <TableIcon /> },\r\n  // {\r\n  //   id: 3,\r\n  //   label: \"Teacher\",\r\n  //   link: \"/app/teacher\",\r\n  //   icon: <UIElementsIcon />,\r\n  // },\r\n];\r\n\r\n\r\nconst userDetails = JSON.parse(localStorage.getItem(\"userDetail\"));\r\nif(userDetails.role === 'PARENT'){\r\n  structure = student;\r\n}else if(userDetails.role === 'TEACHER'){\r\n  structure = teacher;\r\n}\r\nfunction Sidebar({ location }) {\r\n  var classes = useStyles();\r\n  var theme = useTheme();\r\n\r\n  // global\r\n  var { isSidebarOpened } = useLayoutState();\r\n  var layoutDispatch = useLayoutDispatch();\r\n\r\n  // local\r\n  var [isPermanent, setPermanent] = useState(true);\r\n\r\n  useEffect(function() {\r\n    window.addEventListener(\"resize\", handleWindowWidthChange);\r\n    handleWindowWidthChange();\r\n    return function cleanup() {\r\n      window.removeEventListener(\"resize\", handleWindowWidthChange);\r\n    };\r\n  });\r\n\r\n  return (\r\n    <Drawer\r\n      variant={isPermanent ? \"permanent\" : \"temporary\"}\r\n      className={classNames(classes.drawer, {\r\n        [classes.drawerOpen]: isSidebarOpened,\r\n        [classes.drawerClose]: !isSidebarOpened,\r\n      })}\r\n      classes={{\r\n        paper: classNames({\r\n          [classes.drawerOpen]: isSidebarOpened,\r\n          [classes.drawerClose]: !isSidebarOpened,\r\n        }),\r\n      }}\r\n      open={isSidebarOpened}\r\n    >\r\n      <div className={classes.toolbar} />\r\n      <div className={classes.mobileBackButton}>\r\n        <IconButton onClick={() => toggleSidebar(layoutDispatch)}>\r\n          <ArrowBackIcon\r\n            classes={{\r\n              root: classNames(classes.headerIcon, classes.headerIconCollapse),\r\n            }}\r\n          />\r\n        </IconButton>\r\n      </div>\r\n      <List className={classes.sidebarList}>\r\n        {structure.map(link => (\r\n          <SidebarLink\r\n            key={link.id}\r\n            location={location}\r\n            isSidebarOpened={isSidebarOpened}\r\n            {...link}\r\n          />\r\n        ))}\r\n      </List>\r\n    </Drawer>\r\n  );\r\n  // ##################################################################\r\n  function handleWindowWidthChange() {\r\n    var windowWidth = window.innerWidth;\r\n    var breakpointWidth = theme.breakpoints.values.md;\r\n    var isSmallScreen = windowWidth < breakpointWidth;\r\n    if (isSmallScreen && isPermanent) {\r\n      setPermanent(false);\r\n    } else if (!isSmallScreen && !isPermanent) {\r\n      setPermanent(true);\r\n    }\r\n  }\r\n}\r\n\r\nexport default withRouter(Sidebar);\r\n","C:\\montessori\\montessori_ui\\src\\pages\\notifications\\Notifications.js",[],"C:\\montessori\\montessori_ui\\src\\components\\Header\\Header.js",["904","905","906","907","908"],"import React, { useState } from \"react\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  InputBase,\r\n  Menu,\r\n  MenuItem,\r\n  Fab,\r\n  Link\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Menu as MenuIcon,\r\n  Person as AccountIcon,\r\n  Search as SearchIcon,\r\n  Send as SendIcon,\r\n  ArrowBack as ArrowBackIcon,\r\n  BuildTwoTone,\r\n} from \"@material-ui/icons\";\r\nimport classNames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport {  Typography, Button } from \"../Wrappers\";\r\nimport Notification from \"../Notification/Notification\";\r\nimport UserAvatar from \"../UserAvatar/UserAvatar\";\r\n\r\n// context\r\nimport {\r\n  useLayoutState,\r\n  useLayoutDispatch,\r\n  toggleSidebar,\r\n} from \"../../context/LayoutContext\";\r\nimport { useUserDispatch, signOut } from \"../../context/UserContext\";\r\n\r\nconst messages = [\r\n  {\r\n    id: 0,\r\n    variant: \"warning\",\r\n    name: \"Jane Hew\",\r\n    message: \"Hey! How is it going?\",\r\n    time: \"9:32\",\r\n  },\r\n  {\r\n    id: 1,\r\n    variant: \"success\",\r\n    name: \"Lloyd Brown\",\r\n    message: \"Check out my new Dashboard\",\r\n    time: \"9:18\",\r\n  },\r\n  {\r\n    id: 2,\r\n    variant: \"primary\",\r\n    name: \"Mark Winstein\",\r\n    message: \"I want rearrange the appointment\",\r\n    time: \"9:15\",\r\n  },\r\n  {\r\n    id: 3,\r\n    variant: \"secondary\",\r\n    name: \"Liana Dutti\",\r\n    message: \"Good news from sale department\",\r\n    time: \"9:09\",\r\n  },\r\n];\r\n\r\nconst notifications = [\r\n  { id: 0, color: \"warning\", message: \"Check out this awesome ticket\" },\r\n  {\r\n    id: 1,\r\n    color: \"success\",\r\n    type: \"info\",\r\n    message: \"What is the best way to get ...\",\r\n  },\r\n  {\r\n    id: 2,\r\n    color: \"secondary\",\r\n    type: \"notification\",\r\n    message: \"This is just a simple notification\",\r\n  },\r\n  {\r\n    id: 3,\r\n    color: \"primary\",\r\n    type: \"e-commerce\",\r\n    message: \"12 new orders has arrived today\",\r\n  },\r\n];\r\n\r\nexport default function Header(props) {\r\n  var classes = useStyles();\r\n\r\n  // global\r\n  var layoutState = useLayoutState();\r\n  var layoutDispatch = useLayoutDispatch();\r\n  var userDispatch = useUserDispatch();\r\n\r\n  // local\r\n  var [mailMenu, setMailMenu] = useState(null);\r\n  var [isMailsUnread, setIsMailsUnread] = useState(true);\r\n  var [notificationsMenu, setNotificationsMenu] = useState(null);\r\n  var [isNotificationsUnread, setIsNotificationsUnread] = useState(true);\r\n  var [profileMenu, setProfileMenu] = useState(null);\r\n  var [isSearchOpen, setSearchOpen] = useState(false);\r\n  const userDetails = JSON.parse(localStorage.getItem(\"userDetail\"));\r\n  \r\n\r\n  // style={{ backgroundColor: 'rgb(255, 92, 147)', color: 'white' }}\r\n  return (\r\n    <AppBar position=\"fixed\" className={classes.appBar} style={{backgroundColor : '#30875b'}}>\r\n      <Toolbar className={classes.toolbar} >\r\n        <IconButton\r\n          color=\"inherit\"\r\n          onClick={() => toggleSidebar(layoutDispatch)}\r\n          className={classNames(\r\n            classes.headerMenuButtonSandwich,\r\n            classes.headerMenuButtonCollapse,\r\n          )}\r\n        >\r\n          {layoutState.isSidebarOpened ? (\r\n            <ArrowBackIcon\r\n              classes={{\r\n                root: classNames(\r\n                  classes.headerIcon,\r\n                  classes.headerIconCollapse,\r\n                ),\r\n              }}\r\n            />\r\n          ) : (\r\n            <MenuIcon\r\n              classes={{\r\n                root: classNames(\r\n                  classes.headerIcon,\r\n                  classes.headerIconCollapse,\r\n                ),\r\n              }}\r\n            />\r\n          )}\r\n        </IconButton>\r\n        <Typography variant=\"h6\" weight=\"medium\" className={classes.logotype} style={{ fontSize:\"calc(2.142rem)\", fontWeight:\"600\"}}>\r\n        Montessori \r\n        </Typography>\r\n       \r\n        <div className={classes.grow} />\r\n\r\n\r\n      \r\n\r\n        \r\n        {/* <Button component={Link} href=\"https://flatlogic.com/templates/react-material-admin-full\" variant={\"outlined\"} color={\"secondary\"} className={classes.purchaseBtn}>Unlock full version</Button> */}\r\n        <div\r\n          className={classNames(classes.search, {\r\n            [classes.searchFocused]: isSearchOpen,\r\n          })}\r\n        >\r\n           \r\n          <div\r\n            className={classNames(classes.searchIcon, {\r\n              [classes.searchIconOpened]: isSearchOpen,\r\n            })}\r\n            onClick={() => setSearchOpen(!isSearchOpen)}\r\n          >\r\n            <SearchIcon classes={{ root: classes.headerIcon }} />\r\n          </div>\r\n\r\n          \r\n\r\n          <InputBase\r\n            placeholder=\"Search…\"\r\n            classes={{\r\n              root: classes.inputRoot,\r\n              input: classes.inputInput,\r\n            }}\r\n          />\r\n        </div>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          aria-haspopup=\"true\"\r\n          aria-controls=\"mail-menu\"\r\n          onClick={e => {\r\n            setNotificationsMenu(e.currentTarget);\r\n            setIsNotificationsUnread(false);\r\n          }}\r\n          className={classes.headerMenuButton}\r\n        >\r\n         \r\n        </IconButton>\r\n        <IconButton\r\n          color=\"inherit\"\r\n          aria-haspopup=\"true\"\r\n          aria-controls=\"mail-menu\"\r\n          onClick={e => {\r\n            setMailMenu(e.currentTarget);\r\n            setIsMailsUnread(false);\r\n          }}\r\n          className={classes.headerMenuButton}\r\n        >\r\n         \r\n        </IconButton>\r\n        <IconButton\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n          className={classes.headerMenuButton}\r\n          aria-controls=\"profile-menu\"\r\n          onClick={e => setProfileMenu(e.currentTarget)}\r\n        >\r\n          <AccountIcon classes={{ root: classes.headerIcon }} />\r\n        </IconButton>\r\n        <Menu\r\n          id=\"mail-menu\"\r\n          open={Boolean(mailMenu)}\r\n          anchorEl={mailMenu}\r\n          onClose={() => setMailMenu(null)}\r\n          MenuListProps={{ className: classes.headerMenuList }}\r\n          className={classes.headerMenu}\r\n          classes={{ paper: classes.profileMenu }}\r\n          disableAutoFocusItem\r\n        >\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography variant=\"h4\" weight=\"medium\">\r\n              New Messages\r\n            </Typography>\r\n            <Typography\r\n              className={classes.profileMenuLink}\r\n              component=\"a\"\r\n              color=\"secondary\"\r\n            >\r\n              {messages.length} New Messages\r\n            </Typography>\r\n          </div>\r\n          {messages.map(message => (\r\n            <MenuItem key={message.id} className={classes.messageNotification}>\r\n              <div className={classes.messageNotificationSide}>\r\n                <UserAvatar color={message.variant} name={message.name} />\r\n                <Typography size=\"sm\" color=\"text\" colorBrightness=\"secondary\">\r\n                  {message.time}\r\n                </Typography>\r\n              </div>\r\n              <div\r\n                className={classNames(\r\n                  classes.messageNotificationSide,\r\n                  classes.messageNotificationBodySide,\r\n                )}\r\n              >\r\n                <Typography weight=\"medium\" gutterBottom>\r\n                  {message.name}\r\n                </Typography>\r\n                <Typography color=\"text\" colorBrightness=\"secondary\">\r\n                  {message.message}\r\n                </Typography>\r\n              </div>\r\n            </MenuItem>\r\n          ))}\r\n          <Fab\r\n            variant=\"extended\"\r\n            color=\"primary\"\r\n            aria-label=\"Add\"\r\n            className={classes.sendMessageButton}\r\n          >\r\n            Send New Message\r\n            <SendIcon className={classes.sendButtonIcon} />\r\n          </Fab>\r\n        </Menu>\r\n        <Menu\r\n          id=\"notifications-menu\"\r\n          open={Boolean(notificationsMenu)}\r\n          anchorEl={notificationsMenu}\r\n          onClose={() => setNotificationsMenu(null)}\r\n          className={classes.headerMenu}\r\n          disableAutoFocusItem\r\n        >\r\n          {notifications.map(notification => (\r\n            <MenuItem\r\n              key={notification.id}\r\n              onClick={() => setNotificationsMenu(null)}\r\n              className={classes.headerMenuItem}\r\n            >\r\n              <Notification {...notification} typographyVariant=\"inherit\" />\r\n            </MenuItem>\r\n          ))}\r\n        </Menu>\r\n        <Menu\r\n          id=\"profile-menu\"\r\n          open={Boolean(profileMenu)}\r\n          anchorEl={profileMenu}\r\n          onClose={() => setProfileMenu(null)}\r\n          className={classes.headerMenu}\r\n          classes={{ paper: classes.profileMenu }}\r\n          disableAutoFocusItem\r\n        >\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography variant=\"h4\" weight=\"medium\">\r\n            {userDetails.name}\r\n            </Typography>\r\n            <Typography\r\n              className={classes.profileMenuLink}\r\n              component=\"a\"\r\n              color=\"primary\"\r\n              href=\"https://flatlogic.com\"\r\n            >\r\n                {userDetails.email}\r\n            </Typography>\r\n          </div>\r\n          {/* <MenuItem\r\n            className={classNames(\r\n              classes.profileMenuItem,\r\n              classes.headerMenuItem,\r\n            )}\r\n          >\r\n            <AccountIcon className={classes.profileMenuIcon} /> Profile\r\n          </MenuItem>\r\n          <MenuItem\r\n            className={classNames(\r\n              classes.profileMenuItem,\r\n              classes.headerMenuItem,\r\n            )}\r\n          >\r\n            <AccountIcon className={classes.profileMenuIcon} /> Tasks\r\n          </MenuItem>\r\n          <MenuItem\r\n            className={classNames(\r\n              classes.profileMenuItem,\r\n              classes.headerMenuItem,\r\n            )}\r\n          >\r\n            <AccountIcon className={classes.profileMenuIcon} /> Messages\r\n          </MenuItem> */}\r\n          <div className={classes.profileMenuUser}>\r\n            <Typography\r\n              className={classes.profileMenuLink}\r\n              color=\"primary\"\r\n              onClick={() => signOut(userDispatch, props.history)}\r\n            >\r\n              Sign Out\r\n            </Typography>\r\n          </div>\r\n        </Menu>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n","C:\\montessori\\montessori_ui\\src\\pages\\dashboard\\mock.js",[],"C:\\montessori\\montessori_ui\\src\\components\\Sidebar\\components\\Dot.js",[],"C:\\montessori\\montessori_ui\\src\\pages\\dashboard\\styles.js",[],"C:\\montessori\\montessori_ui\\src\\pages\\dashboard\\components\\BigStat\\BigStat.js",[],"C:\\montessori\\montessori_ui\\src\\pages\\dashboard\\Locality\\Service\\addClassService.js",[],"C:\\montessori\\montessori_ui\\src\\pages\\dashboard\\Locality\\Service\\studentService.js",[],"C:\\montessori\\montessori_ui\\src\\components\\Widget\\Widget.js",["909","910","911","912","913"],"import React, { useState } from \"react\";\r\nimport {\r\n  Paper,\r\n  IconButton,\r\n  Menu,\r\n  MenuItem,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { MoreVert as MoreIcon } from \"@material-ui/icons\";\r\nimport classnames from \"classnames\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\nexport default function Widget({\r\n  children,\r\n  title,\r\n  noBodyPadding,\r\n  bodyClass,\r\n  disableWidgetMenu,\r\n  header,\r\n  noHeaderPadding,\r\n  headerClass,\r\n  style,\r\n  noWidgetShadow,\r\n  ...props\r\n}) {\r\n  var classes = useStyles();\r\n\r\n  // local\r\n  var [moreButtonRef, setMoreButtonRef] = useState(null);\r\n  var [isMoreMenuOpen, setMoreMenuOpen] = useState(false);\r\n\r\n  return (\r\n    <div className={classes.widgetWrapper} style={style && {...style}}>\r\n      <Paper className={classes.paper} classes={{ root: classnames(classes.widgetRoot, {\r\n        [classes.noWidgetShadow]: noWidgetShadow\r\n        }) }}>\r\n        <div className={classnames(classes.widgetHeader, {\r\n          [classes.noPadding]: noHeaderPadding,\r\n          [headerClass]: headerClass\r\n        })}>\r\n          {header ? (\r\n            header\r\n          ) : (\r\n            <React.Fragment>\r\n              <Typography variant=\"h5\" color=\"textSecondary\" noWrap>\r\n                {title}\r\n              </Typography>\r\n              {!disableWidgetMenu && (\r\n                <IconButton\r\n                  color=\"primary\"\r\n                  classes={{ root: classes.moreButton }}\r\n                  aria-owns=\"widget-menu\"\r\n                  aria-haspopup=\"true\"\r\n                  onClick={() => setMoreMenuOpen(true)}\r\n                  buttonRef={setMoreButtonRef}\r\n                >\r\n                 \r\n                </IconButton>\r\n              )}\r\n            </React.Fragment>\r\n          )}\r\n        </div>\r\n        <div\r\n          className={classnames(classes.widgetBody, {\r\n            [classes.noPadding]: noBodyPadding,\r\n            [bodyClass]: bodyClass,\r\n          })}\r\n        >\r\n          {children}\r\n        </div>\r\n      </Paper>\r\n      \r\n      \r\n      \r\n    </div>\r\n  );\r\n}\r\n","C:\\montessori\\montessori_ui\\src\\pages\\dashboard\\Locality\\Service\\httpService.js",[],"C:\\montessori\\montessori_ui\\src\\components\\PageTitle\\styles.js",[],"C:\\montessori\\montessori_ui\\src\\pages\\icons\\styles.js",[],"C:\\montessori\\montessori_ui\\src\\pages\\maps\\styles.js",[],"C:\\montessori\\montessori_ui\\src\\pages\\charts\\components\\ApexHeatmap.js",[],"C:\\montessori\\montessori_ui\\src\\pages\\charts\\components\\ApexLineChart.js",[],"C:\\montessori\\montessori_ui\\src\\components\\Header\\styles.js",[],"C:\\montessori\\montessori_ui\\src\\pages\\notifications\\styles.js",[],"C:\\montessori\\montessori_ui\\src\\components\\Sidebar\\styles.js",[],"C:\\montessori\\montessori_ui\\src\\components\\Notification\\Notification.js",[],"C:\\montessori\\montessori_ui\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js",[],"C:\\montessori\\montessori_ui\\src\\pages\\typography\\styles.js",[],"C:\\montessori\\montessori_ui\\src\\pages\\dashboard\\components\\BigStat\\styles.js",[],"C:\\montessori\\montessori_ui\\src\\components\\Widget\\styles.js",[],"C:\\montessori\\montessori_ui\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js",[],"C:\\montessori\\montessori_ui\\src\\components\\Notification\\styles.js",[],"C:\\montessori\\montessori_ui\\src\\pages\\dashboard\\Locality\\Service\\teacherService.js",[],"C:\\montessori\\montessori_ui\\src\\pages\\dashboard\\Locality\\Service\\calelnderEventsService.js",[],"C:\\montessori\\montessori_ui\\src\\pages\\dashboard\\Locality\\Service\\activityTabelService.js",[],"C:\\montessori\\montessori_ui\\src\\pages\\dashboard\\Locality\\Service\\subActivityService.js",[],"C:\\montessori\\montessori_ui\\src\\pages\\dashboard\\Locality\\Service\\attendenceService.js",[],"C:\\montessori\\montessori_ui\\src\\pages\\dashboard\\Locality\\Service\\schooleRegistration.js",[],"C:\\montessori\\montessori_ui\\src\\pages\\dashboard\\Dashboard.js",["914","915","916","917","918","919","920","921","922","923","924","925","926","927","928","929","930","931","932","933","934","935","936","937","938","939","940","941"],"import React, { useState } from \"react\";\r\nimport {\r\n  LinearProgress,\r\n  OutlinedInput,\r\n} from \"@material-ui/core\";\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport {\r\n  Grid, Button,  Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, TextField, FormControl, InputLabel, Select, MenuItem,\r\n  TableRow, Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableCell\r\n} from \"@material-ui/core\";\r\nimport CityServices from \"../../services/CityServices\";\r\nimport { useContext, useEffect } from 'react';\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport {\r\n  ResponsiveContainer,\r\n  ComposedChart,\r\n  AreaChart,\r\n  LineChart,\r\n  Line,\r\n  Area,\r\n  PieChart,\r\n  Pie,\r\n  Cell,\r\n  YAxis,\r\n  XAxis,\r\n} from \"recharts\";\r\n\r\n// styles\r\nimport useStyles from \"./styles\";\r\n\r\n// components\r\nimport mock from \"./mock\";\r\nimport Widget from \"../../components/Widget\";\r\nimport PageTitle from \"../../components/PageTitle\";\r\nimport { Typography } from \"../../components/Wrappers\";\r\nimport Dot from \"../../components/Sidebar/components/Dot\";\r\n\r\nimport BigStat from \"./components/BigStat/BigStat\";\r\nimport { withStyles } from '@material-ui/core/styles';\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: \"#536dfe\",\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    '&:nth-of-type(odd)': {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\n\r\nconst mainChartData = getMainChartData();\r\n\r\n\r\nexport default function Dashboard(props) {\r\n   const tableHeaders = ['Order ID','Sub Total', 'Discount', 'Status', 'View' ];\r\n  var classes = useStyles();\r\n  var theme = useTheme();\r\n\r\n  // local\r\n  var [mainChartState, setMainChartState] = useState(\"monthly\");\r\n  const [vendorOrdersList, setVendorOrdersList] = useState({totalPendingOrder:{count:'' }, todayOrder:[]});\r\n  const[cartList, setCartList]=useState([]);\r\n  const [open, setOpen] = React.useState(false);\r\n  useEffect(() => {\r\n    getvendorordersList();\r\n    return () => {\r\n      setVendorOrdersList({})\r\n    };\r\n  }, []);\r\n\r\n  const getvendorordersList = () => {\r\n    const userDetails = JSON.parse(localStorage.getItem(\"userDetail\"));\r\n    CityServices.createVendorOrdersById({\"vendorId\":userDetails._id}).then((res) => {\r\nconsole.log(res);\r\n      setVendorOrdersList(res);\r\n\r\n    }).catch((err) => {\r\n      // setError(err.message);\r\n    });\r\n  }\r\n  const handleOpen = (cartList) => {\r\n\r\n    setCartList(cartList.cart);\r\n    setOpen(true);\r\n \r\n  }\r\n  const handleClose = () => setOpen(false);\r\n  return (\r\n    <>\r\n      <PageTitle title=\"Dashboard\"  />\r\n      <Grid container spacing={4}>\r\n        <Grid item lg={4} md={4} sm={6} xs={12}>\r\n          <Widget\r\n            title=\"Total Order\"\r\n            upperTitle\r\n            bodyClass={classes.fullHeightBody}\r\n            className={classes.card}\r\n          >\r\n            <div className={classes.visitsNumberContainer}>\r\n              <Grid container item alignItems={\"center\"}>\r\n                <Grid item xs={6}>\r\n              <Typography size=\"xl\" weight=\"medium\" noWrap>\r\n              {vendorOrdersList.totalOrder}\r\n              </Typography>\r\n                </Grid>\r\n               \r\n              </Grid>\r\n            </div>\r\n          \r\n          </Widget>\r\n        </Grid>\r\n        <Grid item lg={4} md={4} sm={6} xs={12}>\r\n          <Widget\r\n            title=\"Pending Order\"\r\n            upperTitle\r\n            className={classes.card}\r\n            bodyClass={classes.fullHeightBody}\r\n          >\r\n            <div className={classes.visitsNumberContainer}>\r\n              <Grid container item alignItems={\"center\"}>\r\n                <Grid item xs={6}>\r\n              <Typography size=\"xl\" weight=\"medium\" noWrap>\r\n              {vendorOrdersList.totalPendingOrder.count}\r\n              </Typography>\r\n                </Grid>\r\n               \r\n              </Grid>\r\n            </div>\r\n           \r\n          </Widget>\r\n        </Grid>\r\n        <Grid item lg={4} md={4} sm={6} xs={12}>\r\n          <Widget\r\n            title=\"Processing Order\"\r\n            upperTitle\r\n            className={classes.card}\r\n            bodyClass={classes.fullHeightBody}\r\n          >\r\n            <div className={classes.visitsNumberContainer}>\r\n              <Grid container item alignItems={\"center\"}>\r\n                <Grid item xs={6}>\r\n              <Typography size=\"xl\" weight=\"medium\" noWrap>\r\n              {vendorOrdersList.totalProcessingOrder}\r\n              </Typography>\r\n                </Grid>\r\n               \r\n              </Grid>\r\n            </div>\r\n          </Widget>\r\n        </Grid>\r\n        <Grid item lg={4} md={4} sm={6} xs={12}>\r\n          <Widget title=\"Deliverd Order\" upperTitle className={classes.card}>\r\n          <div className={classes.visitsNumberContainer}>\r\n              <Grid container item alignItems={\"center\"}>\r\n                <Grid item xs={6}>\r\n              <Typography size=\"xl\" weight=\"medium\" noWrap>\r\n              {vendorOrdersList.totalDeliveredOrder}\r\n              </Typography>\r\n                </Grid>\r\n               \r\n              </Grid>\r\n            </div>\r\n          </Widget>\r\n        </Grid>\r\n        <Grid item lg={4} md={4} sm={6} xs={12}>\r\n          <Widget\r\n            title=\"Totel Amount\"\r\n            upperTitle\r\n            className={classes.card}\r\n            bodyClass={classes.fullHeightBody}\r\n          >\r\n            <div className={classes.visitsNumberContainer}>\r\n              <Grid container item alignItems={\"center\"}>\r\n                <Grid item xs={6}>\r\n              <Typography size=\"xl\" weight=\"medium\" noWrap>\r\n              {vendorOrdersList.totalAmount}\r\n              </Typography>\r\n                </Grid>\r\n               \r\n              </Grid>\r\n            </div>\r\n          </Widget>\r\n        </Grid>\r\n        <Grid item lg={4} md={4} sm={6} xs={12}>\r\n          <Widget\r\n            title=\"Total Amount Of This Month\"\r\n            upperTitle\r\n            className={classes.card}\r\n            bodyClass={classes.fullHeightBody}\r\n          >\r\n            <div className={classes.visitsNumberContainer}>\r\n              <Grid container item alignItems={\"center\"}>\r\n                <Grid item xs={6}>\r\n              <Typography size=\"xl\" weight=\"medium\" noWrap>\r\n              {vendorOrdersList.totalAmountOfThisMonth}\r\n              </Typography>\r\n                </Grid>\r\n               \r\n              </Grid>\r\n            </div>\r\n          </Widget>\r\n        </Grid>\r\n        <Grid item lg={4} md={4} sm={6} xs={12}>\r\n          <Widget\r\n            title=\"Rejected Orders\"\r\n            upperTitle\r\n            className={classes.card}\r\n            bodyClass={classes.fullHeightBody}\r\n          >\r\n            <div className={classes.visitsNumberContainer}>\r\n              <Grid container item alignItems={\"center\"}>\r\n                <Grid item xs={6}>\r\n              <Typography size=\"xl\" weight=\"medium\" noWrap>\r\n              {vendorOrdersList.rejectedOrder}\r\n              </Typography>\r\n                </Grid>\r\n               \r\n              </Grid>\r\n            </div>\r\n          </Widget>\r\n        </Grid>\r\n        <Grid item lg={4} md={4} sm={6} xs={12}>\r\n          <Widget\r\n            title=\"Complete Orders\"\r\n            upperTitle\r\n            className={classes.card}\r\n            bodyClass={classes.fullHeightBody}\r\n          >\r\n            <div className={classes.visitsNumberContainer}>\r\n              <Grid container item alignItems={\"center\"}>\r\n                <Grid item xs={6}>\r\n              <Typography size=\"xl\" weight=\"medium\" noWrap>\r\n              {vendorOrdersList.completOrder}\r\n              </Typography>\r\n                </Grid>\r\n               \r\n              </Grid>\r\n            </div>\r\n          </Widget>\r\n        </Grid>\r\n        <Grid item lg={4} md={4} sm={6} xs={12}>\r\n          <Widget\r\n            title=\"Accepted Order\"\r\n            upperTitle\r\n            className={classes.card}\r\n            bodyClass={classes.fullHeightBody}\r\n          >\r\n            <div className={classes.visitsNumberContainer}>\r\n              <Grid container item alignItems={\"center\"}>\r\n                <Grid item xs={6}>\r\n              <Typography size=\"xl\" weight=\"medium\" noWrap>\r\n              {vendorOrdersList.acceptedOrder}\r\n              </Typography>\r\n                </Grid>\r\n               \r\n              </Grid>\r\n            </div>\r\n          </Widget>\r\n        </Grid>\r\n        \r\n        <Grid item xs={12}>\r\n       \r\n            \r\n        \r\n        </Grid>\r\n      \r\n     \r\n      </Grid>\r\n\r\n\r\n\r\n      <Grid container spacing={4}>\r\n\r\n\r\n\r\n        <Grid item xs={12}>\r\n          \r\n\r\n\r\n            <Table className=\"mb-0\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  {tableHeaders.map(key => (\r\n                    <StyledTableCell key={key}>{key}</StyledTableCell>\r\n                  ))}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                            {vendorOrdersList.todayOrder.map((todayOrder) => (\r\n                                <TableRow >\r\n                                  <TableCell className=\"pl-3 fw-normal\" >\r\n                                        {todayOrder.orderInvoice}\r\n                                    </TableCell>\r\n                                    <TableCell className=\"pl-3 fw-normal\" >\r\n                                        {todayOrder.subTotal}\r\n                                    </TableCell>\r\n                                    <TableCell className=\"pl-3 fw-normal\" >\r\n                                        {todayOrder.discount}\r\n                                    </TableCell>\r\n                                    \r\n                                    <TableCell className=\"pl-3 fw-normal\" >\r\n                                        {todayOrder.status}\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                            <VisibilityIcon style={{ cursor: 'pointer' }}  onClick={()=>handleOpen(todayOrder)}>\r\n\r\n                                            </VisibilityIcon >\r\n                                        </TableCell>\r\n                                                                    \r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n            </Table>\r\n         \r\n        </Grid>\r\n      </Grid>\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <DialogTitle  >Orders Detailes</DialogTitle>\r\n        <DialogContent>\r\n        <Table className=\"mb-0\">\r\n        <TableHead>\r\n                <TableRow>\r\n                <StyledTableCell >Order Name</StyledTableCell>\r\n                <StyledTableCell >Quantity</StyledTableCell>\r\n                <StyledTableCell >Original Price</StyledTableCell>\r\n                <StyledTableCell >Final Price</StyledTableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n             \r\n                            {cartList.map((vendorOrderDetails) => (\r\n                                <TableRow >\r\n                                    <TableCell className=\"pl-3 fw-normal\" >\r\n                                        {vendorOrderDetails.title}\r\n                                    </TableCell>\r\n                                    <TableCell className=\"pl-3 fw-normal\" >\r\n                                        {vendorOrderDetails.quantity}\r\n                                    </TableCell>\r\n                                    <TableCell className=\"pl-3 fw-normal\" >\r\n                                        {vendorOrderDetails.originalPrice}\r\n                                    </TableCell>\r\n                                    <TableCell className=\"pl-3 fw-normal\" >\r\n                                        {vendorOrderDetails.price}\r\n                                    </TableCell>\r\n\r\n\r\n                                  \r\n                                   \r\n                                </TableRow>\r\n                            ))}\r\n                        </TableBody>\r\n            </Table>\r\n\r\n\r\n\r\n\r\n        </DialogContent>\r\n\r\n        <DialogActions>\r\n          <Button onClick={handleClose} >Cancel</Button>\r\n          \r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n\r\n// #######################################################################\r\nfunction getRandomData(length, min, max, multiplier = 10, maxDiff = 10) {\r\n  var array = new Array(length).fill();\r\n  let lastValue;\r\n\r\n  return array.map((item, index) => {\r\n    let randomValue = Math.floor(Math.random() * multiplier + 1);\r\n\r\n    while (\r\n      randomValue <= min ||\r\n      randomValue >= max ||\r\n      (lastValue && randomValue - lastValue > maxDiff)\r\n    ) {\r\n      randomValue = Math.floor(Math.random() * multiplier + 1);\r\n    }\r\n\r\n    lastValue = randomValue;\r\n\r\n    return { value: randomValue };\r\n  });\r\n}\r\n\r\nfunction getMainChartData() {\r\n  var resultArray = [];\r\n  var tablet = getRandomData(31, 3500, 6500, 7500, 1000);\r\n  var desktop = getRandomData(31, 1500, 7500, 7500, 1500);\r\n  var mobile = getRandomData(31, 1500, 7500, 7500, 1500);\r\n\r\n  for (let i = 0; i < tablet.length; i++) {\r\n    resultArray.push({\r\n      tablet: tablet[i].value,\r\n      desktop: desktop[i].value,\r\n      mobile: mobile[i].value,\r\n    });\r\n  }\r\n\r\n  return resultArray;\r\n}\r\n",["942","943"],"C:\\montessori\\montessori_ui\\src\\services\\CityServices.js",[],"C:\\montessori\\montessori_ui\\src\\pages\\dashboard\\SuperActivity.js",["944","945","946","947","948","949","950","951","952","953","954","955","956","957","958","959"],"import React, { useState } from \"react\";\r\nimport {\r\n    Button, Dialog, DialogActions, DialogContent, DialogTitle, FormControl, InputLabel, MenuItem,\r\n    TableRow, Table,\r\n    TableHead,\r\n    TableBody,\r\n    TableCell\r\n} from \"@material-ui/core\";\r\nimport SuperActivityService from \"./Locality/Service/superActivityService\";\r\nimport ActivityTabelService from \"./Locality/Service/activityTabelService\";\r\nimport * as Yup from 'yup';\r\nimport { Grid, Select, TextField } from \"@material-ui/core\";\r\nimport { useFormik } from 'formik';\r\nimport {  useEffect } from 'react';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport AddClassService from \"./Locality/Service/addClassService\";\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        backgroundColor: \"#30875b\",\r\n        color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n        fontSize: 14,\r\n    },\r\n}))(TableCell);\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: 200,\r\n    },\r\n}));\r\nexport default function Activity() {\r\n    const tableHeaders = [  'Area Of Work','Edit', 'Delete'];\r\n    const classes = useStyles();\r\n    const [superActivityList, setSuperActivityList] = useState([]);\r\n    const [classNameList, setClassNameList] = useState([]);\r\n    const [addClassList, setAddClassList] = useState([]);\r\n    const [age, setAge] = React.useState('');\r\n    var [error, setError] = useState(null);\r\n    const [tabelIdList, setTabelIdList] = useState([]);\r\n    const [open, setOpen] = React.useState(false);\r\n    \r\n    const [tabel, setTabel] = useState({\r\n        // classId: '',\r\n        superActivityName: '',\r\n    });\r\n    const validationSchema = Yup.object().shape({\r\n        // classId: Yup.string().required('Class Name is required'),\r\n        superActivityName: Yup.string().required('Super Activity Name is required'),\r\n    });\r\n    useEffect(() => {\r\n        getSuperActivityList();\r\n        // getAddClassList();\r\n        return () => {\r\n            setTabelIdList([]);\r\n            setSuperActivityList([]);\r\n            // setAddClassList([]);\r\n            // setClassNameList([]);\r\n        }\r\n    }, []);\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const onclick = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const handleChange = (event) => {\r\n        setAge(event.target.value);\r\n    };\r\n    const onSubmit = data => {\r\n        console.log(JSON.stringify(data, null, 2));\r\n    };\r\n    const getSuperActivityList = () => {\r\n        const userDetails = JSON.parse(localStorage.getItem(\"userDetail\"));\r\n        SuperActivityService.getAllSuperActivity(userDetails.schoolId).then((res) => {\r\n            setSuperActivityList(res);\r\n        }).catch((err) => {\r\n            // setError(err.message);\r\n        });\r\n    }\r\n    // const getAddClassList = () => {\r\n    //     const userDetails = JSON.parse(localStorage.getItem(\"userDetail\"));\r\n    //     AddClassService.getAllAddClass(userDetails.schoolId).then((res) => {\r\n    //         setAddClassList(res);\r\n    //     }).catch((err) => {\r\n            \r\n    //     });\r\n    // }\r\n    // const getClassNameList = (event) => {\r\n    //     AddClassService.getAddClassNameById({ className: event.target.value }).then((res) => {\r\n          \r\n    //         setClassNameList(res);\r\n\r\n    //     }).catch((err) => {\r\n    //         setError(err.message);\r\n    //     });\r\n    // }\r\n    const editActivityTabel = (tabel) => {\r\n        // tabel.classId = activity.classId ? activity.classId._id :'';\r\n        setTabel(tabel)\r\n        handleOpen()\r\n    }\r\n    const deleteActivityTabel = (tabeldelete) => {\r\n        if (tabeldelete) {\r\n            ActivityTabelService.deleteActivityTabel(tabeldelete).then((res) => {\r\n                getActivityTabelList();\r\n            }).catch((err) => {\r\n            });\r\n        }\r\n    };\r\n    const getActivityTabelList = () => {\r\n        const userDetails = JSON.parse(localStorage.getItem(\"userDetail\"));\r\n        ActivityTabelService.getAllActivityTabel(userDetails.schoolId).then((res) => {\r\n            setSuperActivityList(res);\r\n        }).catch((err) => {\r\n           \r\n        });\r\n    }\r\n\r\n    const formik = useFormik({\r\n        initialValues: tabel,\r\n        enableReinitialize: true,\r\n        validationSchema: validationSchema,\r\n        onSubmit: (values, { resetForm }) => {\r\n            const userDetails = JSON.parse(localStorage.getItem(\"userDetail\"));\r\n            values.schooleId = userDetails.schoolId;\r\n            if (tabel._id) {\r\n                SuperActivityService.upadeSuperActivity(values).then((res) => {\r\n                    handleClose();\r\n                    getSuperActivityList();\r\n                    resetForm()\r\n                    alert(\"Super Activity Updated Successfully.\");\r\n                }).catch((err) => {\r\n                });\r\n            }\r\n            else {\r\n                SuperActivityService.creteSuperActivity(values).then((res) => {\r\n                    getSuperActivityList();\r\n                    resetForm();\r\n                    handleClose();\r\n                    alert(\"Super Activity Added Successfully.\");\r\n                    // props.history.push('/app/vendor');\r\n                })\r\n                    .catch((err) => {\r\n                        \r\n                        alert(err.response.data.message)\r\n                    })\r\n            }\r\n\r\n        },\r\n    });\r\n    return (\r\n        <>\r\n            <PageTitle title=\"Area Of Work\" button={<Button\r\n                variant=\"contained\" onClick={handleOpen}\r\n                size=\"medium\"\r\n                color=\"secondary\" style={{ backgroundColor: '#30875b' }}> Add Super Activity\r\n            </Button>} />\r\n            <Grid container spacing={4}>\r\n                <Grid item xs={12}>\r\n                    <Widget title=\"\" upperTitle noBodyPadding bodyClass={classes.tableOverflow}>\r\n                        <Table className=\"mb-0\">\r\n                            <TableHead >\r\n                                <TableRow>\r\n                                    {tableHeaders.map(key => (\r\n                                        <StyledTableCell key={key}>{key}</StyledTableCell>\r\n                                    ))}\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {superActivityList.map((tabel) => (\r\n                                    <TableRow key={tabel._id}>\r\n                                       \r\n{/* <TableCell className=\"pl-3 fw-normal\" >{activity.classId ? activity.classId.className : ''}</TableCell> */}\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{tabel.superActivityName}</TableCell>\r\n                                        <TableCell>\r\n                                            <EditIcon style={{ cursor: 'pointer' }} onClick={() => editActivityTabel(tabel)} >\r\n                                            </EditIcon >\r\n                                        </TableCell>\r\n                                        <TableCell>\r\n                                            <DeleteIcon style={{ cursor: 'pointer' }} onClick={() => deleteActivityTabel(tabel)} />\r\n                                        </TableCell>\r\n        \r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </Widget>\r\n                </Grid>\r\n            </Grid>\r\n            <Dialog open={open} onClose={handleClose}>\r\n                <DialogTitle>Add Super Activity</DialogTitle>\r\n                <form onSubmit={formik.handleSubmit} >\r\n                    <DialogContent style= {{ width: 308 }}>\r\n                        <TextField\r\n                            InputProps={{ style: { width: 258 } }}\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"superActivityName\"\r\n                            name=\"superActivityName\"\r\n                            label=\"Area Of Work\"\r\n                            type=\"text\"\r\n                            variant=\"standard\"\r\n                            value={formik.values.superActivityName}\r\n                            onChange={formik.handleChange}\r\n                            error={formik.touched.superActivityName && Boolean(formik.errors.superActivityName)}\r\n                            helperText={formik.touched.superActivityName && formik.errors.superActivityName}\r\n                        />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={handleClose}>Cancel</Button>\r\n                        <Button type=\"submit\">Add</Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n","C:\\montessori\\montessori_ui\\src\\pages\\dashboard\\Locality\\Service\\superActivityService.js",[],"C:\\montessori\\montessori_ui\\src\\pages\\dashboard\\ActivityExpected.js",["960","961","962","963","964","965","966","967","968","969","970","971","972","973"],"import React, { useState } from \"react\";\r\nimport {\r\n    Button, Dialog, DialogActions, DialogContent, DialogTitle, FormControl, InputLabel, MenuItem,\r\n    TableRow, Table,\r\n    TableHead,\r\n    TableBody,\r\n    TableCell\r\n} from \"@material-ui/core\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport ExportExcel from \"../../Excelexport\";\r\nimport {  Card, Box } from \"@material-ui/core\";\r\nimport ActivityService from \"./Locality/Service/activityService\";\r\nimport ActivityTabelService from \"./Locality/Service/activityTabelService\";\r\nimport SubActivityService from \"./Locality/Service/subActivityService\";\r\nimport StudentService from \"./Locality/Service/studentService\"\r\nimport SuperActivityService from \"./Locality/Service/superActivityService\"\r\nimport * as Yup from 'yup';\r\nimport { Grid, Select, TextField } from \"@material-ui/core\";\r\nimport { useFormik } from 'formik';\r\nimport { useEffect } from 'react';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport AddClassService from \"./Locality/Service/addClassService\";\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        backgroundColor: \"#30875b\",\r\n        color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n        fontSize: 14,\r\n    },\r\n}))(TableCell);\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: 200,\r\n    },\r\n}));\r\nexport default function ActivityExpected() {\r\n    const tableHeaders = [ 'Student Name', 'Area Of Work', 'List Of Activities','Exercise','Date','Edit', 'Delete','Add More'];\r\n    const classes = useStyles();\r\n    const [activityList, setActivityList] = useState([]);\r\n    const [studentList, setStudentList] = useState([]);\r\n    const [subActivityList, setSubActivityList] = useState([]);\r\n    const [classNameList, setClassNameList] = useState([]);\r\n    const [age, setAge] = React.useState('');\r\n    var [error, setError] = useState(null);\r\n    const [activityIdList, setActivityIdList] = useState([]);\r\n    const [open, setOpen] = React.useState(false);\r\n    const [addClassList, setAddClassList] = useState([]);\r\n    const [startDate, setStartDate] = useState('');\r\n    const [result, setResult]= useState([]);\r\n    const [endDate, setEndDate] = useState('');\r\n    var [studentId, setStudentId] = useState(\"\");\r\n    const [subActivityIdList, setSubActivityIdList] = useState([]);\r\n    const [addActivityList, setAddActivityList] = useState([]);\r\n    const [addSuperActivityList, setAddSuperActivityList] = useState([]);\r\n    const today = new Date();\r\n\r\n    const getWeekStartEnd = (date) => {\r\n        const startOfWeek = new Date(date);\r\n        startOfWeek.setDate(startOfWeek.getDate() - startOfWeek.getDay());\r\n        const endOfWeek = new Date(date);\r\n        endOfWeek.setDate(endOfWeek.getDate() + (5 - endOfWeek.getDay()));\r\n\r\n        let startDay = startOfWeek.getDate();\r\n        let startMonth = startOfWeek.getMonth()+1;\r\n        let startYear = startOfWeek.getFullYear();\r\n        if (startDay < 10) {\r\n            startDay = '0' + startDay;\r\n        }\r\n        \r\n        if (startMonth < 10) {\r\n            startMonth = `0${startMonth}`;\r\n        }\r\n        let format = startYear  + \"-\" + startMonth + \"-\" + startDay;\r\n\r\n        let endDay = endOfWeek.getDate();\r\n        let endMonth = endOfWeek.getMonth()+1;\r\n        let endYear = endOfWeek.getFullYear();\r\n        if (endDay < 10) {\r\n            endDay = '0' + endDay;\r\n        }\r\n        \r\n        if (endMonth < 10) {\r\n            endMonth = `0${endMonth}`;\r\n        }\r\n      \r\n        let format1 = endYear + \"-\" + endMonth + \"-\" + endDay;\r\n        \r\n        return { start: format, end: format1 };\r\n    }\r\n    const date = new Date();\r\nconst week = getWeekStartEnd(date);\r\n    const [pg, setpg] = React.useState(0);\r\n    const [rpg, setrpg] = React.useState(5);\r\n  const year = today.getFullYear();\r\n//   const today = dayjs();\r\n    const [activity, setActivity] = useState({\r\n        // classId: '',\r\n        sfd:'',\r\n        studentId:'',\r\n        superActivityId:'',\r\n        activityId: '',\r\n        subActivityId:'',\r\n        remarks:'',\r\n       \r\n    });\r\n    const handleChangePage=(event, newpage) =>{\r\n        setpg(newpage);\r\n    }\r\n  \r\n    const handleChangeRowsPerPage=(event)=> {\r\n        setrpg(parseInt(event.target.value, 10));\r\n        setpg(0);\r\n    }\r\n    const validationSchema = Yup.object().shape({\r\n        // classId: Yup.string().required('Class Name is required'),\r\n        studentId:Yup.string().required('Student Name is required'),\r\n        activityId: Yup.string().required('ActivityName is required'),\r\n        subActivityId:Yup.string().required('Sub ActivityName is required'),\r\n        // academicYear:Yup.string(),\r\n        remarks:Yup.string(),\r\n        planning:Yup.string(),\r\n        sfd:Yup.string(),\r\n        date:Yup.string(),\r\n    });\r\n    useEffect(() => {\r\n        getActivityList();\r\n        getAddClassList();\r\n       // getStudentActivityList();\r\n        getStudentList()\r\n        getSuperActivityList();\r\n        setStartDate(week.start);\r\n        setEndDate(week.end);\r\n        \r\n        onSubmit();\r\n        return () => {\r\n            setSubActivityList([]);\r\n            setActivityIdList([]);\r\n            setActivityList([]);\r\n            setAddClassList([]);\r\n            setStudentList([]);\r\n            setAddSuperActivityList([]);\r\n            // setClassNameList([]);\r\n        }\r\n    }, []);\r\n    \r\n    const getSuperActivityList = () => {\r\n        const userDetails = JSON.parse(localStorage.getItem(\"userDetail\"));\r\n        SuperActivityService.getAllSuperActivity(userDetails.schoolId).then((res) => {\r\n            setAddSuperActivityList(res);\r\n        }).catch((err) => {\r\n            // setError(err.message);\r\n        });\r\n    }\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const onclick = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const handleChange = (event) => {\r\n        setAge(event.target.value);\r\n    };\r\n    const onSubmit = data => {\r\n        const userDetails = JSON.parse(localStorage.getItem(\"userDetail\"));\r\n        const newstartDate = startDate ? startDate : week.start;\r\n        const newendDate = endDate ? endDate : week.end;\r\n\r\n        const keys = {  \"schooleId\": userDetails.schoolId, \"studentId\": studentId, \"startDate\":newstartDate,\"endDate\":newendDate  }\r\n        ActivityService.findActivityList(keys).then((res) => {\r\n            excelExport(res);\r\n            // setClassValue(\"\");\r\n            setActivityList(res);\r\n           // setStudentList(res);\r\n        }).catch((err) => {\r\n            // setError(err.message);\r\n        });\r\n        \r\n    };\r\n    const getActivityList = () => {\r\n        const userDetails = JSON.parse(localStorage.getItem(\"userDetail\"));\r\n        ActivityTabelService.getAllActivityTabel(userDetails.schoolId).then((res) => {\r\n            setAddActivityList(res);\r\n        }).catch((err) => {\r\n            // setError(err.message);\r\n        });\r\n    }\r\n    const  excelExport  =(res)  => {\r\n        const result= res.map((response)=>{\r\n \r\n             return {\r\n                 \"Student Name\":response.studentId ? response.studentId.studentName : '', \r\n                 \"Area Of Work\": response.superActivityId ? response.superActivityId. superActivityName:'',\r\n                 \"List Of Activities\": response.activityId ? response.activityId.activityName:'',\r\n                 \"Exercise\":response.subActivityId ? response.subActivityId.subActivityName:'',\r\n                 \"Notes\":response.remarks,\r\n                 \"Date\":response.sfd,\r\n             }\r\n            \r\n          })\r\n          setResult(result);\r\n     };\r\n    const getStudentList = (event,obj) => {\r\n        const userDetails = JSON.parse(localStorage.getItem(\"userDetail\"));\r\n        StudentService.getAllStudentById(userDetails.schoolId,\r\n            //  { classId: event }\r\n            \r\n             ).then((res) => {\r\n            const studentDetails = res.map(res => {\r\n                return { _id: res._id, studentName: res.studentName, status: true };\r\n            })\r\n            setStudentList(studentDetails);\r\n            \r\nif(obj){\r\n    setActivity(obj);\r\n}\r\n        }).catch((err) => {\r\n            // setError(err.message);\r\n        });\r\n    }\r\n    \r\n    const getStudentActivityList = () => {\r\n        const userDetails = JSON.parse(localStorage.getItem(\"userDetail\"));\r\n     \r\n        ActivityTabelService.getStudentActivity(userDetails.schoolId,true).then((res) => {\r\n\r\n            setActivityList(res);\r\n        }).catch((err) => {\r\n            // setError(err.message);\r\n        });\r\n    }\r\n    const getSubActivityList = (event, obj) => {\r\n        \r\n        const userDetails = JSON.parse(localStorage.getItem(\"userDetail\"));\r\n        const getsubActList = {schooleId:userDetails.schoolId, activityId:event.target.value};\r\n        SubActivityService.getAllSubActivityByActivityId(getsubActList).then((res) => {\r\n            setSubActivityList(res);\r\n            if(obj){\r\n                setActivity(obj);\r\n            }\r\n        }).catch((err) => {\r\n            // setError(err.message);\r\n        });\r\n    }\r\n    const getAddClassList = () => {\r\n        const userDetails = JSON.parse(localStorage.getItem(\"userDetail\"));\r\n        AddClassService.getAllAddClass(userDetails.schoolId).then((res) => {\r\n            setAddClassList(res);\r\n        }).catch((err) => {\r\n            // setError(err.message);\r\n        });\r\n    }\r\n    const getClassNameList = (event) => {\r\n        AddClassService.getAddClassNameById({ className: event.target.value }).then((res) => {\r\n            setClassNameList(res);\r\n        }).catch((err) => {\r\n            setError(err.message);\r\n        });\r\n    }\r\n    const editActivity = (useractivitys, status) => {\r\n       const obj = JSON.parse(JSON.stringify(useractivitys));\r\n    //    obj.classId = useractivitys.classId ? useractivitys.classId._id : '';\r\n       obj.studentId = useractivitys.studentId ? useractivitys.studentId._id : '';\r\n       obj.superActivityId = useractivitys.superActivityId ? useractivitys.superActivityId._id : '';\r\n       obj.activityId = useractivitys.activityId ? useractivitys.activityId._id : '';\r\n       obj.subActivityId = useractivitys.subActivityId ? useractivitys.subActivityId._id  : '';\r\n        getStudentList(\r\n            // obj.classId,\r\n            obj);\r\n       \r\n       getSubActivityList({target:{value:obj.activityId}},obj);\r\n       getActivityList({ target: { value: obj.superActivityId } }, obj);\r\n        //getStudentActivityList(useractivitys.classId);\r\n        if(status){\r\n            delete obj._id;\r\n         }\r\nsetActivity(obj);\r\n       \r\n        handleOpen()\r\n    }\r\n    const deleteActivity = (activitydelete) => {\r\n        if (activitydelete) {\r\n            ActivityService.deleteActivity(activitydelete).then((res) => {\r\n                \r\n                onSubmit()\r\n            }).catch((err) => {\r\n            });\r\n        }\r\n    };\r\n    const formik = useFormik({\r\n        initialValues: activity,\r\n        enableReinitialize: true,\r\n        validationSchema: validationSchema,\r\n        onSubmit: (values, { resetForm }) => {\r\n            const userDetails = JSON.parse(localStorage.getItem(\"userDetail\"));\r\n            values.schooleId = userDetails.schoolId;\r\n            values.authorizedPerson=userDetails.email\r\n            values.isFuturePlanning=true;\r\n            values.key=\"Future Plane\"\r\n            if (activity._id) {\r\n                ActivityService.upadeActivity(values).then((res) => {\r\n                    handleClose();\r\n                    // getActivityList();\r\n                    onSubmit()\r\n                    resetForm()\r\n                    alert(\"Activity Updated Successfully.\");\r\n                }).catch((err) => {\r\n                });\r\n            }\r\n\r\n\r\n            else {\r\n                let currentYear = new Date().getFullYear();\r\n                let nextYear = new Date().getFullYear() + 1;\r\n                console.log(currentYear + \"-\" + nextYear);\r\n                values['academicYear'] = currentYear + \"-\" + nextYear;\r\n                ActivityService.creteActivity(values).then((res) => {\r\n                    \r\n                    // getActivityList();\r\n                    onSubmit()\r\n                    \r\n                    resetForm();\r\n                    handleClose();\r\n                    alert(\" Activity Added Successfully.\");\r\n                    // props.history.push('/app/vendor');\r\n                })\r\n                    .catch((err) => {\r\n\r\n                        alert(err.response.data.message)\r\n                    })\r\n            }\r\n\r\n        },\r\n    });\r\n\r\n    return (\r\n\r\n        <>\r\n            <PageTitle title=\" Weekly Plan\" button={<Button\r\n                variant=\"contained\" onClick={handleOpen}\r\n                size=\"medium\"\r\n                color=\"secondary\" style={{ backgroundColor: '#30875b' }}> Add Activity\r\n            </Button>} />\r\n            <Card sx={{ maxWidth: 345 }}>\r\n            <Box   >\r\n            <div >\r\n                        <form\r\n                        // onSubmit={formik.handleSubmit} \r\n                        >\r\n                            <Grid container spacing={2} columns={12} style={{ margin: 10 }}  >\r\n                           \r\n                            <Grid item xs={2} >\r\n                             <FormControl variant=\"standard\" fullWidth>\r\n                            <InputLabel id=\"studentName\">Student Name</InputLabel>\r\n                            <Select\r\n                                labelId=\"studentName\"\r\n                                id=\"studentName\"\r\n                                label=\"Student Name\"\r\n                                name=\"studentId\"\r\n                                 value={studentId}\r\n                                onChange={e => {setStudentId(e.target.value) }}\r\n                                // error={formik.touched.studentId && Boolean(formik.errors.studentId)}\r\n                                // helperText={formik.touched.studentId && formik.errors.studentId}\r\n                            >\r\n                                <MenuItem value=\"\">\r\n                                    <em>None</em>\r\n                                </MenuItem>\r\n                                {studentList.map(({index,_id, studentName}) => (\r\n                                    <MenuItem key={index} value={_id}>{studentName}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n                                </Grid>\r\n                            <Grid item xs={2}>\r\n                                    <form className={classes.container} noValidate>\r\n                                    <TextField InputProps={{ style: { width: 160 } }}\r\n                                            id=\"dob\"\r\n                                            name=\"dob\"\r\n                                            label=\"Start Date\"\r\n                                            type=\"date\"\r\n                                           min=\"2016-11-10\"\r\n                                            max=\"2022-11-10\"   \r\n                                            value={startDate}\r\n                                            onChange={e => {getStudentList(e.target.value); setStartDate(e.target.value) }}          \r\n                                            className={classes.textField}\r\n                                            InputLabelProps={{\r\n                                                shrink: true,\r\n                                            }}\r\n                                        />\r\n                                    </form>\r\n                                </Grid>\r\n                                <Grid item xs={2} >\r\n                                <TextField InputProps={{ style: { width: 160 } }}\r\n                                            id=\"dob\"\r\n                                            name=\"dob\"\r\n                                            label=\"End Date\"\r\n                                            type=\"date\"\r\n                                           min=\"2016-11-10\"\r\n                                            max=\"2022-11-10\" \r\n                                            value={endDate}\r\n                                            onChange={e => {setEndDate(e.target.value) }}\r\n                                            // defaultValue=\"2017-05-24\"\r\n                                            InputLabelProps={{\r\n                                                shrink: true,\r\n                                            }}\r\n                                        />\r\n                                </Grid>\r\n                                <Grid item xs={2} >\r\n                                <Button style={{ backgroundColor: 'rgb(48 135 91)', color: 'white' }}\r\n                                 type=\"button\"\r\n                                 \r\n                                  onClick={() => onSubmit()} variant=\"contained\" \r\n                                 >\r\n                                    \r\n                                     Search</Button>\r\n                                </Grid>\r\n                                <Grid item xs={2} >\r\n                                <ExportExcel  excelData={result} fileName={'Student Activity'} />\r\n                                </Grid>\r\n                            </Grid>\r\n            <Grid container spacing={2} columns={12}>\r\n                <Grid item xs={12}>            \r\n                               \r\n                    <Widget title=\"\" upperTitle noBodyPadding bodyClass={classes.tableOverflow}>\r\n                    \r\n                        <Table className=\"mb-0\">\r\n                            <TableHead >\r\n                                <TableRow>\r\n                                    {tableHeaders.map(key => (\r\n                                        <StyledTableCell key={key}>{key}</StyledTableCell>\r\n                                    ))}\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n\r\n                                {activityList.slice(pg * rpg, pg * rpg + rpg).map((activitydetails) => (\r\n                                    <TableRow key={activitydetails._id}>\r\n\r\n                                        {/* <TableCell className=\"pl-3 fw-normal\" >{activitydetails.classId ? activitydetails.classId.className : ''}</TableCell> */}\r\n                                        \r\n                                        <TableCell className=\"pl-3 fw-normal\" >{activitydetails.studentId.studentName}</TableCell>\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{activitydetails.superActivityId ? activitydetails.superActivityId.superActivityName : ''}</TableCell>\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{activitydetails.activityId ? activitydetails.activityId.activityName : ''}</TableCell>\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{activitydetails.subActivityId ? activitydetails.subActivityId.subActivityName : ''}</TableCell>     \r\n                                        <TableCell className=\"pl-3 fw-normal\" >{activitydetails.sfd}</TableCell>                                  \r\n                                        <TableCell>\r\n                                            <EditIcon style={{ cursor: 'pointer' }} onClick={() => editActivity(activitydetails)} >\r\n                                            </EditIcon >\r\n                                        </TableCell>\r\n                                        <TableCell>\r\n                                            <DeleteIcon style={{ cursor: 'pointer' }} onClick={() => deleteActivity(activitydetails._id)} />\r\n                                        </TableCell>\r\n                                        <TableCell>\r\n                                            <AddIcon style={{ cursor: 'pointer' }} onClick={() => editActivity(activitydetails,true)} />\r\n                                        </TableCell>\r\n\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                        <TablePagination\r\n                            component=\"div\"\r\n                            rowsPerPageOptions={[5, 25, 50, 100, 200, 500, 700, 1000 ]}\r\n                            count={activityList.length}\r\n                            page={pg}\r\n                            onPageChange={handleChangePage}\r\n                            rowsPerPage={rpg}\r\n                            onRowsPerPageChange={handleChangeRowsPerPage}\r\n                        />\r\n                    </Widget>\r\n                </Grid>\r\n            </Grid>\r\n            <Dialog open={open} onClose={handleClose}>\r\n                <DialogTitle>Add Activity</DialogTitle>\r\n                <form onSubmit={formik.handleSubmit} >\r\n                    <DialogContent style={{ width: 308 }}>     \r\n                    <TextField InputProps={{ style: { width: 253 } }}\r\n                                            id=\"sfd\"\r\n                                            name=\"sfd\"\r\n                                            autoFocus\r\n                                            label=\"Select Future Date\"\r\n                                            type=\"date\"\r\n                                            value={formik.values.sfd}\r\n                                            onChange={formik.handleChange}\r\n                                            error={formik.touched.sfd && Boolean(formik.errors.sfd)}\r\n                                            helperText={formik.touched.sfd && formik.errors.sfd}\r\n                                            className={classes.textField}\r\n                                            InputLabelProps={{\r\n                                                shrink: true,\r\n                                            }}\r\n                                        />\r\n                        <FormControl variant=\"standard\" fullWidth>\r\n                            <InputLabel id=\"studentName\">Student Name</InputLabel>\r\n                            <Select\r\n                                labelId=\"studentName\"\r\n                                id=\"studentName\"\r\n                                label=\"Student Name\"\r\n                                name=\"studentId\"\r\n                                value={formik.values.studentId}\r\n                                onChange={e => { formik.handleChange(e);\r\n                                     getStudentList(e.target.value)\r\n                                    }}\r\n                                // onChange={formik.handleChange}\r\n                                error={formik.touched.studentId && Boolean(formik.errors.studentId)}\r\n                                helperText={formik.touched.studentId && formik.errors.studentId}\r\n                            >\r\n                                <MenuItem value=\"\">\r\n                                    <em>None</em>\r\n                                </MenuItem>\r\n                                {studentList.map(({index,_id, studentName}) => (\r\n                                    <MenuItem key={index} value={_id}>{studentName}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n                        <FormControl variant=\"standard\" fullWidth>\r\n                            <InputLabel id=\"demo-simple-select-standard-label\">Area Of Work</InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-standard-label\"\r\n                                id=\"superActivityName\"\r\n                                label=\"Area Of Work \"\r\n                                name=\"superActivityId\"\r\n                                onChange={e => { formik.handleChange(e); getActivityList(e) }}\r\n                                value={formik.values.superActivityId}\r\n                                error={formik.touched.superActivityId && Boolean(formik.errors.superActivityId)}\r\n                                helperText={formik.touched.superActivityId && formik.errors.superActivityId}\r\n                            >\r\n                                <MenuItem value=\"\">\r\n                                    <em>None</em>\r\n                                </MenuItem>\r\n                                {addSuperActivityList.map(({ _id, superActivityName }) => (\r\n                                    \r\n                                    <MenuItem key={_id} value={_id}>{superActivityName}\r\n                                        {/* <Checkbox checked={formik.values.categoryId.indexOf(parent) > -1} /> */}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n                        <FormControl variant=\"standard\" fullWidth>\r\n                            <InputLabel id=\"demo-simple-select-standard-label\">List Of Activities</InputLabel>\r\n                            <Select\r\n                                labelId=\"demo-simple-select-standard-label\"\r\n                                id=\"activityName\"\r\n                                label=\"List Of Activities\"\r\n                                name=\"activityId\"\r\n                                onChange={e => { formik.handleChange(e); getSubActivityList(e) }}\r\n                                value={formik.values.activityId}\r\n                                error={formik.touched.activityId && Boolean(formik.errors.activityId)}\r\n                                helperText={formik.touched.activityId && formik.errors.activityId}\r\n                            >\r\n                                <MenuItem value=\"\">\r\n                                    <em>None</em>\r\n                                </MenuItem>\r\n                                {addActivityList.map(({ _id, activityName }) => (\r\n                                    \r\n                                    <MenuItem key={_id} value={_id}>{activityName}\r\n                                        {/* <Checkbox checked={formik.values.categoryId.indexOf(parent) > -1} /> */}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n                        <FormControl variant=\"standard\" fullWidth>\r\n                            <InputLabel id=\"subActivityName\">Exercise</InputLabel>\r\n                            <Select\r\n                                labelId=\"subActivityName\"\r\n                                id=\"subActivityId\"\r\n                                label=\"Exercise\"\r\n                                name=\"subActivityId\"\r\n                                value={formik.values.subActivityId}\r\n                                onChange={formik.handleChange}\r\n                                error={formik.touched.subActivityId && Boolean(formik.errors.subActivityId)}\r\n                                helperText={formik.touched.subActivityId && formik.errors.subActivityId}\r\n                            >\r\n                                <MenuItem value=\"\">\r\n                                    <em>None</em>\r\n                                </MenuItem>\r\n                                {subActivityList.map(({ _id, subActivityName }) => (\r\n                                    <MenuItem key={_id} value={_id}>{subActivityName}\r\n                                        {/* <Checkbox checked={formik.values.categoryId.indexOf(parent) > -1} /> */}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n                        <TextField InputProps={{ style: { width: 258 } }}\r\n                            margin=\"dense\"\r\n                            id=\"remarks\"\r\n                            name=\"remarks\"\r\n                            label=\"Notes\"\r\n                            type=\"text\"\r\n                            variant=\"standard\"\r\n                            value={formik.values.remarks}\r\n                            onChange={formik.handleChange}\r\n                            error={formik.touched.remarks && Boolean(formik.errors.remarks)}\r\n                            helperText={formik.touched.remarks && formik.errors.remarks}\r\n                        />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={handleClose}>Cancel</Button>\r\n                        <Button type=\"submit\">Add</Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n            </form>\r\n            </div>\r\n            </Box>\r\n            </Card>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n","C:\\montessori\\montessori_ui\\src\\pages\\dashboard\\AgeReports.js",["974","975","976","977","978","979","980","981","982","983","984","985","986","987","988","989","990","991","992","993","994","995","996","997","998","999","1000","1001","1002","1003","1004","1005","1006","1007","1008","1009","1010","1011","1012","1013","1014","1015","1016","1017","1018","1019","1020","1021","1022","1023","1024","1025","1026","1027","1028","1029","1030","1031","1032","1033","1034","1035","1036","1037"],"import React, { useState } from \"react\";\r\nimport {\r\n    LinearProgress,\r\n    OutlinedInput,\r\n} from \"@material-ui/core\";\r\nimport { Link } from \"@material-ui/core\";\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport {\r\n    Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, FormControl, InputLabel, MenuItem,\r\n    TableRow, Table,\r\n    TableHead,\r\n    TableBody,\r\n    TableCell\r\n} from \"@material-ui/core\";\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport {\r\n    useParams\r\n  } from \"react-router-dom\";\r\nimport TeacherService from \"./Locality/Service/teacherService\";\r\nimport ActivityService from \"./Locality/Service/activityService\";\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as Yup from 'yup';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport { Grid, Card, Box, Select, TextField } from \"@material-ui/core\";\r\nimport { useFormik } from 'formik';\r\nimport { useContext, useEffect } from 'react';\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport {\r\n    ResponsiveContainer,\r\n    ComposedChart,\r\n    AreaChart,\r\n    LineChart,\r\n    Line,\r\n    Area,\r\n    PieChart,\r\n    Pie,\r\n    Cell,\r\n    YAxis,\r\n    XAxis,\r\n} from \"recharts\";\r\nimport mock from \"./mock\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { Typography } from \"../../components/Wrappers/Wrappers\";\r\nimport Dot from \"../../components/Sidebar/components/Dot\";\r\nimport BigStat from \"./components/BigStat/BigStat\";\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport AddClassService from \"./Locality/Service/addClassService\";\r\nimport StudentService from \"./Locality/Service/studentService\";\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        backgroundColor: \"#30875b\",\r\n        color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n        fontSize: 14,\r\n    },\r\n}))(TableCell);\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: 200,\r\n    },\r\n}));\r\nexport default function StudentDetails(props, history) {\r\n    const { id } = useParams();\r\n\r\n    const tableHeaders = ['Student Name','Date Of Birth' ,'Current Age' ];\r\n    const classes = useStyles();\r\n    const [teacherList, setTeacherList] = useState([]);\r\n    const [classNameList, setClassNameList] = useState([]);\r\n    const [studentList, setStudentList] = useState([]);\r\n    const [age, setAge] = React.useState('');\r\n    var [error, setError] = useState(null);\r\n    const [teacherIdList, setTeacherIdList] = useState([]);\r\n    const [open, setOpen] = React.useState(false);\r\n    const [pg, setpg] = React.useState(0);\r\n    const [rpg, setrpg] = React.useState(5);\r\n    const [addUserPermitionsList, setUserPermitionsList] = useState({studentDetailsEdit:false, studentDetailsDelete:false});\r\n    const [student, setStudent] = useState({\r\n        classId: '',\r\n        teacherName: '',\r\n        email: '',\r\n        subject: '',\r\n        qualification: '',\r\n        address: '',\r\n        mobileNumber: '',\r\n        attendence: '',\r\n        status: '',\r\n    });\r\n    const handleChangePage=(event, newpage) =>{\r\n        setpg(newpage);\r\n    }\r\n  \r\n    const handleChangeRowsPerPage=(event)=> {\r\n        setrpg(parseInt(event.target.value, 10));\r\n        setpg(0);\r\n    }\r\n    useEffect(() => {\r\n        // getTeacherList();\r\n        getStudentList();\r\n        getUserPermitionsList();\r\n        return () => {\r\n            setTeacherIdList([]);\r\n            setTeacherList([]);\r\n            setStudentList([]);\r\n            setUserPermitionsList({})\r\n            // setClassNameList([]);\r\n        }\r\n    }, []);\r\n    const handleOpen = () => {\r\n        props.history.push('/app/studentregistration/add') \r\n    };\r\n    const onclick = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const handleChange = (event) => {\r\n        setAge(event.target.value);\r\n    };\r\n    const onSubmit = data => {\r\n        console.log(JSON.stringify(data, null, 2));\r\n    };\r\n    // const getTeacherList = () => {\r\n    //     TeacherService.getAllTeacher().then((res) => {\r\n    //         setTeacherList(res);\r\n    //     }).catch((err) => {\r\n           \r\n    //     });\r\n    // }\r\n    const getUserPermitionsList=()=>{\r\n        const userPermitions= ActivityService.userPermitions();\r\n             setUserPermitionsList(userPermitions);\r\n        }\r\n        function diffDate(date1, date2) {\r\n            var daysDiff = Math.ceil((Math.abs(date1 - date2)) / (1000 * 60 * 60 * 24));\r\n            var years = Math.floor(daysDiff / 365.25);\r\n            var remainingDays = Math.floor(daysDiff - (years * 365.25));\r\n            var months = Math.floor((remainingDays / 365.25) * 12);\r\n            var days = Math.ceil(daysDiff - (years * 365.25 + (months / 12 * 365.25)));\r\n          \r\n            return {\r\n              daysAll: daysDiff,\r\n              years: years,\r\n              months: months,\r\n              days: days\r\n            }\r\n          }\r\n    const getStudentList = () => {\r\n        const userDetails = JSON.parse(localStorage.getItem(\"userDetail\"));\r\n        StudentService.getAllStudent(userDetails.schoolId).then((res) => {\r\n            const parseJSONObject = res.map(obj => {\r\n                obj.studentAge = `${diffDate(new Date(obj.dob), new Date()).years} Years  ${diffDate(new Date(obj.dob), new Date()).months} Months `;\r\n               \r\n                return obj;\r\n              }\r\n              );\r\n           \r\n            setStudentList(parseJSONObject);\r\n        }).catch((err) => {\r\n            // setError(err.message);\r\n        });\r\n    }\r\n    const editStudent = (id) => {\r\n        // teacher.classId = teacher.classId ? teacher.classId._id :'';\r\n        props.history.push(`/app/studentregistration/${id}`);\r\n        // setStudent(student);\r\n        // handleOpen();\r\n    }\r\n    const deleteStudent= (studentdelete) => {\r\n        if (studentdelete) {\r\n            StudentService.deleteStudent(studentdelete).then((res) => {\r\n                getStudentList();\r\n            }).catch((err) => {\r\n            });\r\n        }\r\n    };\r\n    const formik = useFormik({\r\n        initialValues: student,\r\n        enableReinitialize: true,\r\n        onSubmit: (values, { resetForm }) => {\r\n        //   StudentService.upadeStudent(values).then((res) => {\r\n        //     alert(\" Updated Successfully.\");\r\n        //   })\r\n        //     .catch((err) => {\r\n        //       alert(err.response.data.message)\r\n        //     })\r\n        },\r\n      });\r\n    return (\r\n        <>\r\n            <PageTitle title=\"Student Age\"  />\r\n            <Grid container spacing={4}>\r\n                <Grid item xs={12}>\r\n                    <Widget title=\"\" upperTitle noBodyPadding bodyClass={classes.tableOverflow}>\r\n                        <Table className=\"mb-0\">\r\n                            <TableHead >\r\n                            <TableRow>\r\n                  {tableHeaders.map(key => (\r\n                    <StyledTableCell key={key}>{key}</StyledTableCell>\r\n                  ))}\r\n                </TableRow>         \r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {studentList.slice(pg * rpg, pg * rpg + rpg).map((student) => (\r\n                                    <TableRow key={student._id}>\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{student.studentName}</TableCell>\r\n                                        {/* <TableCell className=\"pl-3 fw-normal\" >{student.classId ? student.classId.className:\"\"}</TableCell> */}\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{student.dob}</TableCell>\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{student.studentAge}</TableCell>          \r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                        <TablePagination\r\n                            component=\"div\"\r\n                            rowsPerPageOptions={[5, 10, 50, 100, 300, 500, 1000]}\r\n                            count={studentList.length}\r\n                            page={pg}\r\n                            onPageChange={handleChangePage}\r\n                            rowsPerPage={rpg}\r\n                            onRowsPerPageChange={handleChangeRowsPerPage}\r\n                        />\r\n                    </Widget>\r\n                </Grid>\r\n            </Grid>\r\n            \r\n        </>\r\n    );\r\n}\r\n\r\n\r\n","C:\\montessori\\montessori_ui\\src\\Excelexport.js",["1038","1039","1040","1041"],"import React, { useState } from \"react\";\r\nimport { Button} from \"@material-ui/core\";\r\nimport * as FileSaver from 'file-saver';\r\nimport XLSX from 'sheetjs-style';\r\n// import {Tooltip} from \"@material-ui\";\r\n\r\n\r\n\r\nconst ExportExcel=({ excelData, fileName}) => {\r\n    const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\n    const fileExtension= '.xlsx';\r\n    const exportToExcel= async()=>{\r\n        const ws=XLSX.utils.json_to_sheet(excelData);\r\n       // const wb={Sheet:{'data':ws}, SheetNames:['data']};\r\n\r\n        const wb = XLSX.utils.book_new();\r\n        XLSX.utils.book_append_sheet(wb, ws, 'Sheet1');\r\n        XLSX.writeFile(wb, fileName+'.xlsx');\r\n        // const excelBuffer= XLSX.write(wb,{bookType:'xlsx', type:'array'});\r\n        // const data= new Blob([excelBuffer],{type:fileType});\r\n        // FileSaver.saveAs(data, fileName + fileExtension);\r\n    }\r\n    return(\r\n        <>\r\n        \r\n            <Button variant=\"contained\"  color=\"primary\" onClick={(e)=>exportToExcel(fileName)} \r\n            \r\n             style={{cursor:\"pointer\", fontSize:14}}>\r\n                Excel Export</Button>\r\n       \r\n        </>\r\n    )\r\n}\r\nexport default ExportExcel;","C:\\montessori\\montessori_ui\\src\\pages\\dashboard\\SpecialObservation.js",["1042","1043","1044","1045","1046","1047","1048","1049","1050","1051","1052","1053","1054","1055","1056","1057","1058","1059","1060","1061","1062","1063","1064","1065","1066","1067","1068","1069","1070","1071","1072","1073","1074","1075","1076","1077","1078","1079","1080","1081"],"import React, { useState } from \"react\";\r\n\r\nimport {\r\n    LinearProgress,\r\n    OutlinedInput,\r\n} from \"@material-ui/core\";\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\nimport {\r\n    Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, FormControl, InputLabel, MenuItem,\r\n    TableRow, Table,\r\n    TableHead,\r\n    TableBody,\r\n    TableCell\r\n} from \"@material-ui/core\";\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport StudentService from \"./Locality/Service/studentService\"\r\nimport SpecialObservationService from \"./Locality/Service/specialObservationService\"\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport * as Yup from 'yup';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport { Grid, Card, Box, Select, TextField } from \"@material-ui/core\";\r\nimport { useFormik } from 'formik';\r\nimport { useContext, useEffect } from 'react';\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport {\r\n    ResponsiveContainer,\r\n    ComposedChart,\r\n    AreaChart,\r\n    LineChart,\r\n    Line,\r\n    Area,\r\n    PieChart,\r\n    Pie,\r\n    Cell,\r\n    YAxis,\r\n    XAxis,\r\n} from \"recharts\";\r\nimport mock from \"./mock\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Widget from \"../../components/Widget/Widget\";\r\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\r\nimport { Typography } from \"../../components/Wrappers/Wrappers\";\r\nimport Dot from \"../../components/Sidebar/components/Dot\";\r\nimport BigStat from \"./components/BigStat/BigStat\";\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport AddClassService from \"./Locality/Service/addClassService\";\r\nconst StyledTableCell = withStyles((theme) => ({\r\n    head: {\r\n        backgroundColor: \"#30875b\",\r\n        color: theme.palette.common.white,\r\n    },\r\n    body: {\r\n        fontSize: 14,\r\n    },\r\n}))(TableCell);\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: 200,\r\n    },\r\n}));\r\nexport default function Teacher() {\r\n    const tableHeaders = ['Student Name','Date', 'Special Observation', 'Edit', 'Delete', 'Add More'];\r\n    const classes = useStyles();\r\n    const [teacherList, setTeacherList] = useState([]);\r\n    const [classNameList, setClassNameList] = useState([]);\r\n    const [addClassList, setAddClassList] = useState([]);\r\n    const [age, setAge] = React.useState('');\r\n    const [studentList, setStudentList] = useState([]);\r\n    var [error, setError] = useState(null);\r\n    const [teacherIdList, setTeacherIdList] = useState([]);\r\n    const [open, setOpen] = React.useState(false);\r\n    const [pg, setpg] = React.useState(0);\r\n    const [rpg, setrpg] = React.useState(5);\r\n    const [specialObservationList, setSpecialObservationList] = useState([]);\r\n    const [observation, setObservation] = useState({\r\n        studentId: '',\r\n        date: '',\r\n        specialObservation: '',\r\n    })\r\n    const validationSchema = Yup.object().shape({\r\n        // classId: Yup.string().required('Class Name is required'),\r\n        studentId: Yup.string().required('Student Name is required'),\r\n        date: Yup.string().required('Date is required'),\r\n        specialObservation: Yup.string(),\r\n       \r\n    });\r\n    useEffect(() => {\r\n        getStudentList();\r\n        getSpecialObservationList();\r\n        return () => {\r\n            setTeacherIdList([]);\r\n            setTeacherList([]);\r\n            setAddClassList([]);\r\n            setStudentList([]);\r\n            setSpecialObservationList([]);\r\n            // setClassNameList([]);\r\n        }\r\n    }, []);\r\n    const getStudentList = (event, obj) => {\r\n        const userDetails = JSON.parse(localStorage.getItem(\"userDetail\"));\r\n        StudentService.getAllStudentById(userDetails.schoolId,\r\n            //  { classId: event }\r\n        ).then((res) => {\r\n            const studentDetails = res.map(res => {\r\n\r\n                return { _id: res._id, studentName: res.studentName, status: true };\r\n            })\r\n            setStudentList(studentDetails);\r\n\r\n        }).catch((err) => {\r\n            // setError(err.message);\r\n        });\r\n    }\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const onclick = () => {\r\n        setOpen(true);\r\n    }\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n    const handleChange = (event) => {\r\n        setAge(event.target.value);\r\n    };\r\n    const handleChangePage=(event, newpage) =>{\r\n        setpg(newpage);\r\n    }\r\n    \r\n    const handleChangeRowsPerPage=(event)=> {\r\n        setrpg(parseInt(event.target.value, 10));\r\n        setpg(0);\r\n    }\r\n    const onSubmit = data => {\r\n        console.log(JSON.stringify(data, null, 2));\r\n    };\r\n    const getSpecialObservationList = () => {\r\n        const userDetails = JSON.parse(localStorage.getItem(\"userDetail\"));\r\n        SpecialObservationService.getAllSpecialObservation(userDetails.schoolId).then((res) => {\r\n            setSpecialObservationList(res);\r\n        }).catch((err) => {\r\n            // setError(err.message);\r\n        });\r\n    }\r\n\r\n    const editSpecialObservation = (observation, status) => {\r\n        const obj = JSON.parse(JSON.stringify(observation));\r\n        obj.studentId = observation.studentId ? observation.studentId._id : '';\r\n        \r\n         setObservation(obj);\r\n        if(status){\r\n           delete obj._id;\r\n        }\r\n        handleOpen();\r\n    }\r\n    const deleteSpecialObservation = (observationdelete) => {\r\n        if (observationdelete) {\r\n            SpecialObservationService.deleteSpecialobservation(observationdelete).then((res) => {\r\n                getSpecialObservationList();\r\n            }).catch((err) => {\r\n            });\r\n        }\r\n    };\r\n    const formik = useFormik({\r\n        initialValues: observation,\r\n        enableReinitialize: true,\r\n        validationSchema: validationSchema,\r\n        onSubmit: (values, { resetForm }) => {\r\n            const userDetails = JSON.parse(localStorage.getItem(\"userDetail\"));\r\n            values.schooleId = userDetails.schoolId;\r\n            if (observation._id) {\r\n                SpecialObservationService.upadeSpecialobservation(values).then((res) => {\r\n                    handleClose();\r\n                    getSpecialObservationList();\r\n                    resetForm()\r\n                    alert(\"Special Observation Updated Successfully.\");\r\n                }).catch((err) => {\r\n                });\r\n            }\r\n            else {\r\n                SpecialObservationService.creteSpecialobservation(values).then((res) => {\r\n                    debugger\r\n                    getSpecialObservationList();\r\n                    resetForm();\r\n                    handleClose();\r\n                    alert(\" Special Observation Added Successfully.\");\r\n                    // props.history.push('/app/vendor');\r\n                })\r\n                    .catch((err) => {\r\n                        alert(err.response.data.message)\r\n                    })\r\n            }\r\n\r\n        },\r\n    });\r\n\r\n    return (\r\n\r\n        <>\r\n            <PageTitle title=\"Special Observation\" button={<Button\r\n                variant=\"contained\" onClick={handleOpen}\r\n                size=\"medium\"\r\n                color=\"secondary\" style={{ backgroundColor: '#30875b' }}> Add Observation\r\n            </Button>} />\r\n            <Grid container spacing={4}>\r\n                <Grid item xs={12}>\r\n                    <Widget title=\"\" upperTitle noBodyPadding bodyClass={classes.tableOverflow}>\r\n\r\n                        <Table className=\"mb-0\">\r\n                            <TableHead >\r\n                                <TableRow>\r\n                                    {tableHeaders.map(key => (\r\n                                        <StyledTableCell key={key}>{key}</StyledTableCell>\r\n                                    ))}\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n\r\n                        \r\n\r\n\r\n                                {specialObservationList.slice(pg * rpg, pg * rpg + rpg).map((observation) => (\r\n                                    <TableRow key={observation._id}>\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{observation.studentId.studentName}</TableCell>\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{observation.date}</TableCell>\r\n                                        <TableCell className=\"pl-3 fw-normal\" >{observation.specialObservation}</TableCell>\r\n                                        <TableCell>\r\n                                            <EditIcon style={{ cursor: 'pointer' }} onClick={() => editSpecialObservation(observation)} >\r\n                                            </EditIcon >\r\n                                        </TableCell>\r\n                                        <TableCell>\r\n                                            <DeleteIcon style={{ cursor: 'pointer' }} onClick={() => deleteSpecialObservation(observation)} />\r\n                                        </TableCell>\r\n                                        <TableCell>\r\n                                            <AddIcon style={{ cursor: 'pointer' }} onClick={() => editSpecialObservation(observation,true)} />\r\n                                        </TableCell>\r\n                                    </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                        <TablePagination\r\n                            component=\"div\"\r\n                            rowsPerPageOptions={[5, 25, 50, 100, 200, 500, 700, 1000 ]}\r\n                            count={specialObservationList.length}\r\n                            page={pg}\r\n                            onPageChange={handleChangePage}\r\n                            rowsPerPage={rpg}\r\n                            onRowsPerPageChange={handleChangeRowsPerPage}\r\n                        />\r\n                    </Widget>\r\n                </Grid>\r\n            </Grid>\r\n            <Dialog open={open} onClose={handleClose}>\r\n                <DialogTitle>Add Observation</DialogTitle>\r\n                <form onSubmit={formik.handleSubmit} >\r\n                    <DialogContent style= {{ width: 308 }}>\r\n                    <FormControl variant=\"standard\" fullWidth>\r\n                            <InputLabel id=\"studentName\">Student Name</InputLabel>\r\n                            <Select\r\n                                 autoFocus\r\n                                 InputProps={{ style: { width: 258 } }}\r\n                                labelId=\"studentName\"\r\n                                id=\"studentName\"\r\n                                label=\"Student Name\"\r\n                                name=\"studentId\"\r\n                                value={formik.values.studentId}\r\n                                onChange={e => {\r\n                                    formik.handleChange(e);\r\n                                    getStudentList(e.target.value)\r\n                                }}\r\n                                // onChange={formik.handleChange}\r\n                                error={formik.touched.studentId && Boolean(formik.errors.studentId)}\r\n                                helperText={formik.touched.studentId && formik.errors.studentId}\r\n                            >\r\n                                <MenuItem value=\"\">\r\n                                    <em>None</em>\r\n                                </MenuItem>\r\n                                {studentList.map(({ index, _id, studentName }) => (\r\n                                    <MenuItem key={index} value={_id}>{studentName}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n\r\n\r\n\r\n                        <TextField InputProps={{ style: { width: 250 } }}\r\n                                            id=\"date\"\r\n                                            name=\"date\"\r\n                                            label=\"Select Date\"\r\n                                            type=\"date\"\r\n                                            value={formik.values.date}\r\n                                            onChange={formik.handleChange}\r\n                                            error={formik.touched.date && Boolean(formik.errors.date)}\r\n                                            helperText={formik.touched.date && formik.errors.date}\r\n                                            className={classes.textField}\r\n                                            InputLabelProps={{\r\n                                                shrink: true,\r\n                                            }}\r\n                                        />       \r\n                                        <TextField\r\n                            InputProps={{ style: { width: 258} }}\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"specialObservation\"\r\n                            name=\"specialObservation\"\r\n                            label=\"Special Observation\"\r\n                            type=\"text\"\r\n                            variant=\"standard\"\r\n                            value={formik.values.specialObservation}\r\n                            onChange={formik.handleChange}\r\n                            error={formik.touched.specialObservation && Boolean(formik.errors.specialObservation)}\r\n                            helperText={formik.touched.specialObservation && formik.errors.specialObservation}\r\n                        />\r\n              \r\n                    </DialogContent>\r\n\r\n                    <DialogActions>\r\n                        <Button onClick={handleClose}>Cancel</Button>\r\n                        <Button type=\"submit\">Add</Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n","C:\\montessori\\montessori_ui\\src\\pages\\dashboard\\Locality\\Service\\specialObservationService.js",[],{"ruleId":"1082","replacedBy":"1083"},{"ruleId":"1084","replacedBy":"1085"},{"ruleId":"1086","severity":1,"message":"1087","line":9,"column":8,"nodeType":"1088","messageId":"1089","endLine":9,"endColumn":13},{"ruleId":"1086","severity":1,"message":"1090","line":13,"column":8,"nodeType":"1088","messageId":"1089","endLine":13,"endColumn":26},{"ruleId":"1086","severity":1,"message":"1091","line":3,"column":3,"nodeType":"1088","messageId":"1089","endLine":3,"endColumn":17},{"ruleId":"1086","severity":1,"message":"1092","line":4,"column":3,"nodeType":"1088","messageId":"1089","endLine":4,"endColumn":16},{"ruleId":"1086","severity":1,"message":"1093","line":6,"column":8,"nodeType":"1088","messageId":"1089","endLine":6,"endColumn":22},{"ruleId":"1086","severity":1,"message":"1094","line":8,"column":11,"nodeType":"1088","messageId":"1089","endLine":8,"endColumn":17},{"ruleId":"1086","severity":1,"message":"1095","line":8,"column":19,"nodeType":"1088","messageId":"1089","endLine":8,"endColumn":32},{"ruleId":"1086","severity":1,"message":"1096","line":8,"column":34,"nodeType":"1088","messageId":"1089","endLine":8,"endColumn":47},{"ruleId":"1086","severity":1,"message":"1097","line":8,"column":49,"nodeType":"1088","messageId":"1089","endLine":8,"endColumn":66},{"ruleId":"1086","severity":1,"message":"1098","line":8,"column":68,"nodeType":"1088","messageId":"1089","endLine":8,"endColumn":79},{"ruleId":"1086","severity":1,"message":"1099","line":9,"column":3,"nodeType":"1088","messageId":"1089","endLine":9,"endColumn":11},{"ruleId":"1086","severity":1,"message":"1100","line":9,"column":13,"nodeType":"1088","messageId":"1089","endLine":9,"endColumn":18},{"ruleId":"1086","severity":1,"message":"1101","line":10,"column":3,"nodeType":"1088","messageId":"1089","endLine":10,"endColumn":12},{"ruleId":"1086","severity":1,"message":"1102","line":11,"column":3,"nodeType":"1088","messageId":"1089","endLine":11,"endColumn":12},{"ruleId":"1086","severity":1,"message":"1103","line":12,"column":3,"nodeType":"1088","messageId":"1089","endLine":12,"endColumn":12},{"ruleId":"1086","severity":1,"message":"1104","line":14,"column":8,"nodeType":"1088","messageId":"1089","endLine":14,"endColumn":27},{"ruleId":"1086","severity":1,"message":"1105","line":23,"column":10,"nodeType":"1088","messageId":"1089","endLine":23,"endColumn":20},{"ruleId":"1086","severity":1,"message":"1106","line":23,"column":22,"nodeType":"1088","messageId":"1089","endLine":23,"endColumn":31},{"ruleId":"1086","severity":1,"message":"1107","line":24,"column":10,"nodeType":"1088","messageId":"1089","endLine":24,"endColumn":18},{"ruleId":"1086","severity":1,"message":"1108","line":27,"column":3,"nodeType":"1088","messageId":"1089","endLine":27,"endColumn":22},{"ruleId":"1086","severity":1,"message":"1109","line":28,"column":3,"nodeType":"1088","messageId":"1089","endLine":28,"endColumn":16},{"ruleId":"1086","severity":1,"message":"1110","line":29,"column":3,"nodeType":"1088","messageId":"1089","endLine":29,"endColumn":12},{"ruleId":"1086","severity":1,"message":"1111","line":30,"column":3,"nodeType":"1088","messageId":"1089","endLine":30,"endColumn":12},{"ruleId":"1086","severity":1,"message":"1112","line":31,"column":3,"nodeType":"1088","messageId":"1089","endLine":31,"endColumn":7},{"ruleId":"1086","severity":1,"message":"1113","line":32,"column":3,"nodeType":"1088","messageId":"1089","endLine":32,"endColumn":7},{"ruleId":"1086","severity":1,"message":"1114","line":33,"column":3,"nodeType":"1088","messageId":"1089","endLine":33,"endColumn":11},{"ruleId":"1086","severity":1,"message":"1115","line":34,"column":3,"nodeType":"1088","messageId":"1089","endLine":34,"endColumn":6},{"ruleId":"1086","severity":1,"message":"1116","line":35,"column":3,"nodeType":"1088","messageId":"1089","endLine":35,"endColumn":7},{"ruleId":"1086","severity":1,"message":"1117","line":36,"column":3,"nodeType":"1088","messageId":"1089","endLine":36,"endColumn":8},{"ruleId":"1086","severity":1,"message":"1118","line":37,"column":3,"nodeType":"1088","messageId":"1089","endLine":37,"endColumn":8},{"ruleId":"1086","severity":1,"message":"1119","line":39,"column":10,"nodeType":"1088","messageId":"1089","endLine":39,"endColumn":21},{"ruleId":"1086","severity":1,"message":"1120","line":45,"column":8,"nodeType":"1088","messageId":"1089","endLine":45,"endColumn":12},{"ruleId":"1086","severity":1,"message":"1121","line":46,"column":8,"nodeType":"1088","messageId":"1089","endLine":46,"endColumn":14},{"ruleId":"1086","severity":1,"message":"1122","line":48,"column":10,"nodeType":"1088","messageId":"1089","endLine":48,"endColumn":20},{"ruleId":"1086","severity":1,"message":"1123","line":49,"column":8,"nodeType":"1088","messageId":"1089","endLine":49,"endColumn":11},{"ruleId":"1086","severity":1,"message":"1124","line":50,"column":8,"nodeType":"1088","messageId":"1089","endLine":50,"endColumn":15},{"ruleId":"1086","severity":1,"message":"1125","line":51,"column":10,"nodeType":"1088","messageId":"1089","endLine":51,"endColumn":20},{"ruleId":"1086","severity":1,"message":"1126","line":55,"column":10,"nodeType":"1088","messageId":"1089","endLine":55,"endColumn":13},{"ruleId":"1086","severity":1,"message":"1127","line":56,"column":8,"nodeType":"1088","messageId":"1089","endLine":56,"endColumn":13},{"ruleId":"1086","severity":1,"message":"1128","line":57,"column":10,"nodeType":"1088","messageId":"1089","endLine":57,"endColumn":33},{"ruleId":"1086","severity":1,"message":"1129","line":58,"column":31,"nodeType":"1088","messageId":"1089","endLine":58,"endColumn":53},{"ruleId":"1086","severity":1,"message":"1130","line":73,"column":9,"nodeType":"1088","messageId":"1089","endLine":73,"endColumn":21},{"ruleId":"1086","severity":1,"message":"1131","line":100,"column":9,"nodeType":"1088","messageId":"1089","endLine":100,"endColumn":35},{"ruleId":"1086","severity":1,"message":"1132","line":31,"column":8,"nodeType":"1088","messageId":"1089","endLine":31,"endColumn":14},{"ruleId":"1086","severity":1,"message":"1133","line":32,"column":8,"nodeType":"1088","messageId":"1089","endLine":32,"endColumn":15},{"ruleId":"1086","severity":1,"message":"1134","line":35,"column":8,"nodeType":"1088","messageId":"1089","endLine":35,"endColumn":17},{"ruleId":"1086","severity":1,"message":"1122","line":36,"column":8,"nodeType":"1088","messageId":"1089","endLine":36,"endColumn":18},{"ruleId":"1086","severity":1,"message":"1135","line":37,"column":8,"nodeType":"1088","messageId":"1089","endLine":37,"endColumn":21},{"ruleId":"1086","severity":1,"message":"1136","line":38,"column":8,"nodeType":"1088","messageId":"1089","endLine":38,"endColumn":12},{"ruleId":"1086","severity":1,"message":"1137","line":41,"column":8,"nodeType":"1088","messageId":"1089","endLine":41,"endColumn":13},{"ruleId":"1086","severity":1,"message":"1138","line":42,"column":8,"nodeType":"1088","messageId":"1089","endLine":42,"endColumn":14},{"ruleId":"1086","severity":1,"message":"1139","line":46,"column":10,"nodeType":"1088","messageId":"1089","endLine":46,"endColumn":18},{"ruleId":"1086","severity":1,"message":"1094","line":13,"column":11,"nodeType":"1088","messageId":"1089","endLine":13,"endColumn":17},{"ruleId":"1086","severity":1,"message":"1095","line":13,"column":19,"nodeType":"1088","messageId":"1089","endLine":13,"endColumn":32},{"ruleId":"1086","severity":1,"message":"1096","line":13,"column":34,"nodeType":"1088","messageId":"1089","endLine":13,"endColumn":47},{"ruleId":"1086","severity":1,"message":"1098","line":13,"column":49,"nodeType":"1088","messageId":"1089","endLine":13,"endColumn":60},{"ruleId":"1086","severity":1,"message":"1099","line":14,"column":3,"nodeType":"1088","messageId":"1089","endLine":14,"endColumn":11},{"ruleId":"1086","severity":1,"message":"1100","line":14,"column":13,"nodeType":"1088","messageId":"1089","endLine":14,"endColumn":18},{"ruleId":"1086","severity":1,"message":"1101","line":15,"column":3,"nodeType":"1088","messageId":"1089","endLine":15,"endColumn":12},{"ruleId":"1086","severity":1,"message":"1102","line":16,"column":3,"nodeType":"1088","messageId":"1089","endLine":16,"endColumn":12},{"ruleId":"1086","severity":1,"message":"1103","line":17,"column":3,"nodeType":"1088","messageId":"1089","endLine":17,"endColumn":12},{"ruleId":"1086","severity":1,"message":"1140","line":21,"column":8,"nodeType":"1088","messageId":"1089","endLine":21,"endColumn":18},{"ruleId":"1086","severity":1,"message":"1141","line":27,"column":8,"nodeType":"1088","messageId":"1089","endLine":27,"endColumn":12},{"ruleId":"1086","severity":1,"message":"1142","line":28,"column":8,"nodeType":"1088","messageId":"1089","endLine":28,"endColumn":14},{"ruleId":"1086","severity":1,"message":"1143","line":31,"column":27,"nodeType":"1088","messageId":"1089","endLine":31,"endColumn":37},{"ruleId":"1086","severity":1,"message":"1144","line":32,"column":8,"nodeType":"1088","messageId":"1089","endLine":32,"endColumn":17},{"ruleId":"1086","severity":1,"message":"1145","line":44,"column":8,"nodeType":"1088","messageId":"1089","endLine":44,"endColumn":17},{"ruleId":"1086","severity":1,"message":"1146","line":44,"column":19,"nodeType":"1088","messageId":"1089","endLine":44,"endColumn":31},{"ruleId":"1086","severity":1,"message":"1134","line":50,"column":8,"nodeType":"1088","messageId":"1089","endLine":50,"endColumn":17},{"ruleId":"1086","severity":1,"message":"1136","line":53,"column":8,"nodeType":"1088","messageId":"1089","endLine":53,"endColumn":12},{"ruleId":"1086","severity":1,"message":"1139","line":58,"column":10,"nodeType":"1088","messageId":"1089","endLine":58,"endColumn":18},{"ruleId":"1086","severity":1,"message":"1147","line":59,"column":8,"nodeType":"1088","messageId":"1089","endLine":59,"endColumn":25},{"ruleId":"1086","severity":1,"message":"1148","line":60,"column":8,"nodeType":"1088","messageId":"1089","endLine":60,"endColumn":23},{"ruleId":"1086","severity":1,"message":"1149","line":5,"column":3,"nodeType":"1088","messageId":"1089","endLine":5,"endColumn":13},{"ruleId":"1086","severity":1,"message":"1150","line":6,"column":3,"nodeType":"1088","messageId":"1089","endLine":6,"endColumn":12},{"ruleId":"1086","severity":1,"message":"1151","line":8,"column":3,"nodeType":"1088","messageId":"1089","endLine":8,"endColumn":11},{"ruleId":"1086","severity":1,"message":"1152","line":9,"column":3,"nodeType":"1088","messageId":"1089","endLine":9,"endColumn":6},{"ruleId":"1086","severity":1,"message":"1153","line":11,"column":3,"nodeType":"1088","messageId":"1089","endLine":11,"endColumn":9},{"ruleId":"1086","severity":1,"message":"1154","line":13,"column":16,"nodeType":"1088","messageId":"1089","endLine":13,"endColumn":20},{"ruleId":"1086","severity":1,"message":"1155","line":13,"column":22,"nodeType":"1088","messageId":"1089","endLine":13,"endColumn":25},{"ruleId":"1086","severity":1,"message":"1156","line":13,"column":27,"nodeType":"1088","messageId":"1089","endLine":13,"endColumn":38},{"ruleId":"1086","severity":1,"message":"1157","line":13,"column":40,"nodeType":"1088","messageId":"1089","endLine":13,"endColumn":46},{"ruleId":"1086","severity":1,"message":"1158","line":13,"column":48,"nodeType":"1088","messageId":"1089","endLine":13,"endColumn":58},{"ruleId":"1086","severity":1,"message":"1159","line":13,"column":60,"nodeType":"1088","messageId":"1089","endLine":13,"endColumn":69},{"ruleId":"1086","severity":1,"message":"1087","line":14,"column":8,"nodeType":"1088","messageId":"1089","endLine":14,"endColumn":13},{"ruleId":"1086","severity":1,"message":"1160","line":19,"column":10,"nodeType":"1088","messageId":"1089","endLine":19,"endColumn":23},{"ruleId":"1086","severity":1,"message":"1161","line":19,"column":25,"nodeType":"1088","messageId":"1089","endLine":19,"endColumn":31},{"ruleId":"1086","severity":1,"message":"1162","line":19,"column":33,"nodeType":"1088","messageId":"1089","endLine":19,"endColumn":38},{"ruleId":"1086","severity":1,"message":"1090","line":20,"column":8,"nodeType":"1088","messageId":"1089","endLine":20,"endColumn":26},{"ruleId":"1086","severity":1,"message":"1163","line":22,"column":11,"nodeType":"1088","messageId":"1089","endLine":22,"endColumn":19},{"ruleId":"1086","severity":1,"message":"1164","line":25,"column":11,"nodeType":"1088","messageId":"1089","endLine":25,"endColumn":19},{"ruleId":"1086","severity":1,"message":"1165","line":26,"column":16,"nodeType":"1088","messageId":"1089","endLine":26,"endColumn":29},{"ruleId":"1086","severity":1,"message":"1166","line":28,"column":10,"nodeType":"1088","messageId":"1089","endLine":28,"endColumn":14},{"ruleId":"1086","severity":1,"message":"1167","line":29,"column":8,"nodeType":"1088","messageId":"1089","endLine":29,"endColumn":18},{"ruleId":"1086","severity":1,"message":"1168","line":31,"column":10,"nodeType":"1088","messageId":"1089","endLine":31,"endColumn":15},{"ruleId":"1086","severity":1,"message":"1169","line":33,"column":8,"nodeType":"1088","messageId":"1089","endLine":33,"endColumn":18},{"ruleId":"1086","severity":1,"message":"1170","line":35,"column":7,"nodeType":"1088","messageId":"1089","endLine":35,"endColumn":15},{"ruleId":"1086","severity":1,"message":"1091","line":3,"column":5,"nodeType":"1088","messageId":"1089","endLine":3,"endColumn":19},{"ruleId":"1086","severity":1,"message":"1092","line":4,"column":5,"nodeType":"1088","messageId":"1089","endLine":4,"endColumn":18},{"ruleId":"1086","severity":1,"message":"1093","line":6,"column":8,"nodeType":"1088","messageId":"1089","endLine":6,"endColumn":22},{"ruleId":"1086","severity":1,"message":"1094","line":8,"column":13,"nodeType":"1088","messageId":"1089","endLine":8,"endColumn":19},{"ruleId":"1086","severity":1,"message":"1095","line":8,"column":21,"nodeType":"1088","messageId":"1089","endLine":8,"endColumn":34},{"ruleId":"1086","severity":1,"message":"1096","line":8,"column":36,"nodeType":"1088","messageId":"1089","endLine":8,"endColumn":49},{"ruleId":"1086","severity":1,"message":"1097","line":8,"column":51,"nodeType":"1088","messageId":"1089","endLine":8,"endColumn":68},{"ruleId":"1086","severity":1,"message":"1098","line":8,"column":70,"nodeType":"1088","messageId":"1089","endLine":8,"endColumn":81},{"ruleId":"1086","severity":1,"message":"1171","line":15,"column":8,"nodeType":"1088","messageId":"1089","endLine":15,"endColumn":18},{"ruleId":"1086","severity":1,"message":"1150","line":16,"column":8,"nodeType":"1088","messageId":"1089","endLine":16,"endColumn":17},{"ruleId":"1086","severity":1,"message":"1172","line":18,"column":8,"nodeType":"1088","messageId":"1089","endLine":18,"endColumn":16},{"ruleId":"1086","severity":1,"message":"1173","line":19,"column":8,"nodeType":"1088","messageId":"1089","endLine":19,"endColumn":15},{"ruleId":"1086","severity":1,"message":"1174","line":21,"column":8,"nodeType":"1088","messageId":"1089","endLine":21,"endColumn":25},{"ruleId":"1086","severity":1,"message":"1119","line":22,"column":10,"nodeType":"1088","messageId":"1089","endLine":22,"endColumn":21},{"ruleId":"1086","severity":1,"message":"1175","line":23,"column":13,"nodeType":"1088","messageId":"1089","endLine":23,"endColumn":16},{"ruleId":"1086","severity":1,"message":"1176","line":24,"column":8,"nodeType":"1088","messageId":"1089","endLine":24,"endColumn":13},{"ruleId":"1086","severity":1,"message":"1177","line":25,"column":8,"nodeType":"1088","messageId":"1089","endLine":25,"endColumn":18},{"ruleId":"1086","severity":1,"message":"1178","line":26,"column":8,"nodeType":"1088","messageId":"1089","endLine":26,"endColumn":16},{"ruleId":"1086","severity":1,"message":"1179","line":27,"column":8,"nodeType":"1088","messageId":"1089","endLine":27,"endColumn":20},{"ruleId":"1086","severity":1,"message":"1180","line":28,"column":8,"nodeType":"1088","messageId":"1089","endLine":28,"endColumn":24},{"ruleId":"1086","severity":1,"message":"1181","line":29,"column":8,"nodeType":"1088","messageId":"1089","endLine":29,"endColumn":17},{"ruleId":"1086","severity":1,"message":"1159","line":30,"column":35,"nodeType":"1088","messageId":"1089","endLine":30,"endColumn":44},{"ruleId":"1086","severity":1,"message":"1182","line":31,"column":10,"nodeType":"1088","messageId":"1089","endLine":31,"endColumn":19},{"ruleId":"1086","severity":1,"message":"1105","line":32,"column":10,"nodeType":"1088","messageId":"1089","endLine":32,"endColumn":20},{"ruleId":"1086","severity":1,"message":"1107","line":33,"column":10,"nodeType":"1088","messageId":"1089","endLine":33,"endColumn":18},{"ruleId":"1086","severity":1,"message":"1108","line":36,"column":5,"nodeType":"1088","messageId":"1089","endLine":36,"endColumn":24},{"ruleId":"1086","severity":1,"message":"1109","line":37,"column":5,"nodeType":"1088","messageId":"1089","endLine":37,"endColumn":18},{"ruleId":"1086","severity":1,"message":"1110","line":38,"column":5,"nodeType":"1088","messageId":"1089","endLine":38,"endColumn":14},{"ruleId":"1086","severity":1,"message":"1111","line":39,"column":5,"nodeType":"1088","messageId":"1089","endLine":39,"endColumn":14},{"ruleId":"1086","severity":1,"message":"1112","line":40,"column":5,"nodeType":"1088","messageId":"1089","endLine":40,"endColumn":9},{"ruleId":"1086","severity":1,"message":"1113","line":41,"column":5,"nodeType":"1088","messageId":"1089","endLine":41,"endColumn":9},{"ruleId":"1086","severity":1,"message":"1114","line":42,"column":5,"nodeType":"1088","messageId":"1089","endLine":42,"endColumn":13},{"ruleId":"1086","severity":1,"message":"1115","line":43,"column":5,"nodeType":"1088","messageId":"1089","endLine":43,"endColumn":8},{"ruleId":"1086","severity":1,"message":"1116","line":44,"column":5,"nodeType":"1088","messageId":"1089","endLine":44,"endColumn":9},{"ruleId":"1086","severity":1,"message":"1117","line":45,"column":5,"nodeType":"1088","messageId":"1089","endLine":45,"endColumn":10},{"ruleId":"1086","severity":1,"message":"1118","line":46,"column":5,"nodeType":"1088","messageId":"1089","endLine":46,"endColumn":10},{"ruleId":"1086","severity":1,"message":"1120","line":48,"column":8,"nodeType":"1088","messageId":"1089","endLine":48,"endColumn":12},{"ruleId":"1086","severity":1,"message":"1183","line":49,"column":8,"nodeType":"1088","messageId":"1089","endLine":49,"endColumn":18},{"ruleId":"1086","severity":1,"message":"1184","line":50,"column":8,"nodeType":"1088","messageId":"1089","endLine":50,"endColumn":16},{"ruleId":"1086","severity":1,"message":"1122","line":53,"column":10,"nodeType":"1088","messageId":"1089","endLine":53,"endColumn":20},{"ruleId":"1086","severity":1,"message":"1123","line":54,"column":8,"nodeType":"1088","messageId":"1089","endLine":54,"endColumn":11},{"ruleId":"1086","severity":1,"message":"1124","line":55,"column":8,"nodeType":"1088","messageId":"1089","endLine":55,"endColumn":15},{"ruleId":"1086","severity":1,"message":"1185","line":57,"column":34,"nodeType":"1088","messageId":"1089","endLine":57,"endColumn":39},{"ruleId":"1086","severity":1,"message":"1186","line":84,"column":12,"nodeType":"1088","messageId":"1089","endLine":84,"endColumn":22},{"ruleId":"1086","severity":1,"message":"1187","line":84,"column":24,"nodeType":"1088","messageId":"1089","endLine":84,"endColumn":37},{"ruleId":"1086","severity":1,"message":"1188","line":85,"column":12,"nodeType":"1088","messageId":"1089","endLine":85,"endColumn":25},{"ruleId":"1086","severity":1,"message":"1126","line":87,"column":12,"nodeType":"1088","messageId":"1089","endLine":87,"endColumn":15},{"ruleId":"1086","severity":1,"message":"1127","line":88,"column":10,"nodeType":"1088","messageId":"1089","endLine":88,"endColumn":15},{"ruleId":"1086","severity":1,"message":"1189","line":90,"column":12,"nodeType":"1088","messageId":"1089","endLine":90,"endColumn":26},{"ruleId":"1086","severity":1,"message":"1190","line":91,"column":12,"nodeType":"1088","messageId":"1089","endLine":91,"endColumn":16},{"ruleId":"1086","severity":1,"message":"1191","line":94,"column":10,"nodeType":"1088","messageId":"1089","endLine":94,"endColumn":19},{"ruleId":"1086","severity":1,"message":"1192","line":94,"column":21,"nodeType":"1088","messageId":"1089","endLine":94,"endColumn":33},{"ruleId":"1086","severity":1,"message":"1193","line":98,"column":12,"nodeType":"1088","messageId":"1089","endLine":98,"endColumn":20},{"ruleId":"1086","severity":1,"message":"1194","line":98,"column":22,"nodeType":"1088","messageId":"1089","endLine":98,"endColumn":33},{"ruleId":"1086","severity":1,"message":"1195","line":117,"column":11,"nodeType":"1088","messageId":"1089","endLine":117,"endColumn":21},{"ruleId":"1086","severity":1,"message":"1196","line":120,"column":11,"nodeType":"1088","messageId":"1089","endLine":120,"endColumn":18},{"ruleId":"1086","severity":1,"message":"1197","line":123,"column":11,"nodeType":"1088","messageId":"1089","endLine":123,"endColumn":22},{"ruleId":"1086","severity":1,"message":"1130","line":126,"column":11,"nodeType":"1088","messageId":"1089","endLine":126,"endColumn":23},{"ruleId":"1086","severity":1,"message":"1198","line":129,"column":11,"nodeType":"1088","messageId":"1089","endLine":129,"endColumn":20},{"ruleId":"1086","severity":1,"message":"1199","line":132,"column":11,"nodeType":"1088","messageId":"1089","endLine":132,"endColumn":19},{"ruleId":"1086","severity":1,"message":"1200","line":134,"column":15,"nodeType":"1088","messageId":"1089","endLine":134,"endColumn":19},{"ruleId":"1086","severity":1,"message":"1201","line":157,"column":11,"nodeType":"1088","messageId":"1089","endLine":157,"endColumn":27},{"ruleId":"1086","severity":1,"message":"1202","line":164,"column":11,"nodeType":"1088","messageId":"1089","endLine":164,"endColumn":22},{"ruleId":"1086","severity":1,"message":"1203","line":174,"column":11,"nodeType":"1088","messageId":"1089","endLine":174,"endColumn":33},{"ruleId":"1086","severity":1,"message":"1091","line":3,"column":5,"nodeType":"1088","messageId":"1089","endLine":3,"endColumn":19},{"ruleId":"1086","severity":1,"message":"1092","line":4,"column":5,"nodeType":"1088","messageId":"1089","endLine":4,"endColumn":18},{"ruleId":"1086","severity":1,"message":"1093","line":6,"column":8,"nodeType":"1088","messageId":"1089","endLine":6,"endColumn":22},{"ruleId":"1086","severity":1,"message":"1094","line":8,"column":13,"nodeType":"1088","messageId":"1089","endLine":8,"endColumn":19},{"ruleId":"1086","severity":1,"message":"1095","line":8,"column":21,"nodeType":"1088","messageId":"1089","endLine":8,"endColumn":34},{"ruleId":"1086","severity":1,"message":"1096","line":8,"column":36,"nodeType":"1088","messageId":"1089","endLine":8,"endColumn":49},{"ruleId":"1086","severity":1,"message":"1097","line":8,"column":51,"nodeType":"1088","messageId":"1089","endLine":8,"endColumn":68},{"ruleId":"1086","severity":1,"message":"1098","line":8,"column":70,"nodeType":"1088","messageId":"1089","endLine":8,"endColumn":81},{"ruleId":"1086","severity":1,"message":"1171","line":15,"column":8,"nodeType":"1088","messageId":"1089","endLine":15,"endColumn":18},{"ruleId":"1086","severity":1,"message":"1150","line":16,"column":8,"nodeType":"1088","messageId":"1089","endLine":16,"endColumn":17},{"ruleId":"1086","severity":1,"message":"1172","line":18,"column":8,"nodeType":"1088","messageId":"1089","endLine":18,"endColumn":16},{"ruleId":"1086","severity":1,"message":"1173","line":19,"column":8,"nodeType":"1088","messageId":"1089","endLine":19,"endColumn":15},{"ruleId":"1086","severity":1,"message":"1119","line":22,"column":10,"nodeType":"1088","messageId":"1089","endLine":22,"endColumn":21},{"ruleId":"1086","severity":1,"message":"1175","line":23,"column":13,"nodeType":"1088","messageId":"1089","endLine":23,"endColumn":16},{"ruleId":"1086","severity":1,"message":"1176","line":24,"column":8,"nodeType":"1088","messageId":"1089","endLine":24,"endColumn":13},{"ruleId":"1086","severity":1,"message":"1177","line":25,"column":8,"nodeType":"1088","messageId":"1089","endLine":25,"endColumn":18},{"ruleId":"1086","severity":1,"message":"1178","line":26,"column":8,"nodeType":"1088","messageId":"1089","endLine":26,"endColumn":16},{"ruleId":"1086","severity":1,"message":"1179","line":27,"column":8,"nodeType":"1088","messageId":"1089","endLine":27,"endColumn":20},{"ruleId":"1086","severity":1,"message":"1180","line":28,"column":8,"nodeType":"1088","messageId":"1089","endLine":28,"endColumn":24},{"ruleId":"1086","severity":1,"message":"1181","line":29,"column":8,"nodeType":"1088","messageId":"1089","endLine":29,"endColumn":17},{"ruleId":"1086","severity":1,"message":"1182","line":31,"column":10,"nodeType":"1088","messageId":"1089","endLine":31,"endColumn":19},{"ruleId":"1086","severity":1,"message":"1105","line":32,"column":10,"nodeType":"1088","messageId":"1089","endLine":32,"endColumn":20},{"ruleId":"1086","severity":1,"message":"1107","line":33,"column":10,"nodeType":"1088","messageId":"1089","endLine":33,"endColumn":18},{"ruleId":"1086","severity":1,"message":"1108","line":36,"column":5,"nodeType":"1088","messageId":"1089","endLine":36,"endColumn":24},{"ruleId":"1086","severity":1,"message":"1109","line":37,"column":5,"nodeType":"1088","messageId":"1089","endLine":37,"endColumn":18},{"ruleId":"1086","severity":1,"message":"1110","line":38,"column":5,"nodeType":"1088","messageId":"1089","endLine":38,"endColumn":14},{"ruleId":"1086","severity":1,"message":"1111","line":39,"column":5,"nodeType":"1088","messageId":"1089","endLine":39,"endColumn":14},{"ruleId":"1086","severity":1,"message":"1112","line":40,"column":5,"nodeType":"1088","messageId":"1089","endLine":40,"endColumn":9},{"ruleId":"1086","severity":1,"message":"1113","line":41,"column":5,"nodeType":"1088","messageId":"1089","endLine":41,"endColumn":9},{"ruleId":"1086","severity":1,"message":"1114","line":42,"column":5,"nodeType":"1088","messageId":"1089","endLine":42,"endColumn":13},{"ruleId":"1086","severity":1,"message":"1115","line":43,"column":5,"nodeType":"1088","messageId":"1089","endLine":43,"endColumn":8},{"ruleId":"1086","severity":1,"message":"1116","line":44,"column":5,"nodeType":"1088","messageId":"1089","endLine":44,"endColumn":9},{"ruleId":"1086","severity":1,"message":"1117","line":45,"column":5,"nodeType":"1088","messageId":"1089","endLine":45,"endColumn":10},{"ruleId":"1086","severity":1,"message":"1118","line":46,"column":5,"nodeType":"1088","messageId":"1089","endLine":46,"endColumn":10},{"ruleId":"1086","severity":1,"message":"1120","line":48,"column":8,"nodeType":"1088","messageId":"1089","endLine":48,"endColumn":12},{"ruleId":"1086","severity":1,"message":"1183","line":50,"column":8,"nodeType":"1088","messageId":"1089","endLine":50,"endColumn":18},{"ruleId":"1086","severity":1,"message":"1184","line":51,"column":8,"nodeType":"1088","messageId":"1089","endLine":51,"endColumn":16},{"ruleId":"1086","severity":1,"message":"1122","line":54,"column":10,"nodeType":"1088","messageId":"1089","endLine":54,"endColumn":20},{"ruleId":"1086","severity":1,"message":"1123","line":55,"column":8,"nodeType":"1088","messageId":"1089","endLine":55,"endColumn":11},{"ruleId":"1086","severity":1,"message":"1124","line":56,"column":8,"nodeType":"1088","messageId":"1089","endLine":56,"endColumn":15},{"ruleId":"1086","severity":1,"message":"1204","line":57,"column":8,"nodeType":"1088","messageId":"1089","endLine":57,"endColumn":15},{"ruleId":"1086","severity":1,"message":"1185","line":58,"column":34,"nodeType":"1088","messageId":"1089","endLine":58,"endColumn":39},{"ruleId":"1086","severity":1,"message":"1205","line":84,"column":12,"nodeType":"1088","messageId":"1089","endLine":84,"endColumn":24},{"ruleId":"1086","severity":1,"message":"1206","line":84,"column":26,"nodeType":"1088","messageId":"1089","endLine":84,"endColumn":41},{"ruleId":"1086","severity":1,"message":"1188","line":87,"column":12,"nodeType":"1088","messageId":"1089","endLine":87,"endColumn":25},{"ruleId":"1086","severity":1,"message":"1207","line":88,"column":12,"nodeType":"1088","messageId":"1089","endLine":88,"endColumn":24},{"ruleId":"1086","severity":1,"message":"1208","line":88,"column":26,"nodeType":"1088","messageId":"1089","endLine":88,"endColumn":41},{"ruleId":"1086","severity":1,"message":"1126","line":93,"column":12,"nodeType":"1088","messageId":"1089","endLine":93,"endColumn":15},{"ruleId":"1086","severity":1,"message":"1127","line":95,"column":10,"nodeType":"1088","messageId":"1089","endLine":95,"endColumn":15},{"ruleId":"1086","severity":1,"message":"1189","line":98,"column":12,"nodeType":"1088","messageId":"1089","endLine":98,"endColumn":26},{"ruleId":"1086","severity":1,"message":"1209","line":98,"column":28,"nodeType":"1088","messageId":"1089","endLine":98,"endColumn":45},{"ruleId":"1086","severity":1,"message":"1190","line":99,"column":12,"nodeType":"1088","messageId":"1089","endLine":99,"endColumn":16},{"ruleId":"1086","severity":1,"message":"1193","line":104,"column":12,"nodeType":"1088","messageId":"1089","endLine":104,"endColumn":20},{"ruleId":"1086","severity":1,"message":"1196","line":150,"column":11,"nodeType":"1088","messageId":"1089","endLine":150,"endColumn":18},{"ruleId":"1086","severity":1,"message":"1197","line":153,"column":11,"nodeType":"1088","messageId":"1089","endLine":153,"endColumn":22},{"ruleId":"1086","severity":1,"message":"1130","line":156,"column":11,"nodeType":"1088","messageId":"1089","endLine":156,"endColumn":23},{"ruleId":"1086","severity":1,"message":"1198","line":159,"column":11,"nodeType":"1088","messageId":"1089","endLine":159,"endColumn":20},{"ruleId":"1086","severity":1,"message":"1210","line":210,"column":11,"nodeType":"1088","messageId":"1089","endLine":210,"endColumn":29},{"ruleId":"1086","severity":1,"message":"1201","line":223,"column":11,"nodeType":"1088","messageId":"1089","endLine":223,"endColumn":27},{"ruleId":"1086","severity":1,"message":"1211","line":232,"column":11,"nodeType":"1088","messageId":"1089","endLine":232,"endColumn":23},{"ruleId":"1086","severity":1,"message":"1212","line":237,"column":11,"nodeType":"1088","messageId":"1089","endLine":237,"endColumn":25},{"ruleId":"1086","severity":1,"message":"1202","line":248,"column":11,"nodeType":"1088","messageId":"1089","endLine":248,"endColumn":22},{"ruleId":"1086","severity":1,"message":"1091","line":3,"column":5,"nodeType":"1088","messageId":"1089","endLine":3,"endColumn":19},{"ruleId":"1086","severity":1,"message":"1092","line":4,"column":5,"nodeType":"1088","messageId":"1089","endLine":4,"endColumn":18},{"ruleId":"1086","severity":1,"message":"1093","line":6,"column":8,"nodeType":"1088","messageId":"1089","endLine":6,"endColumn":22},{"ruleId":"1086","severity":1,"message":"1094","line":8,"column":13,"nodeType":"1088","messageId":"1089","endLine":8,"endColumn":19},{"ruleId":"1086","severity":1,"message":"1095","line":8,"column":21,"nodeType":"1088","messageId":"1089","endLine":8,"endColumn":34},{"ruleId":"1086","severity":1,"message":"1096","line":8,"column":36,"nodeType":"1088","messageId":"1089","endLine":8,"endColumn":49},{"ruleId":"1086","severity":1,"message":"1097","line":8,"column":51,"nodeType":"1088","messageId":"1089","endLine":8,"endColumn":68},{"ruleId":"1086","severity":1,"message":"1098","line":8,"column":70,"nodeType":"1088","messageId":"1089","endLine":8,"endColumn":81},{"ruleId":"1086","severity":1,"message":"1156","line":8,"column":83,"nodeType":"1088","messageId":"1089","endLine":8,"endColumn":94},{"ruleId":"1086","severity":1,"message":"1158","line":8,"column":96,"nodeType":"1088","messageId":"1089","endLine":8,"endColumn":106},{"ruleId":"1086","severity":1,"message":"1151","line":8,"column":108,"nodeType":"1088","messageId":"1089","endLine":8,"endColumn":116},{"ruleId":"1086","severity":1,"message":"1099","line":9,"column":5,"nodeType":"1088","messageId":"1089","endLine":9,"endColumn":13},{"ruleId":"1086","severity":1,"message":"1100","line":9,"column":15,"nodeType":"1088","messageId":"1089","endLine":9,"endColumn":20},{"ruleId":"1086","severity":1,"message":"1101","line":10,"column":5,"nodeType":"1088","messageId":"1089","endLine":10,"endColumn":14},{"ruleId":"1086","severity":1,"message":"1102","line":11,"column":5,"nodeType":"1088","messageId":"1089","endLine":11,"endColumn":14},{"ruleId":"1086","severity":1,"message":"1172","line":14,"column":8,"nodeType":"1088","messageId":"1089","endLine":14,"endColumn":16},{"ruleId":"1086","severity":1,"message":"1173","line":15,"column":8,"nodeType":"1088","messageId":"1089","endLine":15,"endColumn":15},{"ruleId":"1086","severity":1,"message":"1119","line":18,"column":10,"nodeType":"1088","messageId":"1089","endLine":18,"endColumn":21},{"ruleId":"1086","severity":1,"message":"1175","line":19,"column":13,"nodeType":"1088","messageId":"1089","endLine":19,"endColumn":16},{"ruleId":"1086","severity":1,"message":"1176","line":20,"column":8,"nodeType":"1088","messageId":"1089","endLine":20,"endColumn":13},{"ruleId":"1086","severity":1,"message":"1177","line":21,"column":8,"nodeType":"1088","messageId":"1089","endLine":21,"endColumn":18},{"ruleId":"1086","severity":1,"message":"1178","line":22,"column":8,"nodeType":"1088","messageId":"1089","endLine":22,"endColumn":16},{"ruleId":"1086","severity":1,"message":"1179","line":23,"column":8,"nodeType":"1088","messageId":"1089","endLine":23,"endColumn":20},{"ruleId":"1086","severity":1,"message":"1180","line":24,"column":8,"nodeType":"1088","messageId":"1089","endLine":24,"endColumn":24},{"ruleId":"1086","severity":1,"message":"1181","line":25,"column":8,"nodeType":"1088","messageId":"1089","endLine":25,"endColumn":17},{"ruleId":"1086","severity":1,"message":"1157","line":26,"column":27,"nodeType":"1088","messageId":"1089","endLine":26,"endColumn":33},{"ruleId":"1086","severity":1,"message":"1182","line":27,"column":10,"nodeType":"1088","messageId":"1089","endLine":27,"endColumn":19},{"ruleId":"1086","severity":1,"message":"1105","line":28,"column":10,"nodeType":"1088","messageId":"1089","endLine":28,"endColumn":20},{"ruleId":"1086","severity":1,"message":"1107","line":29,"column":10,"nodeType":"1088","messageId":"1089","endLine":29,"endColumn":18},{"ruleId":"1086","severity":1,"message":"1108","line":32,"column":5,"nodeType":"1088","messageId":"1089","endLine":32,"endColumn":24},{"ruleId":"1086","severity":1,"message":"1109","line":33,"column":5,"nodeType":"1088","messageId":"1089","endLine":33,"endColumn":18},{"ruleId":"1086","severity":1,"message":"1110","line":34,"column":5,"nodeType":"1088","messageId":"1089","endLine":34,"endColumn":14},{"ruleId":"1086","severity":1,"message":"1111","line":35,"column":5,"nodeType":"1088","messageId":"1089","endLine":35,"endColumn":14},{"ruleId":"1086","severity":1,"message":"1112","line":36,"column":5,"nodeType":"1088","messageId":"1089","endLine":36,"endColumn":9},{"ruleId":"1086","severity":1,"message":"1113","line":37,"column":5,"nodeType":"1088","messageId":"1089","endLine":37,"endColumn":9},{"ruleId":"1086","severity":1,"message":"1114","line":38,"column":5,"nodeType":"1088","messageId":"1089","endLine":38,"endColumn":13},{"ruleId":"1086","severity":1,"message":"1115","line":39,"column":5,"nodeType":"1088","messageId":"1089","endLine":39,"endColumn":8},{"ruleId":"1086","severity":1,"message":"1116","line":40,"column":5,"nodeType":"1088","messageId":"1089","endLine":40,"endColumn":9},{"ruleId":"1086","severity":1,"message":"1117","line":41,"column":5,"nodeType":"1088","messageId":"1089","endLine":41,"endColumn":10},{"ruleId":"1086","severity":1,"message":"1118","line":42,"column":5,"nodeType":"1088","messageId":"1089","endLine":42,"endColumn":10},{"ruleId":"1086","severity":1,"message":"1120","line":44,"column":8,"nodeType":"1088","messageId":"1089","endLine":44,"endColumn":12},{"ruleId":"1086","severity":1,"message":"1183","line":45,"column":8,"nodeType":"1088","messageId":"1089","endLine":45,"endColumn":18},{"ruleId":"1086","severity":1,"message":"1184","line":46,"column":8,"nodeType":"1088","messageId":"1089","endLine":46,"endColumn":16},{"ruleId":"1086","severity":1,"message":"1121","line":47,"column":8,"nodeType":"1088","messageId":"1089","endLine":47,"endColumn":14},{"ruleId":"1086","severity":1,"message":"1122","line":49,"column":10,"nodeType":"1088","messageId":"1089","endLine":49,"endColumn":20},{"ruleId":"1086","severity":1,"message":"1123","line":50,"column":8,"nodeType":"1088","messageId":"1089","endLine":50,"endColumn":11},{"ruleId":"1086","severity":1,"message":"1124","line":51,"column":8,"nodeType":"1088","messageId":"1089","endLine":51,"endColumn":15},{"ruleId":"1086","severity":1,"message":"1213","line":54,"column":7,"nodeType":"1088","messageId":"1089","endLine":54,"endColumn":22},{"ruleId":"1086","severity":1,"message":"1214","line":75,"column":11,"nodeType":"1088","messageId":"1089","endLine":75,"endColumn":23},{"ruleId":"1086","severity":1,"message":"1205","line":77,"column":12,"nodeType":"1088","messageId":"1089","endLine":77,"endColumn":24},{"ruleId":"1086","severity":1,"message":"1188","line":78,"column":12,"nodeType":"1088","messageId":"1089","endLine":78,"endColumn":25},{"ruleId":"1086","severity":1,"message":"1207","line":79,"column":12,"nodeType":"1088","messageId":"1089","endLine":79,"endColumn":24},{"ruleId":"1086","severity":1,"message":"1126","line":80,"column":12,"nodeType":"1088","messageId":"1089","endLine":80,"endColumn":15},{"ruleId":"1086","severity":1,"message":"1127","line":81,"column":10,"nodeType":"1088","messageId":"1089","endLine":81,"endColumn":15},{"ruleId":"1086","severity":1,"message":"1189","line":83,"column":12,"nodeType":"1088","messageId":"1089","endLine":83,"endColumn":26},{"ruleId":"1086","severity":1,"message":"1190","line":84,"column":12,"nodeType":"1088","messageId":"1089","endLine":84,"endColumn":16},{"ruleId":"1086","severity":1,"message":"1193","line":89,"column":12,"nodeType":"1088","messageId":"1089","endLine":89,"endColumn":20},{"ruleId":"1086","severity":1,"message":"1196","line":112,"column":11,"nodeType":"1088","messageId":"1089","endLine":112,"endColumn":18},{"ruleId":"1086","severity":1,"message":"1197","line":115,"column":11,"nodeType":"1088","messageId":"1089","endLine":115,"endColumn":22},{"ruleId":"1086","severity":1,"message":"1130","line":118,"column":11,"nodeType":"1088","messageId":"1089","endLine":118,"endColumn":23},{"ruleId":"1086","severity":1,"message":"1198","line":121,"column":11,"nodeType":"1088","messageId":"1089","endLine":121,"endColumn":20},{"ruleId":"1086","severity":1,"message":"1201","line":166,"column":11,"nodeType":"1088","messageId":"1089","endLine":166,"endColumn":27},{"ruleId":"1086","severity":1,"message":"1211","line":175,"column":11,"nodeType":"1088","messageId":"1089","endLine":175,"endColumn":23},{"ruleId":"1086","severity":1,"message":"1212","line":180,"column":11,"nodeType":"1088","messageId":"1089","endLine":180,"endColumn":25},{"ruleId":"1086","severity":1,"message":"1091","line":3,"column":5,"nodeType":"1088","messageId":"1089","endLine":3,"endColumn":19},{"ruleId":"1086","severity":1,"message":"1092","line":4,"column":5,"nodeType":"1088","messageId":"1089","endLine":4,"endColumn":18},{"ruleId":"1086","severity":1,"message":"1215","line":8,"column":10,"nodeType":"1088","messageId":"1089","endLine":8,"endColumn":14},{"ruleId":"1086","severity":1,"message":"1093","line":9,"column":8,"nodeType":"1088","messageId":"1089","endLine":9,"endColumn":22},{"ruleId":"1086","severity":1,"message":"1094","line":11,"column":13,"nodeType":"1088","messageId":"1089","endLine":11,"endColumn":19},{"ruleId":"1086","severity":1,"message":"1095","line":11,"column":21,"nodeType":"1088","messageId":"1089","endLine":11,"endColumn":34},{"ruleId":"1086","severity":1,"message":"1096","line":11,"column":36,"nodeType":"1088","messageId":"1089","endLine":11,"endColumn":49},{"ruleId":"1086","severity":1,"message":"1097","line":11,"column":51,"nodeType":"1088","messageId":"1089","endLine":11,"endColumn":68},{"ruleId":"1086","severity":1,"message":"1098","line":11,"column":70,"nodeType":"1088","messageId":"1089","endLine":11,"endColumn":81},{"ruleId":"1086","severity":1,"message":"1156","line":11,"column":83,"nodeType":"1088","messageId":"1089","endLine":11,"endColumn":94},{"ruleId":"1086","severity":1,"message":"1158","line":11,"column":96,"nodeType":"1088","messageId":"1089","endLine":11,"endColumn":106},{"ruleId":"1086","severity":1,"message":"1151","line":11,"column":108,"nodeType":"1088","messageId":"1089","endLine":11,"endColumn":116},{"ruleId":"1086","severity":1,"message":"1216","line":20,"column":8,"nodeType":"1088","messageId":"1089","endLine":20,"endColumn":22},{"ruleId":"1086","severity":1,"message":"1119","line":22,"column":10,"nodeType":"1088","messageId":"1089","endLine":22,"endColumn":21},{"ruleId":"1086","severity":1,"message":"1175","line":23,"column":13,"nodeType":"1088","messageId":"1089","endLine":23,"endColumn":16},{"ruleId":"1086","severity":1,"message":"1176","line":24,"column":8,"nodeType":"1088","messageId":"1089","endLine":24,"endColumn":13},{"ruleId":"1086","severity":1,"message":"1177","line":25,"column":8,"nodeType":"1088","messageId":"1089","endLine":25,"endColumn":18},{"ruleId":"1086","severity":1,"message":"1180","line":26,"column":8,"nodeType":"1088","messageId":"1089","endLine":26,"endColumn":24},{"ruleId":"1086","severity":1,"message":"1181","line":27,"column":8,"nodeType":"1088","messageId":"1089","endLine":27,"endColumn":17},{"ruleId":"1086","severity":1,"message":"1154","line":28,"column":16,"nodeType":"1088","messageId":"1089","endLine":28,"endColumn":20},{"ruleId":"1086","severity":1,"message":"1155","line":28,"column":22,"nodeType":"1088","messageId":"1089","endLine":28,"endColumn":25},{"ruleId":"1086","severity":1,"message":"1157","line":28,"column":27,"nodeType":"1088","messageId":"1089","endLine":28,"endColumn":33},{"ruleId":"1086","severity":1,"message":"1159","line":28,"column":35,"nodeType":"1088","messageId":"1089","endLine":28,"endColumn":44},{"ruleId":"1086","severity":1,"message":"1105","line":30,"column":10,"nodeType":"1088","messageId":"1089","endLine":30,"endColumn":20},{"ruleId":"1086","severity":1,"message":"1107","line":31,"column":10,"nodeType":"1088","messageId":"1089","endLine":31,"endColumn":18},{"ruleId":"1086","severity":1,"message":"1108","line":33,"column":5,"nodeType":"1088","messageId":"1089","endLine":33,"endColumn":24},{"ruleId":"1086","severity":1,"message":"1109","line":34,"column":5,"nodeType":"1088","messageId":"1089","endLine":34,"endColumn":18},{"ruleId":"1086","severity":1,"message":"1110","line":35,"column":5,"nodeType":"1088","messageId":"1089","endLine":35,"endColumn":14},{"ruleId":"1086","severity":1,"message":"1111","line":36,"column":5,"nodeType":"1088","messageId":"1089","endLine":36,"endColumn":14},{"ruleId":"1086","severity":1,"message":"1112","line":37,"column":5,"nodeType":"1088","messageId":"1089","endLine":37,"endColumn":9},{"ruleId":"1086","severity":1,"message":"1113","line":38,"column":5,"nodeType":"1088","messageId":"1089","endLine":38,"endColumn":9},{"ruleId":"1086","severity":1,"message":"1114","line":39,"column":5,"nodeType":"1088","messageId":"1089","endLine":39,"endColumn":13},{"ruleId":"1086","severity":1,"message":"1115","line":40,"column":5,"nodeType":"1088","messageId":"1089","endLine":40,"endColumn":8},{"ruleId":"1086","severity":1,"message":"1116","line":41,"column":5,"nodeType":"1088","messageId":"1089","endLine":41,"endColumn":9},{"ruleId":"1086","severity":1,"message":"1117","line":42,"column":5,"nodeType":"1088","messageId":"1089","endLine":42,"endColumn":10},{"ruleId":"1086","severity":1,"message":"1118","line":43,"column":5,"nodeType":"1088","messageId":"1089","endLine":43,"endColumn":10},{"ruleId":"1086","severity":1,"message":"1120","line":45,"column":8,"nodeType":"1088","messageId":"1089","endLine":45,"endColumn":12},{"ruleId":"1086","severity":1,"message":"1122","line":50,"column":10,"nodeType":"1088","messageId":"1089","endLine":50,"endColumn":20},{"ruleId":"1086","severity":1,"message":"1123","line":51,"column":8,"nodeType":"1088","messageId":"1089","endLine":51,"endColumn":11},{"ruleId":"1086","severity":1,"message":"1124","line":52,"column":8,"nodeType":"1088","messageId":"1089","endLine":52,"endColumn":15},{"ruleId":"1086","severity":1,"message":"1217","line":54,"column":8,"nodeType":"1088","messageId":"1089","endLine":54,"endColumn":23},{"ruleId":"1086","severity":1,"message":"1218","line":77,"column":13,"nodeType":"1088","messageId":"1089","endLine":77,"endColumn":15},{"ruleId":"1086","severity":1,"message":"1214","line":79,"column":11,"nodeType":"1088","messageId":"1089","endLine":79,"endColumn":23},{"ruleId":"1086","severity":1,"message":"1219","line":81,"column":12,"nodeType":"1088","messageId":"1089","endLine":81,"endColumn":23},{"ruleId":"1086","severity":1,"message":"1188","line":82,"column":12,"nodeType":"1088","messageId":"1089","endLine":82,"endColumn":25},{"ruleId":"1086","severity":1,"message":"1220","line":82,"column":27,"nodeType":"1088","messageId":"1089","endLine":82,"endColumn":43},{"ruleId":"1086","severity":1,"message":"1126","line":84,"column":12,"nodeType":"1088","messageId":"1089","endLine":84,"endColumn":15},{"ruleId":"1086","severity":1,"message":"1127","line":85,"column":10,"nodeType":"1088","messageId":"1089","endLine":85,"endColumn":15},{"ruleId":"1086","severity":1,"message":"1221","line":85,"column":17,"nodeType":"1088","messageId":"1089","endLine":85,"endColumn":25},{"ruleId":"1086","severity":1,"message":"1222","line":86,"column":12,"nodeType":"1088","messageId":"1089","endLine":86,"endColumn":25},{"ruleId":"1086","severity":1,"message":"1190","line":87,"column":12,"nodeType":"1088","messageId":"1089","endLine":87,"endColumn":16},{"ruleId":"1086","severity":1,"message":"1223","line":91,"column":21,"nodeType":"1088","messageId":"1089","endLine":91,"endColumn":31},{"ruleId":"1086","severity":1,"message":"1196","line":125,"column":11,"nodeType":"1088","messageId":"1089","endLine":125,"endColumn":18},{"ruleId":"1086","severity":1,"message":"1197","line":128,"column":11,"nodeType":"1088","messageId":"1089","endLine":128,"endColumn":22},{"ruleId":"1086","severity":1,"message":"1130","line":131,"column":11,"nodeType":"1088","messageId":"1089","endLine":131,"endColumn":23},{"ruleId":"1086","severity":1,"message":"1199","line":134,"column":11,"nodeType":"1088","messageId":"1089","endLine":134,"endColumn":19},{"ruleId":"1086","severity":1,"message":"1224","line":171,"column":11,"nodeType":"1088","messageId":"1089","endLine":171,"endColumn":17},{"ruleId":"1086","severity":1,"message":"1148","line":9,"column":8,"nodeType":"1088","messageId":"1089","endLine":9,"endColumn":23},{"ruleId":"1086","severity":1,"message":"1188","line":51,"column":12,"nodeType":"1088","messageId":"1089","endLine":51,"endColumn":25},{"ruleId":"1086","severity":1,"message":"1205","line":52,"column":12,"nodeType":"1088","messageId":"1089","endLine":52,"endColumn":24},{"ruleId":"1086","severity":1,"message":"1126","line":53,"column":12,"nodeType":"1088","messageId":"1089","endLine":53,"endColumn":15},{"ruleId":"1086","severity":1,"message":"1127","line":54,"column":10,"nodeType":"1088","messageId":"1089","endLine":54,"endColumn":15},{"ruleId":"1086","severity":1,"message":"1225","line":56,"column":12,"nodeType":"1088","messageId":"1089","endLine":56,"endColumn":29},{"ruleId":"1086","severity":1,"message":"1196","line":92,"column":11,"nodeType":"1088","messageId":"1089","endLine":92,"endColumn":18},{"ruleId":"1086","severity":1,"message":"1130","line":98,"column":11,"nodeType":"1088","messageId":"1089","endLine":98,"endColumn":23},{"ruleId":"1086","severity":1,"message":"1199","line":101,"column":11,"nodeType":"1088","messageId":"1089","endLine":101,"endColumn":19},{"ruleId":"1086","severity":1,"message":"1201","line":130,"column":11,"nodeType":"1088","messageId":"1089","endLine":130,"endColumn":27},{"ruleId":"1086","severity":1,"message":"1148","line":9,"column":8,"nodeType":"1088","messageId":"1089","endLine":9,"endColumn":23},{"ruleId":"1086","severity":1,"message":"1188","line":47,"column":12,"nodeType":"1088","messageId":"1089","endLine":47,"endColumn":25},{"ruleId":"1086","severity":1,"message":"1207","line":48,"column":12,"nodeType":"1088","messageId":"1089","endLine":48,"endColumn":24},{"ruleId":"1086","severity":1,"message":"1126","line":49,"column":12,"nodeType":"1088","messageId":"1089","endLine":49,"endColumn":15},{"ruleId":"1086","severity":1,"message":"1127","line":50,"column":10,"nodeType":"1088","messageId":"1089","endLine":50,"endColumn":15},{"ruleId":"1086","severity":1,"message":"1226","line":51,"column":12,"nodeType":"1088","messageId":"1089","endLine":51,"endColumn":23},{"ruleId":"1086","severity":1,"message":"1196","line":113,"column":11,"nodeType":"1088","messageId":"1089","endLine":113,"endColumn":18},{"ruleId":"1086","severity":1,"message":"1130","line":119,"column":11,"nodeType":"1088","messageId":"1089","endLine":119,"endColumn":23},{"ruleId":"1086","severity":1,"message":"1199","line":122,"column":11,"nodeType":"1088","messageId":"1089","endLine":122,"endColumn":19},{"ruleId":"1086","severity":1,"message":"1227","line":126,"column":11,"nodeType":"1088","messageId":"1089","endLine":126,"endColumn":26},{"ruleId":"1086","severity":1,"message":"1201","line":134,"column":11,"nodeType":"1088","messageId":"1089","endLine":134,"endColumn":27},{"ruleId":"1086","severity":1,"message":"1228","line":2,"column":8,"nodeType":"1088","messageId":"1089","endLine":2,"endColumn":16},{"ruleId":"1086","severity":1,"message":"1153","line":7,"column":3,"nodeType":"1088","messageId":"1089","endLine":7,"endColumn":9},{"ruleId":"1086","severity":1,"message":"1095","line":7,"column":19,"nodeType":"1088","messageId":"1089","endLine":7,"endColumn":32},{"ruleId":"1086","severity":1,"message":"1098","line":7,"column":49,"nodeType":"1088","messageId":"1089","endLine":7,"endColumn":60},{"ruleId":"1086","severity":1,"message":"1156","line":7,"column":62,"nodeType":"1088","messageId":"1089","endLine":7,"endColumn":73},{"ruleId":"1086","severity":1,"message":"1158","line":7,"column":75,"nodeType":"1088","messageId":"1089","endLine":7,"endColumn":85},{"ruleId":"1086","severity":1,"message":"1151","line":7,"column":87,"nodeType":"1088","messageId":"1089","endLine":7,"endColumn":95},{"ruleId":"1086","severity":1,"message":"1099","line":8,"column":3,"nodeType":"1088","messageId":"1089","endLine":8,"endColumn":11},{"ruleId":"1086","severity":1,"message":"1100","line":8,"column":13,"nodeType":"1088","messageId":"1089","endLine":8,"endColumn":18},{"ruleId":"1086","severity":1,"message":"1101","line":9,"column":3,"nodeType":"1088","messageId":"1089","endLine":9,"endColumn":12},{"ruleId":"1086","severity":1,"message":"1102","line":10,"column":3,"nodeType":"1088","messageId":"1089","endLine":10,"endColumn":12},{"ruleId":"1086","severity":1,"message":"1103","line":11,"column":3,"nodeType":"1088","messageId":"1089","endLine":11,"endColumn":12},{"ruleId":"1086","severity":1,"message":"1182","line":15,"column":10,"nodeType":"1088","messageId":"1089","endLine":15,"endColumn":19},{"ruleId":"1086","severity":1,"message":"1229","line":20,"column":10,"nodeType":"1088","messageId":"1089","endLine":20,"endColumn":14},{"ruleId":"1086","severity":1,"message":"1230","line":20,"column":16,"nodeType":"1088","messageId":"1089","endLine":20,"endColumn":23},{"ruleId":"1086","severity":1,"message":"1231","line":24,"column":10,"nodeType":"1088","messageId":"1089","endLine":24,"endColumn":16},{"ruleId":"1086","severity":1,"message":"1232","line":24,"column":18,"nodeType":"1088","messageId":"1089","endLine":24,"endColumn":27},{"ruleId":"1086","severity":1,"message":"1233","line":29,"column":5,"nodeType":"1088","messageId":"1089","endLine":29,"endColumn":20},{"ruleId":"1086","severity":1,"message":"1234","line":31,"column":7,"nodeType":"1088","messageId":"1089","endLine":31,"endColumn":23},{"ruleId":"1086","severity":1,"message":"1228","line":2,"column":8,"nodeType":"1088","messageId":"1089","endLine":2,"endColumn":16},{"ruleId":"1086","severity":1,"message":"1156","line":4,"column":62,"nodeType":"1088","messageId":"1089","endLine":4,"endColumn":73},{"ruleId":"1086","severity":1,"message":"1158","line":4,"column":75,"nodeType":"1088","messageId":"1089","endLine":4,"endColumn":85},{"ruleId":"1086","severity":1,"message":"1151","line":4,"column":87,"nodeType":"1088","messageId":"1089","endLine":4,"endColumn":95},{"ruleId":"1086","severity":1,"message":"1235","line":13,"column":8,"nodeType":"1088","messageId":"1089","endLine":13,"endColumn":20},{"ruleId":"1086","severity":1,"message":"1236","line":14,"column":8,"nodeType":"1088","messageId":"1089","endLine":14,"endColumn":21},{"ruleId":"1086","severity":1,"message":"1157","line":19,"column":16,"nodeType":"1088","messageId":"1089","endLine":19,"endColumn":22},{"ruleId":"1086","severity":1,"message":"1230","line":44,"column":16,"nodeType":"1088","messageId":"1089","endLine":44,"endColumn":23},{"ruleId":"1086","severity":1,"message":"1232","line":51,"column":18,"nodeType":"1088","messageId":"1089","endLine":51,"endColumn":27},{"ruleId":"1086","severity":1,"message":"1237","line":81,"column":9,"nodeType":"1088","messageId":"1089","endLine":81,"endColumn":28},{"ruleId":"1086","severity":1,"message":"1200","line":101,"column":13,"nodeType":"1088","messageId":"1089","endLine":101,"endColumn":17},{"ruleId":"1086","severity":1,"message":"1188","line":55,"column":12,"nodeType":"1088","messageId":"1089","endLine":55,"endColumn":25},{"ruleId":"1086","severity":1,"message":"1126","line":56,"column":12,"nodeType":"1088","messageId":"1089","endLine":56,"endColumn":15},{"ruleId":"1086","severity":1,"message":"1127","line":57,"column":10,"nodeType":"1088","messageId":"1089","endLine":57,"endColumn":15},{"ruleId":"1086","severity":1,"message":"1189","line":58,"column":12,"nodeType":"1088","messageId":"1089","endLine":58,"endColumn":26},{"ruleId":"1086","severity":1,"message":"1238","line":60,"column":12,"nodeType":"1088","messageId":"1089","endLine":60,"endColumn":17},{"ruleId":"1086","severity":1,"message":"1239","line":60,"column":19,"nodeType":"1088","messageId":"1089","endLine":60,"endColumn":27},{"ruleId":"1086","severity":1,"message":"1207","line":61,"column":12,"nodeType":"1088","messageId":"1089","endLine":61,"endColumn":24},{"ruleId":"1086","severity":1,"message":"1225","line":62,"column":12,"nodeType":"1088","messageId":"1089","endLine":62,"endColumn":29},{"ruleId":"1086","severity":1,"message":"1240","line":62,"column":31,"nodeType":"1088","messageId":"1089","endLine":62,"endColumn":51},{"ruleId":"1086","severity":1,"message":"1241","line":104,"column":7,"nodeType":"1088","messageId":"1089","endLine":104,"endColumn":11},{"ruleId":"1086","severity":1,"message":"1242","line":107,"column":9,"nodeType":"1088","messageId":"1089","endLine":107,"endColumn":13},{"ruleId":"1086","severity":1,"message":"1243","line":123,"column":11,"nodeType":"1088","messageId":"1089","endLine":123,"endColumn":26},{"ruleId":"1244","severity":1,"message":"1245","line":208,"column":9,"nodeType":"1246","messageId":"1247","endLine":208,"endColumn":13},{"ruleId":"1248","severity":1,"message":"1249","line":226,"column":8,"nodeType":"1250","endLine":226,"endColumn":10,"suggestions":"1251"},{"ruleId":"1086","severity":1,"message":"1196","line":249,"column":11,"nodeType":"1088","messageId":"1089","endLine":249,"endColumn":18},{"ruleId":"1086","severity":1,"message":"1130","line":256,"column":11,"nodeType":"1088","messageId":"1089","endLine":256,"endColumn":23},{"ruleId":"1252","severity":1,"message":"1253","line":265,"column":60,"nodeType":"1254","messageId":"1255","endLine":265,"endColumn":103,"fix":"1256"},{"ruleId":"1086","severity":1,"message":"1203","line":337,"column":11,"nodeType":"1088","messageId":"1089","endLine":337,"endColumn":33},{"ruleId":"1086","severity":1,"message":"1201","line":355,"column":11,"nodeType":"1088","messageId":"1089","endLine":355,"endColumn":27},{"ruleId":"1086","severity":1,"message":"1180","line":11,"column":8,"nodeType":"1088","messageId":"1089","endLine":11,"endColumn":24},{"ruleId":"1086","severity":1,"message":"1181","line":12,"column":8,"nodeType":"1088","messageId":"1089","endLine":12,"endColumn":17},{"ruleId":"1086","severity":1,"message":"1154","line":13,"column":16,"nodeType":"1088","messageId":"1089","endLine":13,"endColumn":20},{"ruleId":"1086","severity":1,"message":"1155","line":13,"column":22,"nodeType":"1088","messageId":"1089","endLine":13,"endColumn":25},{"ruleId":"1086","severity":1,"message":"1105","line":15,"column":10,"nodeType":"1088","messageId":"1089","endLine":15,"endColumn":20},{"ruleId":"1086","severity":1,"message":"1107","line":16,"column":10,"nodeType":"1088","messageId":"1089","endLine":16,"endColumn":18},{"ruleId":"1086","severity":1,"message":"1108","line":18,"column":5,"nodeType":"1088","messageId":"1089","endLine":18,"endColumn":24},{"ruleId":"1086","severity":1,"message":"1109","line":19,"column":5,"nodeType":"1088","messageId":"1089","endLine":19,"endColumn":18},{"ruleId":"1086","severity":1,"message":"1110","line":20,"column":5,"nodeType":"1088","messageId":"1089","endLine":20,"endColumn":14},{"ruleId":"1086","severity":1,"message":"1111","line":21,"column":5,"nodeType":"1088","messageId":"1089","endLine":21,"endColumn":14},{"ruleId":"1086","severity":1,"message":"1112","line":22,"column":5,"nodeType":"1088","messageId":"1089","endLine":22,"endColumn":9},{"ruleId":"1086","severity":1,"message":"1113","line":23,"column":5,"nodeType":"1088","messageId":"1089","endLine":23,"endColumn":9},{"ruleId":"1086","severity":1,"message":"1114","line":24,"column":5,"nodeType":"1088","messageId":"1089","endLine":24,"endColumn":13},{"ruleId":"1086","severity":1,"message":"1115","line":25,"column":5,"nodeType":"1088","messageId":"1089","endLine":25,"endColumn":8},{"ruleId":"1086","severity":1,"message":"1116","line":26,"column":5,"nodeType":"1088","messageId":"1089","endLine":26,"endColumn":9},{"ruleId":"1086","severity":1,"message":"1117","line":27,"column":5,"nodeType":"1088","messageId":"1089","endLine":27,"endColumn":10},{"ruleId":"1086","severity":1,"message":"1118","line":28,"column":5,"nodeType":"1088","messageId":"1089","endLine":28,"endColumn":10},{"ruleId":"1086","severity":1,"message":"1120","line":30,"column":8,"nodeType":"1088","messageId":"1089","endLine":30,"endColumn":12},{"ruleId":"1086","severity":1,"message":"1122","line":35,"column":10,"nodeType":"1088","messageId":"1089","endLine":35,"endColumn":20},{"ruleId":"1086","severity":1,"message":"1123","line":36,"column":8,"nodeType":"1088","messageId":"1089","endLine":36,"endColumn":11},{"ruleId":"1086","severity":1,"message":"1124","line":37,"column":8,"nodeType":"1088","messageId":"1089","endLine":37,"endColumn":15},{"ruleId":"1086","severity":1,"message":"1126","line":63,"column":12,"nodeType":"1088","messageId":"1089","endLine":63,"endColumn":15},{"ruleId":"1086","severity":1,"message":"1127","line":64,"column":10,"nodeType":"1088","messageId":"1089","endLine":64,"endColumn":15},{"ruleId":"1086","severity":1,"message":"1221","line":64,"column":17,"nodeType":"1088","messageId":"1089","endLine":64,"endColumn":25},{"ruleId":"1086","severity":1,"message":"1257","line":65,"column":12,"nodeType":"1088","messageId":"1089","endLine":65,"endColumn":21},{"ruleId":"1086","severity":1,"message":"1196","line":81,"column":11,"nodeType":"1088","messageId":"1089","endLine":81,"endColumn":18},{"ruleId":"1086","severity":1,"message":"1130","line":88,"column":11,"nodeType":"1088","messageId":"1089","endLine":88,"endColumn":23},{"ruleId":"1086","severity":1,"message":"1199","line":100,"column":11,"nodeType":"1088","messageId":"1089","endLine":100,"endColumn":19},{"ruleId":"1086","severity":1,"message":"1091","line":4,"column":5,"nodeType":"1088","messageId":"1089","endLine":4,"endColumn":19},{"ruleId":"1086","severity":1,"message":"1092","line":5,"column":5,"nodeType":"1088","messageId":"1089","endLine":5,"endColumn":18},{"ruleId":"1086","severity":1,"message":"1093","line":7,"column":8,"nodeType":"1088","messageId":"1089","endLine":7,"endColumn":22},{"ruleId":"1086","severity":1,"message":"1097","line":9,"column":51,"nodeType":"1088","messageId":"1089","endLine":9,"endColumn":68},{"ruleId":"1086","severity":1,"message":"1156","line":9,"column":83,"nodeType":"1088","messageId":"1089","endLine":9,"endColumn":94},{"ruleId":"1086","severity":1,"message":"1158","line":9,"column":96,"nodeType":"1088","messageId":"1089","endLine":9,"endColumn":106},{"ruleId":"1086","severity":1,"message":"1151","line":9,"column":108,"nodeType":"1088","messageId":"1089","endLine":9,"endColumn":116},{"ruleId":"1086","severity":1,"message":"1119","line":16,"column":10,"nodeType":"1088","messageId":"1089","endLine":16,"endColumn":21},{"ruleId":"1086","severity":1,"message":"1176","line":18,"column":8,"nodeType":"1088","messageId":"1089","endLine":18,"endColumn":13},{"ruleId":"1086","severity":1,"message":"1177","line":19,"column":8,"nodeType":"1088","messageId":"1089","endLine":19,"endColumn":18},{"ruleId":"1086","severity":1,"message":"1180","line":20,"column":8,"nodeType":"1088","messageId":"1089","endLine":20,"endColumn":24},{"ruleId":"1086","severity":1,"message":"1181","line":21,"column":8,"nodeType":"1088","messageId":"1089","endLine":21,"endColumn":17},{"ruleId":"1086","severity":1,"message":"1154","line":22,"column":16,"nodeType":"1088","messageId":"1089","endLine":22,"endColumn":20},{"ruleId":"1086","severity":1,"message":"1155","line":22,"column":22,"nodeType":"1088","messageId":"1089","endLine":22,"endColumn":25},{"ruleId":"1086","severity":1,"message":"1157","line":22,"column":27,"nodeType":"1088","messageId":"1089","endLine":22,"endColumn":33},{"ruleId":"1086","severity":1,"message":"1105","line":24,"column":10,"nodeType":"1088","messageId":"1089","endLine":24,"endColumn":20},{"ruleId":"1086","severity":1,"message":"1107","line":25,"column":10,"nodeType":"1088","messageId":"1089","endLine":25,"endColumn":18},{"ruleId":"1086","severity":1,"message":"1108","line":27,"column":5,"nodeType":"1088","messageId":"1089","endLine":27,"endColumn":24},{"ruleId":"1086","severity":1,"message":"1109","line":28,"column":5,"nodeType":"1088","messageId":"1089","endLine":28,"endColumn":18},{"ruleId":"1086","severity":1,"message":"1110","line":29,"column":5,"nodeType":"1088","messageId":"1089","endLine":29,"endColumn":14},{"ruleId":"1086","severity":1,"message":"1111","line":30,"column":5,"nodeType":"1088","messageId":"1089","endLine":30,"endColumn":14},{"ruleId":"1086","severity":1,"message":"1112","line":31,"column":5,"nodeType":"1088","messageId":"1089","endLine":31,"endColumn":9},{"ruleId":"1086","severity":1,"message":"1113","line":32,"column":5,"nodeType":"1088","messageId":"1089","endLine":32,"endColumn":9},{"ruleId":"1086","severity":1,"message":"1114","line":33,"column":5,"nodeType":"1088","messageId":"1089","endLine":33,"endColumn":13},{"ruleId":"1086","severity":1,"message":"1115","line":34,"column":5,"nodeType":"1088","messageId":"1089","endLine":34,"endColumn":8},{"ruleId":"1086","severity":1,"message":"1116","line":35,"column":5,"nodeType":"1088","messageId":"1089","endLine":35,"endColumn":9},{"ruleId":"1086","severity":1,"message":"1117","line":36,"column":5,"nodeType":"1088","messageId":"1089","endLine":36,"endColumn":10},{"ruleId":"1086","severity":1,"message":"1118","line":37,"column":5,"nodeType":"1088","messageId":"1089","endLine":37,"endColumn":10},{"ruleId":"1086","severity":1,"message":"1120","line":39,"column":8,"nodeType":"1088","messageId":"1089","endLine":39,"endColumn":12},{"ruleId":"1086","severity":1,"message":"1122","line":44,"column":10,"nodeType":"1088","messageId":"1089","endLine":44,"endColumn":20},{"ruleId":"1086","severity":1,"message":"1123","line":45,"column":8,"nodeType":"1088","messageId":"1089","endLine":45,"endColumn":11},{"ruleId":"1086","severity":1,"message":"1124","line":46,"column":8,"nodeType":"1088","messageId":"1089","endLine":46,"endColumn":15},{"ruleId":"1086","severity":1,"message":"1188","line":73,"column":12,"nodeType":"1088","messageId":"1089","endLine":73,"endColumn":25},{"ruleId":"1086","severity":1,"message":"1220","line":73,"column":27,"nodeType":"1088","messageId":"1089","endLine":73,"endColumn":43},{"ruleId":"1086","severity":1,"message":"1207","line":74,"column":12,"nodeType":"1088","messageId":"1089","endLine":74,"endColumn":24},{"ruleId":"1086","severity":1,"message":"1126","line":75,"column":12,"nodeType":"1088","messageId":"1089","endLine":75,"endColumn":15},{"ruleId":"1086","severity":1,"message":"1127","line":76,"column":10,"nodeType":"1088","messageId":"1089","endLine":76,"endColumn":15},{"ruleId":"1086","severity":1,"message":"1221","line":76,"column":17,"nodeType":"1088","messageId":"1089","endLine":76,"endColumn":25},{"ruleId":"1086","severity":1,"message":"1222","line":77,"column":12,"nodeType":"1088","messageId":"1089","endLine":77,"endColumn":25},{"ruleId":"1086","severity":1,"message":"1196","line":119,"column":11,"nodeType":"1088","messageId":"1089","endLine":119,"endColumn":18},{"ruleId":"1086","severity":1,"message":"1130","line":125,"column":11,"nodeType":"1088","messageId":"1089","endLine":125,"endColumn":23},{"ruleId":"1086","severity":1,"message":"1199","line":128,"column":11,"nodeType":"1088","messageId":"1089","endLine":128,"endColumn":19},{"ruleId":"1086","severity":1,"message":"1258","line":1,"column":27,"nodeType":"1088","messageId":"1089","endLine":1,"endColumn":34},{"ruleId":"1086","severity":1,"message":"1091","line":5,"column":5,"nodeType":"1088","messageId":"1089","endLine":5,"endColumn":19},{"ruleId":"1086","severity":1,"message":"1092","line":6,"column":5,"nodeType":"1088","messageId":"1089","endLine":6,"endColumn":18},{"ruleId":"1086","severity":1,"message":"1093","line":8,"column":8,"nodeType":"1088","messageId":"1089","endLine":8,"endColumn":22},{"ruleId":"1086","severity":1,"message":"1094","line":10,"column":13,"nodeType":"1088","messageId":"1089","endLine":10,"endColumn":19},{"ruleId":"1086","severity":1,"message":"1095","line":10,"column":21,"nodeType":"1088","messageId":"1089","endLine":10,"endColumn":34},{"ruleId":"1086","severity":1,"message":"1096","line":10,"column":36,"nodeType":"1088","messageId":"1089","endLine":10,"endColumn":49},{"ruleId":"1086","severity":1,"message":"1097","line":10,"column":51,"nodeType":"1088","messageId":"1089","endLine":10,"endColumn":68},{"ruleId":"1086","severity":1,"message":"1098","line":10,"column":70,"nodeType":"1088","messageId":"1089","endLine":10,"endColumn":81},{"ruleId":"1086","severity":1,"message":"1099","line":11,"column":5,"nodeType":"1088","messageId":"1089","endLine":11,"endColumn":13},{"ruleId":"1086","severity":1,"message":"1100","line":11,"column":15,"nodeType":"1088","messageId":"1089","endLine":11,"endColumn":20},{"ruleId":"1086","severity":1,"message":"1101","line":12,"column":5,"nodeType":"1088","messageId":"1089","endLine":12,"endColumn":14},{"ruleId":"1086","severity":1,"message":"1102","line":13,"column":5,"nodeType":"1088","messageId":"1089","endLine":13,"endColumn":14},{"ruleId":"1086","severity":1,"message":"1103","line":14,"column":5,"nodeType":"1088","messageId":"1089","endLine":14,"endColumn":14},{"ruleId":"1086","severity":1,"message":"1119","line":17,"column":10,"nodeType":"1088","messageId":"1089","endLine":17,"endColumn":21},{"ruleId":"1086","severity":1,"message":"1176","line":19,"column":8,"nodeType":"1088","messageId":"1089","endLine":19,"endColumn":13},{"ruleId":"1086","severity":1,"message":"1177","line":20,"column":8,"nodeType":"1088","messageId":"1089","endLine":20,"endColumn":18},{"ruleId":"1086","severity":1,"message":"1180","line":21,"column":8,"nodeType":"1088","messageId":"1089","endLine":21,"endColumn":24},{"ruleId":"1086","severity":1,"message":"1181","line":22,"column":8,"nodeType":"1088","messageId":"1089","endLine":22,"endColumn":17},{"ruleId":"1086","severity":1,"message":"1105","line":27,"column":10,"nodeType":"1088","messageId":"1089","endLine":27,"endColumn":20},{"ruleId":"1086","severity":1,"message":"1107","line":28,"column":10,"nodeType":"1088","messageId":"1089","endLine":28,"endColumn":18},{"ruleId":"1086","severity":1,"message":"1108","line":31,"column":5,"nodeType":"1088","messageId":"1089","endLine":31,"endColumn":24},{"ruleId":"1086","severity":1,"message":"1109","line":32,"column":5,"nodeType":"1088","messageId":"1089","endLine":32,"endColumn":18},{"ruleId":"1086","severity":1,"message":"1110","line":33,"column":5,"nodeType":"1088","messageId":"1089","endLine":33,"endColumn":14},{"ruleId":"1086","severity":1,"message":"1111","line":34,"column":5,"nodeType":"1088","messageId":"1089","endLine":34,"endColumn":14},{"ruleId":"1086","severity":1,"message":"1112","line":35,"column":5,"nodeType":"1088","messageId":"1089","endLine":35,"endColumn":9},{"ruleId":"1086","severity":1,"message":"1113","line":36,"column":5,"nodeType":"1088","messageId":"1089","endLine":36,"endColumn":9},{"ruleId":"1086","severity":1,"message":"1114","line":37,"column":5,"nodeType":"1088","messageId":"1089","endLine":37,"endColumn":13},{"ruleId":"1086","severity":1,"message":"1115","line":38,"column":5,"nodeType":"1088","messageId":"1089","endLine":38,"endColumn":8},{"ruleId":"1086","severity":1,"message":"1116","line":39,"column":5,"nodeType":"1088","messageId":"1089","endLine":39,"endColumn":9},{"ruleId":"1086","severity":1,"message":"1117","line":40,"column":5,"nodeType":"1088","messageId":"1089","endLine":40,"endColumn":10},{"ruleId":"1086","severity":1,"message":"1118","line":41,"column":5,"nodeType":"1088","messageId":"1089","endLine":41,"endColumn":10},{"ruleId":"1086","severity":1,"message":"1120","line":43,"column":8,"nodeType":"1088","messageId":"1089","endLine":43,"endColumn":12},{"ruleId":"1086","severity":1,"message":"1121","line":44,"column":8,"nodeType":"1088","messageId":"1089","endLine":44,"endColumn":14},{"ruleId":"1086","severity":1,"message":"1122","line":46,"column":10,"nodeType":"1088","messageId":"1089","endLine":46,"endColumn":20},{"ruleId":"1086","severity":1,"message":"1123","line":47,"column":8,"nodeType":"1088","messageId":"1089","endLine":47,"endColumn":11},{"ruleId":"1086","severity":1,"message":"1124","line":48,"column":8,"nodeType":"1088","messageId":"1089","endLine":48,"endColumn":15},{"ruleId":"1086","severity":1,"message":"1125","line":49,"column":10,"nodeType":"1088","messageId":"1089","endLine":49,"endColumn":20},{"ruleId":"1086","severity":1,"message":"1126","line":65,"column":12,"nodeType":"1088","messageId":"1089","endLine":65,"endColumn":15},{"ruleId":"1086","severity":1,"message":"1127","line":66,"column":10,"nodeType":"1088","messageId":"1089","endLine":66,"endColumn":15},{"ruleId":"1086","severity":1,"message":"1259","line":67,"column":12,"nodeType":"1088","messageId":"1089","endLine":67,"endColumn":20},{"ruleId":"1086","severity":1,"message":"1260","line":67,"column":22,"nodeType":"1088","messageId":"1089","endLine":67,"endColumn":33},{"ruleId":"1086","severity":1,"message":"1190","line":68,"column":12,"nodeType":"1088","messageId":"1089","endLine":68,"endColumn":16},{"ruleId":"1086","severity":1,"message":"1207","line":69,"column":12,"nodeType":"1088","messageId":"1089","endLine":69,"endColumn":24},{"ruleId":"1086","severity":1,"message":"1261","line":70,"column":12,"nodeType":"1088","messageId":"1089","endLine":70,"endColumn":23},{"ruleId":"1248","severity":1,"message":"1262","line":103,"column":8,"nodeType":"1250","endLine":103,"endColumn":10,"suggestions":"1263"},{"ruleId":"1086","severity":1,"message":"1130","line":104,"column":11,"nodeType":"1088","messageId":"1089","endLine":104,"endColumn":23},{"ruleId":"1086","severity":1,"message":"1195","line":107,"column":11,"nodeType":"1088","messageId":"1089","endLine":107,"endColumn":21},{"ruleId":"1086","severity":1,"message":"1197","line":110,"column":11,"nodeType":"1088","messageId":"1089","endLine":110,"endColumn":22},{"ruleId":"1086","severity":1,"message":"1264","line":145,"column":11,"nodeType":"1088","messageId":"1089","endLine":145,"endColumn":24},{"ruleId":"1265","severity":1,"message":"1266","line":51,"column":1,"nodeType":"1267","messageId":"1268","endLine":61,"endColumn":2},{"ruleId":"1086","severity":1,"message":"1269","line":3,"column":8,"nodeType":"1088","messageId":"1089","endLine":3,"endColumn":24},{"ruleId":"1086","severity":1,"message":"1270","line":6,"column":24,"nodeType":"1088","messageId":"1089","endLine":6,"endColumn":41},{"ruleId":"1086","severity":1,"message":"1271","line":7,"column":17,"nodeType":"1088","messageId":"1089","endLine":7,"endColumn":31},{"ruleId":"1272","severity":1,"message":"1273","line":8,"column":3,"nodeType":"1274","messageId":"1275","endLine":8,"endColumn":19,"fix":"1276"},{"ruleId":"1086","severity":1,"message":"1277","line":10,"column":16,"nodeType":"1088","messageId":"1089","endLine":10,"endColumn":25},{"ruleId":"1272","severity":1,"message":"1278","line":15,"column":3,"nodeType":"1274","messageId":"1275","endLine":15,"endColumn":39,"fix":"1279"},{"ruleId":"1086","severity":1,"message":"1280","line":15,"column":23,"nodeType":"1088","messageId":"1089","endLine":15,"endColumn":39},{"ruleId":"1272","severity":1,"message":"1281","line":16,"column":3,"nodeType":"1274","messageId":"1275","endLine":16,"endColumn":33,"fix":"1282"},{"ruleId":"1272","severity":1,"message":"1283","line":17,"column":3,"nodeType":"1274","messageId":"1275","endLine":17,"endColumn":39,"fix":"1284"},{"ruleId":"1272","severity":1,"message":"1285","line":18,"column":3,"nodeType":"1274","messageId":"1275","endLine":18,"endColumn":19,"fix":"1286"},{"ruleId":"1086","severity":1,"message":"1123","line":30,"column":8,"nodeType":"1088","messageId":"1089","endLine":30,"endColumn":11},{"ruleId":"1086","severity":1,"message":"1215","line":10,"column":3,"nodeType":"1088","messageId":"1089","endLine":10,"endColumn":7},{"ruleId":"1086","severity":1,"message":"1287","line":18,"column":3,"nodeType":"1088","messageId":"1089","endLine":18,"endColumn":15},{"ruleId":"1086","severity":1,"message":"1153","line":26,"column":23,"nodeType":"1088","messageId":"1089","endLine":26,"endColumn":29},{"ruleId":"1086","severity":1,"message":"1288","line":101,"column":8,"nodeType":"1088","messageId":"1089","endLine":101,"endColumn":21},{"ruleId":"1086","severity":1,"message":"1289","line":103,"column":8,"nodeType":"1088","messageId":"1089","endLine":103,"endColumn":29},{"ruleId":"1086","severity":1,"message":"1290","line":5,"column":3,"nodeType":"1088","messageId":"1089","endLine":5,"endColumn":7},{"ruleId":"1086","severity":1,"message":"1151","line":6,"column":3,"nodeType":"1088","messageId":"1089","endLine":6,"endColumn":11},{"ruleId":"1086","severity":1,"message":"1291","line":9,"column":22,"nodeType":"1088","messageId":"1089","endLine":9,"endColumn":30},{"ruleId":"1086","severity":1,"message":"1292","line":31,"column":8,"nodeType":"1088","messageId":"1089","endLine":31,"endColumn":21},{"ruleId":"1086","severity":1,"message":"1293","line":32,"column":8,"nodeType":"1088","messageId":"1089","endLine":32,"endColumn":22},{"ruleId":"1086","severity":1,"message":"1091","line":3,"column":3,"nodeType":"1088","messageId":"1089","endLine":3,"endColumn":17},{"ruleId":"1086","severity":1,"message":"1092","line":4,"column":3,"nodeType":"1088","messageId":"1089","endLine":4,"endColumn":16},{"ruleId":"1086","severity":1,"message":"1097","line":8,"column":56,"nodeType":"1088","messageId":"1089","endLine":8,"endColumn":73},{"ruleId":"1086","severity":1,"message":"1159","line":8,"column":88,"nodeType":"1088","messageId":"1089","endLine":8,"endColumn":97},{"ruleId":"1086","severity":1,"message":"1156","line":8,"column":99,"nodeType":"1088","messageId":"1089","endLine":8,"endColumn":110},{"ruleId":"1086","severity":1,"message":"1158","line":8,"column":112,"nodeType":"1088","messageId":"1089","endLine":8,"endColumn":122},{"ruleId":"1086","severity":1,"message":"1157","line":8,"column":124,"nodeType":"1088","messageId":"1089","endLine":8,"endColumn":130},{"ruleId":"1086","severity":1,"message":"1151","line":8,"column":132,"nodeType":"1088","messageId":"1089","endLine":8,"endColumn":140},{"ruleId":"1086","severity":1,"message":"1105","line":15,"column":10,"nodeType":"1088","messageId":"1089","endLine":15,"endColumn":20},{"ruleId":"1086","severity":1,"message":"1108","line":18,"column":3,"nodeType":"1088","messageId":"1089","endLine":18,"endColumn":22},{"ruleId":"1086","severity":1,"message":"1109","line":19,"column":3,"nodeType":"1088","messageId":"1089","endLine":19,"endColumn":16},{"ruleId":"1086","severity":1,"message":"1110","line":20,"column":3,"nodeType":"1088","messageId":"1089","endLine":20,"endColumn":12},{"ruleId":"1086","severity":1,"message":"1111","line":21,"column":3,"nodeType":"1088","messageId":"1089","endLine":21,"endColumn":12},{"ruleId":"1086","severity":1,"message":"1112","line":22,"column":3,"nodeType":"1088","messageId":"1089","endLine":22,"endColumn":7},{"ruleId":"1086","severity":1,"message":"1113","line":23,"column":3,"nodeType":"1088","messageId":"1089","endLine":23,"endColumn":7},{"ruleId":"1086","severity":1,"message":"1114","line":24,"column":3,"nodeType":"1088","messageId":"1089","endLine":24,"endColumn":11},{"ruleId":"1086","severity":1,"message":"1115","line":25,"column":3,"nodeType":"1088","messageId":"1089","endLine":25,"endColumn":6},{"ruleId":"1086","severity":1,"message":"1116","line":26,"column":3,"nodeType":"1088","messageId":"1089","endLine":26,"endColumn":7},{"ruleId":"1086","severity":1,"message":"1117","line":27,"column":3,"nodeType":"1088","messageId":"1089","endLine":27,"endColumn":8},{"ruleId":"1086","severity":1,"message":"1118","line":28,"column":3,"nodeType":"1088","messageId":"1089","endLine":28,"endColumn":8},{"ruleId":"1086","severity":1,"message":"1120","line":35,"column":8,"nodeType":"1088","messageId":"1089","endLine":35,"endColumn":12},{"ruleId":"1086","severity":1,"message":"1123","line":39,"column":8,"nodeType":"1088","messageId":"1089","endLine":39,"endColumn":11},{"ruleId":"1086","severity":1,"message":"1124","line":41,"column":8,"nodeType":"1088","messageId":"1089","endLine":41,"endColumn":15},{"ruleId":"1086","severity":1,"message":"1294","line":53,"column":7,"nodeType":"1088","messageId":"1089","endLine":53,"endColumn":21},{"ruleId":"1086","severity":1,"message":"1295","line":62,"column":7,"nodeType":"1088","messageId":"1089","endLine":62,"endColumn":20},{"ruleId":"1086","severity":1,"message":"1296","line":68,"column":7,"nodeType":"1088","messageId":"1089","endLine":68,"endColumn":12},{"ruleId":"1086","severity":1,"message":"1297","line":71,"column":8,"nodeType":"1088","messageId":"1089","endLine":71,"endColumn":22},{"ruleId":"1086","severity":1,"message":"1298","line":71,"column":24,"nodeType":"1088","messageId":"1089","endLine":71,"endColumn":41},{"ruleId":"1082","replacedBy":"1299"},{"ruleId":"1084","replacedBy":"1300"},{"ruleId":"1086","severity":1,"message":"1156","line":3,"column":64,"nodeType":"1088","messageId":"1089","endLine":3,"endColumn":75},{"ruleId":"1086","severity":1,"message":"1158","line":3,"column":77,"nodeType":"1088","messageId":"1089","endLine":3,"endColumn":87},{"ruleId":"1086","severity":1,"message":"1151","line":3,"column":89,"nodeType":"1088","messageId":"1089","endLine":3,"endColumn":97},{"ruleId":"1086","severity":1,"message":"1157","line":12,"column":16,"nodeType":"1088","messageId":"1089","endLine":12,"endColumn":22},{"ruleId":"1086","severity":1,"message":"1217","line":20,"column":8,"nodeType":"1088","messageId":"1089","endLine":20,"endColumn":23},{"ruleId":"1086","severity":1,"message":"1188","line":45,"column":12,"nodeType":"1088","messageId":"1089","endLine":45,"endColumn":25},{"ruleId":"1086","severity":1,"message":"1220","line":45,"column":27,"nodeType":"1088","messageId":"1089","endLine":45,"endColumn":43},{"ruleId":"1086","severity":1,"message":"1207","line":46,"column":12,"nodeType":"1088","messageId":"1089","endLine":46,"endColumn":24},{"ruleId":"1086","severity":1,"message":"1208","line":46,"column":26,"nodeType":"1088","messageId":"1089","endLine":46,"endColumn":41},{"ruleId":"1086","severity":1,"message":"1126","line":47,"column":12,"nodeType":"1088","messageId":"1089","endLine":47,"endColumn":15},{"ruleId":"1086","severity":1,"message":"1127","line":48,"column":10,"nodeType":"1088","messageId":"1089","endLine":48,"endColumn":15},{"ruleId":"1086","severity":1,"message":"1221","line":48,"column":17,"nodeType":"1088","messageId":"1089","endLine":48,"endColumn":25},{"ruleId":"1086","severity":1,"message":"1226","line":49,"column":12,"nodeType":"1088","messageId":"1089","endLine":49,"endColumn":23},{"ruleId":"1086","severity":1,"message":"1196","line":73,"column":11,"nodeType":"1088","messageId":"1089","endLine":73,"endColumn":18},{"ruleId":"1086","severity":1,"message":"1130","line":79,"column":11,"nodeType":"1088","messageId":"1089","endLine":79,"endColumn":23},{"ruleId":"1086","severity":1,"message":"1199","line":82,"column":11,"nodeType":"1088","messageId":"1089","endLine":82,"endColumn":19},{"ruleId":"1086","severity":1,"message":"1188","line":54,"column":12,"nodeType":"1088","messageId":"1089","endLine":54,"endColumn":25},{"ruleId":"1086","severity":1,"message":"1126","line":55,"column":12,"nodeType":"1088","messageId":"1089","endLine":55,"endColumn":15},{"ruleId":"1086","severity":1,"message":"1127","line":56,"column":10,"nodeType":"1088","messageId":"1089","endLine":56,"endColumn":15},{"ruleId":"1086","severity":1,"message":"1189","line":57,"column":12,"nodeType":"1088","messageId":"1089","endLine":57,"endColumn":26},{"ruleId":"1086","severity":1,"message":"1207","line":59,"column":12,"nodeType":"1088","messageId":"1089","endLine":59,"endColumn":24},{"ruleId":"1086","severity":1,"message":"1225","line":64,"column":12,"nodeType":"1088","messageId":"1089","endLine":64,"endColumn":29},{"ruleId":"1086","severity":1,"message":"1240","line":64,"column":31,"nodeType":"1088","messageId":"1089","endLine":64,"endColumn":51},{"ruleId":"1086","severity":1,"message":"1242","line":106,"column":9,"nodeType":"1088","messageId":"1089","endLine":106,"endColumn":13},{"ruleId":"1248","severity":1,"message":"1301","line":156,"column":8,"nodeType":"1250","endLine":156,"endColumn":10,"suggestions":"1302"},{"ruleId":"1086","severity":1,"message":"1196","line":169,"column":11,"nodeType":"1088","messageId":"1089","endLine":169,"endColumn":18},{"ruleId":"1086","severity":1,"message":"1130","line":175,"column":11,"nodeType":"1088","messageId":"1089","endLine":175,"endColumn":23},{"ruleId":"1252","severity":1,"message":"1253","line":207,"column":61,"nodeType":"1254","messageId":"1255","endLine":207,"endColumn":104,"fix":"1303"},{"ruleId":"1086","severity":1,"message":"1203","line":236,"column":11,"nodeType":"1088","messageId":"1089","endLine":236,"endColumn":33},{"ruleId":"1086","severity":1,"message":"1201","line":267,"column":11,"nodeType":"1088","messageId":"1089","endLine":267,"endColumn":27},{"ruleId":"1086","severity":1,"message":"1091","line":3,"column":5,"nodeType":"1088","messageId":"1089","endLine":3,"endColumn":19},{"ruleId":"1086","severity":1,"message":"1092","line":4,"column":5,"nodeType":"1088","messageId":"1089","endLine":4,"endColumn":18},{"ruleId":"1086","severity":1,"message":"1215","line":6,"column":10,"nodeType":"1088","messageId":"1089","endLine":6,"endColumn":14},{"ruleId":"1086","severity":1,"message":"1093","line":7,"column":8,"nodeType":"1088","messageId":"1089","endLine":7,"endColumn":22},{"ruleId":"1086","severity":1,"message":"1153","line":9,"column":5,"nodeType":"1088","messageId":"1089","endLine":9,"endColumn":11},{"ruleId":"1086","severity":1,"message":"1094","line":9,"column":13,"nodeType":"1088","messageId":"1089","endLine":9,"endColumn":19},{"ruleId":"1086","severity":1,"message":"1095","line":9,"column":21,"nodeType":"1088","messageId":"1089","endLine":9,"endColumn":34},{"ruleId":"1086","severity":1,"message":"1096","line":9,"column":36,"nodeType":"1088","messageId":"1089","endLine":9,"endColumn":49},{"ruleId":"1086","severity":1,"message":"1097","line":9,"column":51,"nodeType":"1088","messageId":"1089","endLine":9,"endColumn":68},{"ruleId":"1086","severity":1,"message":"1098","line":9,"column":70,"nodeType":"1088","messageId":"1089","endLine":9,"endColumn":81},{"ruleId":"1086","severity":1,"message":"1156","line":9,"column":83,"nodeType":"1088","messageId":"1089","endLine":9,"endColumn":94},{"ruleId":"1086","severity":1,"message":"1158","line":9,"column":96,"nodeType":"1088","messageId":"1089","endLine":9,"endColumn":106},{"ruleId":"1086","severity":1,"message":"1151","line":9,"column":108,"nodeType":"1088","messageId":"1089","endLine":9,"endColumn":116},{"ruleId":"1086","severity":1,"message":"1216","line":19,"column":8,"nodeType":"1088","messageId":"1089","endLine":19,"endColumn":22},{"ruleId":"1086","severity":1,"message":"1119","line":21,"column":10,"nodeType":"1088","messageId":"1089","endLine":21,"endColumn":21},{"ruleId":"1086","severity":1,"message":"1175","line":22,"column":13,"nodeType":"1088","messageId":"1089","endLine":22,"endColumn":16},{"ruleId":"1086","severity":1,"message":"1176","line":23,"column":8,"nodeType":"1088","messageId":"1089","endLine":23,"endColumn":13},{"ruleId":"1086","severity":1,"message":"1177","line":24,"column":8,"nodeType":"1088","messageId":"1089","endLine":24,"endColumn":18},{"ruleId":"1086","severity":1,"message":"1180","line":25,"column":8,"nodeType":"1088","messageId":"1089","endLine":25,"endColumn":24},{"ruleId":"1086","severity":1,"message":"1181","line":26,"column":8,"nodeType":"1088","messageId":"1089","endLine":26,"endColumn":17},{"ruleId":"1086","severity":1,"message":"1154","line":27,"column":16,"nodeType":"1088","messageId":"1089","endLine":27,"endColumn":20},{"ruleId":"1086","severity":1,"message":"1155","line":27,"column":22,"nodeType":"1088","messageId":"1089","endLine":27,"endColumn":25},{"ruleId":"1086","severity":1,"message":"1157","line":27,"column":27,"nodeType":"1088","messageId":"1089","endLine":27,"endColumn":33},{"ruleId":"1086","severity":1,"message":"1159","line":27,"column":35,"nodeType":"1088","messageId":"1089","endLine":27,"endColumn":44},{"ruleId":"1086","severity":1,"message":"1105","line":29,"column":10,"nodeType":"1088","messageId":"1089","endLine":29,"endColumn":20},{"ruleId":"1086","severity":1,"message":"1107","line":30,"column":10,"nodeType":"1088","messageId":"1089","endLine":30,"endColumn":18},{"ruleId":"1086","severity":1,"message":"1108","line":32,"column":5,"nodeType":"1088","messageId":"1089","endLine":32,"endColumn":24},{"ruleId":"1086","severity":1,"message":"1109","line":33,"column":5,"nodeType":"1088","messageId":"1089","endLine":33,"endColumn":18},{"ruleId":"1086","severity":1,"message":"1110","line":34,"column":5,"nodeType":"1088","messageId":"1089","endLine":34,"endColumn":14},{"ruleId":"1086","severity":1,"message":"1111","line":35,"column":5,"nodeType":"1088","messageId":"1089","endLine":35,"endColumn":14},{"ruleId":"1086","severity":1,"message":"1112","line":36,"column":5,"nodeType":"1088","messageId":"1089","endLine":36,"endColumn":9},{"ruleId":"1086","severity":1,"message":"1113","line":37,"column":5,"nodeType":"1088","messageId":"1089","endLine":37,"endColumn":9},{"ruleId":"1086","severity":1,"message":"1114","line":38,"column":5,"nodeType":"1088","messageId":"1089","endLine":38,"endColumn":13},{"ruleId":"1086","severity":1,"message":"1115","line":39,"column":5,"nodeType":"1088","messageId":"1089","endLine":39,"endColumn":8},{"ruleId":"1086","severity":1,"message":"1116","line":40,"column":5,"nodeType":"1088","messageId":"1089","endLine":40,"endColumn":9},{"ruleId":"1086","severity":1,"message":"1117","line":41,"column":5,"nodeType":"1088","messageId":"1089","endLine":41,"endColumn":10},{"ruleId":"1086","severity":1,"message":"1118","line":42,"column":5,"nodeType":"1088","messageId":"1089","endLine":42,"endColumn":10},{"ruleId":"1086","severity":1,"message":"1120","line":44,"column":8,"nodeType":"1088","messageId":"1089","endLine":44,"endColumn":12},{"ruleId":"1086","severity":1,"message":"1183","line":45,"column":8,"nodeType":"1088","messageId":"1089","endLine":45,"endColumn":18},{"ruleId":"1086","severity":1,"message":"1184","line":46,"column":8,"nodeType":"1088","messageId":"1089","endLine":46,"endColumn":16},{"ruleId":"1086","severity":1,"message":"1122","line":49,"column":10,"nodeType":"1088","messageId":"1089","endLine":49,"endColumn":20},{"ruleId":"1086","severity":1,"message":"1123","line":50,"column":8,"nodeType":"1088","messageId":"1089","endLine":50,"endColumn":11},{"ruleId":"1086","severity":1,"message":"1124","line":51,"column":8,"nodeType":"1088","messageId":"1089","endLine":51,"endColumn":15},{"ruleId":"1086","severity":1,"message":"1217","line":53,"column":8,"nodeType":"1088","messageId":"1089","endLine":53,"endColumn":23},{"ruleId":"1086","severity":1,"message":"1218","line":76,"column":13,"nodeType":"1088","messageId":"1089","endLine":76,"endColumn":15},{"ruleId":"1086","severity":1,"message":"1219","line":80,"column":12,"nodeType":"1088","messageId":"1089","endLine":80,"endColumn":23},{"ruleId":"1086","severity":1,"message":"1188","line":81,"column":12,"nodeType":"1088","messageId":"1089","endLine":81,"endColumn":25},{"ruleId":"1086","severity":1,"message":"1220","line":81,"column":27,"nodeType":"1088","messageId":"1089","endLine":81,"endColumn":43},{"ruleId":"1086","severity":1,"message":"1126","line":83,"column":12,"nodeType":"1088","messageId":"1089","endLine":83,"endColumn":15},{"ruleId":"1086","severity":1,"message":"1127","line":84,"column":10,"nodeType":"1088","messageId":"1089","endLine":84,"endColumn":15},{"ruleId":"1086","severity":1,"message":"1221","line":84,"column":17,"nodeType":"1088","messageId":"1089","endLine":84,"endColumn":25},{"ruleId":"1086","severity":1,"message":"1222","line":85,"column":12,"nodeType":"1088","messageId":"1089","endLine":85,"endColumn":25},{"ruleId":"1086","severity":1,"message":"1190","line":86,"column":12,"nodeType":"1088","messageId":"1089","endLine":86,"endColumn":16},{"ruleId":"1086","severity":1,"message":"1304","line":89,"column":12,"nodeType":"1088","messageId":"1089","endLine":89,"endColumn":33},{"ruleId":"1086","severity":1,"message":"1223","line":90,"column":21,"nodeType":"1088","messageId":"1089","endLine":90,"endColumn":31},{"ruleId":"1248","severity":1,"message":"1305","line":120,"column":8,"nodeType":"1250","endLine":120,"endColumn":10,"suggestions":"1306"},{"ruleId":"1086","severity":1,"message":"1195","line":121,"column":11,"nodeType":"1088","messageId":"1089","endLine":121,"endColumn":21},{"ruleId":"1086","severity":1,"message":"1196","line":124,"column":11,"nodeType":"1088","messageId":"1089","endLine":124,"endColumn":18},{"ruleId":"1086","severity":1,"message":"1197","line":127,"column":11,"nodeType":"1088","messageId":"1089","endLine":127,"endColumn":22},{"ruleId":"1086","severity":1,"message":"1130","line":130,"column":11,"nodeType":"1088","messageId":"1089","endLine":130,"endColumn":23},{"ruleId":"1086","severity":1,"message":"1199","line":133,"column":11,"nodeType":"1088","messageId":"1089","endLine":133,"endColumn":19},{"ruleId":"1086","severity":1,"message":"1307","line":176,"column":11,"nodeType":"1088","messageId":"1089","endLine":176,"endColumn":22},{"ruleId":"1086","severity":1,"message":"1264","line":182,"column":11,"nodeType":"1088","messageId":"1089","endLine":182,"endColumn":24},{"ruleId":"1086","severity":1,"message":"1224","line":190,"column":11,"nodeType":"1088","messageId":"1089","endLine":190,"endColumn":17},{"ruleId":"1086","severity":1,"message":"1308","line":1,"column":17,"nodeType":"1088","messageId":"1089","endLine":1,"endColumn":25},{"ruleId":"1086","severity":1,"message":"1309","line":3,"column":13,"nodeType":"1088","messageId":"1089","endLine":3,"endColumn":22},{"ruleId":"1086","severity":1,"message":"1310","line":10,"column":11,"nodeType":"1088","messageId":"1089","endLine":10,"endColumn":19},{"ruleId":"1086","severity":1,"message":"1311","line":11,"column":11,"nodeType":"1088","messageId":"1089","endLine":11,"endColumn":24},{"ruleId":"1086","severity":1,"message":"1091","line":4,"column":5,"nodeType":"1088","messageId":"1089","endLine":4,"endColumn":19},{"ruleId":"1086","severity":1,"message":"1092","line":5,"column":5,"nodeType":"1088","messageId":"1089","endLine":5,"endColumn":18},{"ruleId":"1086","severity":1,"message":"1093","line":7,"column":8,"nodeType":"1088","messageId":"1089","endLine":7,"endColumn":22},{"ruleId":"1086","severity":1,"message":"1097","line":9,"column":51,"nodeType":"1088","messageId":"1089","endLine":9,"endColumn":68},{"ruleId":"1086","severity":1,"message":"1119","line":19,"column":10,"nodeType":"1088","messageId":"1089","endLine":19,"endColumn":21},{"ruleId":"1086","severity":1,"message":"1176","line":21,"column":8,"nodeType":"1088","messageId":"1089","endLine":21,"endColumn":13},{"ruleId":"1086","severity":1,"message":"1177","line":22,"column":8,"nodeType":"1088","messageId":"1089","endLine":22,"endColumn":18},{"ruleId":"1086","severity":1,"message":"1180","line":23,"column":8,"nodeType":"1088","messageId":"1089","endLine":23,"endColumn":24},{"ruleId":"1086","severity":1,"message":"1181","line":24,"column":8,"nodeType":"1088","messageId":"1089","endLine":24,"endColumn":17},{"ruleId":"1086","severity":1,"message":"1154","line":25,"column":16,"nodeType":"1088","messageId":"1089","endLine":25,"endColumn":20},{"ruleId":"1086","severity":1,"message":"1155","line":25,"column":22,"nodeType":"1088","messageId":"1089","endLine":25,"endColumn":25},{"ruleId":"1086","severity":1,"message":"1105","line":27,"column":10,"nodeType":"1088","messageId":"1089","endLine":27,"endColumn":20},{"ruleId":"1086","severity":1,"message":"1107","line":28,"column":10,"nodeType":"1088","messageId":"1089","endLine":28,"endColumn":18},{"ruleId":"1086","severity":1,"message":"1108","line":30,"column":5,"nodeType":"1088","messageId":"1089","endLine":30,"endColumn":24},{"ruleId":"1086","severity":1,"message":"1109","line":31,"column":5,"nodeType":"1088","messageId":"1089","endLine":31,"endColumn":18},{"ruleId":"1086","severity":1,"message":"1110","line":32,"column":5,"nodeType":"1088","messageId":"1089","endLine":32,"endColumn":14},{"ruleId":"1086","severity":1,"message":"1111","line":33,"column":5,"nodeType":"1088","messageId":"1089","endLine":33,"endColumn":14},{"ruleId":"1086","severity":1,"message":"1112","line":34,"column":5,"nodeType":"1088","messageId":"1089","endLine":34,"endColumn":9},{"ruleId":"1086","severity":1,"message":"1113","line":35,"column":5,"nodeType":"1088","messageId":"1089","endLine":35,"endColumn":9},{"ruleId":"1086","severity":1,"message":"1114","line":36,"column":5,"nodeType":"1088","messageId":"1089","endLine":36,"endColumn":13},{"ruleId":"1086","severity":1,"message":"1115","line":37,"column":5,"nodeType":"1088","messageId":"1089","endLine":37,"endColumn":8},{"ruleId":"1086","severity":1,"message":"1116","line":38,"column":5,"nodeType":"1088","messageId":"1089","endLine":38,"endColumn":9},{"ruleId":"1086","severity":1,"message":"1117","line":39,"column":5,"nodeType":"1088","messageId":"1089","endLine":39,"endColumn":10},{"ruleId":"1086","severity":1,"message":"1118","line":40,"column":5,"nodeType":"1088","messageId":"1089","endLine":40,"endColumn":10},{"ruleId":"1086","severity":1,"message":"1120","line":42,"column":8,"nodeType":"1088","messageId":"1089","endLine":42,"endColumn":12},{"ruleId":"1086","severity":1,"message":"1122","line":47,"column":10,"nodeType":"1088","messageId":"1089","endLine":47,"endColumn":20},{"ruleId":"1086","severity":1,"message":"1123","line":48,"column":8,"nodeType":"1088","messageId":"1089","endLine":48,"endColumn":11},{"ruleId":"1086","severity":1,"message":"1124","line":49,"column":8,"nodeType":"1088","messageId":"1089","endLine":49,"endColumn":15},{"ruleId":"1086","severity":1,"message":"1217","line":51,"column":8,"nodeType":"1088","messageId":"1089","endLine":51,"endColumn":23},{"ruleId":"1086","severity":1,"message":"1219","line":75,"column":12,"nodeType":"1088","messageId":"1089","endLine":75,"endColumn":23},{"ruleId":"1086","severity":1,"message":"1188","line":76,"column":12,"nodeType":"1088","messageId":"1089","endLine":76,"endColumn":25},{"ruleId":"1086","severity":1,"message":"1220","line":76,"column":27,"nodeType":"1088","messageId":"1089","endLine":76,"endColumn":43},{"ruleId":"1086","severity":1,"message":"1207","line":77,"column":12,"nodeType":"1088","messageId":"1089","endLine":77,"endColumn":24},{"ruleId":"1086","severity":1,"message":"1126","line":78,"column":12,"nodeType":"1088","messageId":"1089","endLine":78,"endColumn":15},{"ruleId":"1086","severity":1,"message":"1127","line":80,"column":10,"nodeType":"1088","messageId":"1089","endLine":80,"endColumn":15},{"ruleId":"1086","severity":1,"message":"1221","line":80,"column":17,"nodeType":"1088","messageId":"1089","endLine":80,"endColumn":25},{"ruleId":"1086","severity":1,"message":"1222","line":81,"column":12,"nodeType":"1088","messageId":"1089","endLine":81,"endColumn":25},{"ruleId":"1086","severity":1,"message":"1196","line":128,"column":11,"nodeType":"1088","messageId":"1089","endLine":128,"endColumn":18},{"ruleId":"1086","severity":1,"message":"1130","line":134,"column":11,"nodeType":"1088","messageId":"1089","endLine":134,"endColumn":23},{"ruleId":"1086","severity":1,"message":"1199","line":145,"column":11,"nodeType":"1088","messageId":"1089","endLine":145,"endColumn":19},"no-native-reassign",["1312"],"no-negated-in-lhs",["1313"],"no-unused-vars","'Login' is defined but never used.","Identifier","unusedVar","'SchoolRegistration' is defined but never used.","'LinearProgress' is defined but never used.","'OutlinedInput' is defined but never used.","'VisibilityIcon' is defined but never used.","'Dialog' is defined but never used.","'DialogActions' is defined but never used.","'DialogContent' is defined but never used.","'DialogContentText' is defined but never used.","'DialogTitle' is defined but never used.","'TableRow' is defined but never used.","'Table' is defined but never used.","'TableHead' is defined but never used.","'TableBody' is defined but never used.","'TableCell' is defined but never used.","'schooleRegistration' is defined but never used.","'useContext' is defined but never used.","'useEffect' is defined but never used.","'useTheme' is defined but never used.","'ResponsiveContainer' is defined but never used.","'ComposedChart' is defined but never used.","'AreaChart' is defined but never used.","'LineChart' is defined but never used.","'Line' is defined but never used.","'Area' is defined but never used.","'PieChart' is defined but never used.","'Pie' is defined but never used.","'Cell' is defined but never used.","'YAxis' is defined but never used.","'XAxis' is defined but never used.","'yupResolver' is defined but never used.","'mock' is defined but never used.","'Widget' is defined but never used.","'Typography' is defined but never used.","'Dot' is defined but never used.","'BigStat' is defined but never used.","'withStyles' is defined but never used.","'age' is assigned a value but never used.","'error' is assigned a value but never used.","'schooleRegistrationList' is assigned a value but never used.","'setSchooleRegistration' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'getSchooleRegistrationList' is assigned a value but never used.","'Header' is defined but never used.","'Sidebar' is defined but never used.","'Dashboard' is defined but never used.","'Notifications' is defined but never used.","'Maps' is defined but never used.","'Icons' is defined but never used.","'Charts' is defined but never used.","'Category' is defined but never used.","'classnames' is defined but never used.","'logo' is defined but never used.","'google' is defined but never used.","'lofginUser' is defined but never used.","'PageTitle' is defined but never used.","'nameValue' is assigned a value but never used.","'setNameValue' is assigned a value but never used.","'SchooRegistration' is defined but never used.","'ActivityService' is defined but never used.","'IconButton' is defined but never used.","'InputBase' is defined but never used.","'MenuItem' is defined but never used.","'Fab' is defined but never used.","'Button' is defined but never used.","'Card' is defined but never used.","'Box' is defined but never used.","'FormControl' is defined but never used.","'Select' is defined but never used.","'InputLabel' is defined but never used.","'TextField' is defined but never used.","'BrowserRouter' is defined but never used.","'Routes' is defined but never used.","'Route' is defined but never used.","'MenuIcon' is defined but never used.","'SendIcon' is defined but never used.","'ArrowBackIcon' is defined but never used.","'fade' is defined but never used.","'classNames' is defined but never used.","'Badge' is defined but never used.","'UserAvatar' is defined but never used.","'messages' is assigned a value but never used.","'SearchIcon' is defined but never used.","'Checkbox' is defined but never used.","'Divider' is defined but never used.","'AttendenceService' is defined but never used.","'Yup' is defined but never used.","'Radio' is defined but never used.","'RadioGroup' is defined but never used.","'ListItem' is defined but never used.","'ListItemText' is defined but never used.","'FormControlLabel' is defined but never used.","'FormLabel' is defined but never used.","'useFormik' is defined but never used.","'DeleteIcon' is defined but never used.","'EditIcon' is defined but never used.","'alpha' is defined but never used.","'reportList' is assigned a value but never used.","'setReportList' is assigned a value but never used.","'classNameList' is assigned a value but never used.","'activityIdList' is assigned a value but never used.","'open' is assigned a value but never used.","'dateValue' is assigned a value but never used.","'setDateValue' is assigned a value but never used.","'activity' is assigned a value but never used.","'setActivity' is assigned a value but never used.","'handleOpen' is assigned a value but never used.","'onclick' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'ageChange' is assigned a value but never used.","'onSubmit' is assigned a value but never used.","'keys' is assigned a value but never used.","'getClassNameList' is assigned a value but never used.","'handleCheck' is assigned a value but never used.","'getStudentActivityList' is assigned a value but never used.","'AddIcon' is defined but never used.","'activityList' is assigned a value but never used.","'setActivityList' is assigned a value but never used.","'addClassList' is assigned a value but never used.","'setAddClassList' is assigned a value but never used.","'setActivityIdList' is assigned a value but never used.","'findAttendenceList' is assigned a value but never used.","'editActivity' is assigned a value but never used.","'deleteActivity' is assigned a value but never used.","'StyledTableCell' is assigned a value but never used.","'tableHeaders' is assigned a value but never used.","'Link' is defined but never used.","'TeacherService' is defined but never used.","'AddClassService' is defined but never used.","'id' is assigned a value but never used.","'teacherList' is assigned a value but never used.","'setClassNameList' is assigned a value but never used.","'setError' is assigned a value but never used.","'teacherIdList' is assigned a value but never used.","'setStudent' is assigned a value but never used.","'formik' is assigned a value but never used.","'subActivityIdList' is assigned a value but never used.","'tabelIdList' is assigned a value but never used.","'getAddClassList' is assigned a value but never used.","'Calendar' is defined but never used.","'date' is assigned a value but never used.","'setDate' is assigned a value but never used.","'events' is assigned a value but never used.","'setEvents' is assigned a value but never used.","'tooltipInstance' is assigned a value but never used.","'validationSchema' is assigned a value but never used.","'FullCalendar' is defined but never used.","'dayGridPlugin' is defined but never used.","'deleteActivityTabel' is assigned a value but never used.","'isAdd' is assigned a value but never used.","'setIsAdd' is assigned a value but never used.","'setSubActivityIdList' is assigned a value but never used.","'week' is assigned a value but never used.","'year' is assigned a value but never used.","'ExcelExportData' is assigned a value but never used.","no-dupe-keys","Duplicate key 'date'.","ObjectExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'onSubmit'. Either include it or remove the dependency array.","ArrayExpression",["1314"],"no-whitespace-before-property","Unexpected whitespace before property superActivityName.","MemberExpression","unexpectedWhitespace",{"range":"1315","text":"1316"},"'classList' is assigned a value but never used.","'useMemo' is defined but never used.","'cityList' is assigned a value but never used.","'setCityList' is assigned a value but never used.","'studentList' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getByIdList' and 'id'. Either include them or remove the dependency array.",["1317"],"'deleteStudent' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'CategoryServices' is defined but never used.","'NotificationsIcon' is defined but never used.","'TypographyIcon' is defined but never used.","no-useless-rename","Import HotTub unnecessarily renamed.","ImportSpecifier","unnecessarilyRenamed",{"range":"1318","text":"1319"},"'TableIcon' is defined but never used.","Import SvgIconComponent unnecessarily renamed.",{"range":"1320","text":"1321"},"'SvgIconComponent' is defined but never used.","Import CalendarToday unnecessarily renamed.",{"range":"1322","text":"1323"},"Import AccessAlarmSharp unnecessarily renamed.",{"range":"1324","text":"1325"},"Import Create unnecessarily renamed.",{"range":"1326","text":"1327"},"'BuildTwoTone' is defined but never used.","'isMailsUnread' is assigned a value but never used.","'isNotificationsUnread' is assigned a value but never used.","'Menu' is defined but never used.","'MoreIcon' is defined but never used.","'moreButtonRef' is assigned a value but never used.","'isMoreMenuOpen' is assigned a value but never used.","'StyledTableRow' is assigned a value but never used.","'mainChartData' is assigned a value but never used.","'theme' is assigned a value but never used.","'mainChartState' is assigned a value but never used.","'setMainChartState' is assigned a value but never used.",["1312"],["1313"],"React Hook useEffect has missing dependencies: 'onSubmit', 'week.end', and 'week.start'. Either include them or remove the dependency array.",["1328"],{"range":"1329","text":"1316"},"'addUserPermitionsList' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getStudentList'. Either include it or remove the dependency array.",["1330"],"'editStudent' is assigned a value but never used.","'useState' is defined but never used.","'FileSaver' is defined but never used.","'fileType' is assigned a value but never used.","'fileExtension' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"1331","fix":"1332"},[8927,8929],".",{"desc":"1333","fix":"1334"},[271,287],"HotTub",[476,512],"SvgIconComponent",[517,547],"CalendarToday",[552,588],"AccessAlarmSharp",[593,609],"Create",{"desc":"1335","fix":"1336"},[7730,7732],{"desc":"1337","fix":"1338"},"Update the dependencies array to be: [onSubmit]",{"range":"1339","text":"1340"},"Update the dependencies array to be: [getByIdList, id]",{"range":"1341","text":"1342"},"Update the dependencies array to be: [onSubmit, week.end, week.start]",{"range":"1343","text":"1344"},"Update the dependencies array to be: [getStudentList]",{"range":"1345","text":"1346"},[7719,7721],"[onSubmit]",[3080,3082],"[getByIdList, id]",[5825,5827],"[onSubmit, week.end, week.start]",[4115,4117],"[getStudentList]"]